// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module foc_frontend_SVPWM_ap_fixed_48_24_5_3_0_s (
        ap_ready,
        Va,
        Vb,
        Vc,
        ap_return_0,
        ap_return_1,
        ap_return_2
);


output   ap_ready;
input  [47:0] Va;
input  [47:0] Vb;
input  [47:0] Vc;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;

wire  signed [47:0] icmp_ln1548_fu_48_p0;
wire  signed [47:0] icmp_ln1548_fu_48_p1;
wire   [0:0] icmp_ln1548_fu_48_p2;
wire  signed [47:0] min_fu_54_p1;
wire  signed [47:0] min_fu_54_p2;
wire   [47:0] min_fu_54_p3;
wire  signed [47:0] icmp_ln1548_6_fu_62_p1;
wire  signed [47:0] tmp_s_fu_78_p1;
wire   [0:0] icmp_ln1548_6_fu_62_p2;
wire   [46:0] tmp_fu_68_p4;
wire   [46:0] tmp_s_fu_78_p4;
wire  signed [47:0] sext_ln712_fu_96_p0;
wire   [46:0] rhs_fu_88_p3;
wire  signed [48:0] sext_ln712_fu_96_p1;
wire  signed [48:0] sext_ln712_6_fu_100_p1;
wire   [48:0] ret_V_29_fu_104_p2;
wire   [23:0] trunc_ln902_fu_128_p1;
wire   [15:0] ret_V_cast_fu_110_p4;
wire   [0:0] icmp_ln902_fu_132_p2;
wire   [15:0] ret_V_fu_138_p2;
wire   [0:0] p_Result_s_fu_120_p3;
wire   [15:0] select_ln901_fu_144_p3;
wire  signed [47:0] sext_ln712_7_fu_160_p0;
wire  signed [48:0] sext_ln712_7_fu_160_p1;
wire   [48:0] ret_V_30_fu_164_p2;
wire   [23:0] trunc_ln902_6_fu_188_p1;
wire   [15:0] ret_V_39_cast_fu_170_p4;
wire   [0:0] icmp_ln902_6_fu_192_p2;
wire   [15:0] ret_V_24_fu_198_p2;
wire   [0:0] p_Result_25_fu_180_p3;
wire   [15:0] select_ln901_6_fu_204_p3;
wire  signed [47:0] sext_ln712_8_fu_220_p0;
wire  signed [48:0] sext_ln712_8_fu_220_p1;
wire   [48:0] ret_V_31_fu_224_p2;
wire   [23:0] trunc_ln902_7_fu_248_p1;
wire   [15:0] ret_V_43_cast_fu_230_p4;
wire   [0:0] icmp_ln902_7_fu_252_p2;
wire   [15:0] ret_V_27_fu_258_p2;
wire   [0:0] p_Result_26_fu_240_p3;
wire   [15:0] select_ln901_7_fu_264_p3;
wire   [15:0] ret_V_22_fu_152_p3;
wire   [15:0] ret_V_25_fu_212_p3;
wire   [15:0] ret_V_28_fu_272_p3;
wire    ap_ce_reg;

assign ap_ready = 1'b1;

assign ap_return_0 = ret_V_22_fu_152_p3;

assign ap_return_1 = ret_V_25_fu_212_p3;

assign ap_return_2 = ret_V_28_fu_272_p3;

assign icmp_ln1548_6_fu_62_p1 = Vc;

assign icmp_ln1548_6_fu_62_p2 = (($signed(min_fu_54_p3) < $signed(icmp_ln1548_6_fu_62_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1548_fu_48_p0 = Va;

assign icmp_ln1548_fu_48_p1 = Vb;

assign icmp_ln1548_fu_48_p2 = (($signed(icmp_ln1548_fu_48_p0) < $signed(icmp_ln1548_fu_48_p1)) ? 1'b1 : 1'b0);

assign icmp_ln902_6_fu_192_p2 = ((trunc_ln902_6_fu_188_p1 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_7_fu_252_p2 = ((trunc_ln902_7_fu_248_p1 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_fu_132_p2 = ((trunc_ln902_fu_128_p1 == 24'd0) ? 1'b1 : 1'b0);

assign min_fu_54_p1 = Va;

assign min_fu_54_p2 = Vb;

assign min_fu_54_p3 = ((icmp_ln1548_fu_48_p2[0:0] == 1'b1) ? min_fu_54_p1 : min_fu_54_p2);

assign p_Result_25_fu_180_p3 = ret_V_30_fu_164_p2[32'd48];

assign p_Result_26_fu_240_p3 = ret_V_31_fu_224_p2[32'd48];

assign p_Result_s_fu_120_p3 = ret_V_29_fu_104_p2[32'd48];

assign ret_V_22_fu_152_p3 = ((p_Result_s_fu_120_p3[0:0] == 1'b1) ? select_ln901_fu_144_p3 : ret_V_cast_fu_110_p4);

assign ret_V_24_fu_198_p2 = (ret_V_39_cast_fu_170_p4 + 16'd1);

assign ret_V_25_fu_212_p3 = ((p_Result_25_fu_180_p3[0:0] == 1'b1) ? select_ln901_6_fu_204_p3 : ret_V_39_cast_fu_170_p4);

assign ret_V_27_fu_258_p2 = (ret_V_43_cast_fu_230_p4 + 16'd1);

assign ret_V_28_fu_272_p3 = ((p_Result_26_fu_240_p3[0:0] == 1'b1) ? select_ln901_7_fu_264_p3 : ret_V_43_cast_fu_230_p4);

assign ret_V_29_fu_104_p2 = ($signed(sext_ln712_fu_96_p1) + $signed(sext_ln712_6_fu_100_p1));

assign ret_V_30_fu_164_p2 = ($signed(sext_ln712_7_fu_160_p1) + $signed(sext_ln712_6_fu_100_p1));

assign ret_V_31_fu_224_p2 = ($signed(sext_ln712_8_fu_220_p1) + $signed(sext_ln712_6_fu_100_p1));

assign ret_V_39_cast_fu_170_p4 = {{ret_V_30_fu_164_p2[39:24]}};

assign ret_V_43_cast_fu_230_p4 = {{ret_V_31_fu_224_p2[39:24]}};

assign ret_V_cast_fu_110_p4 = {{ret_V_29_fu_104_p2[39:24]}};

assign ret_V_fu_138_p2 = (ret_V_cast_fu_110_p4 + 16'd1);

assign rhs_fu_88_p3 = ((icmp_ln1548_6_fu_62_p2[0:0] == 1'b1) ? tmp_fu_68_p4 : tmp_s_fu_78_p4);

assign select_ln901_6_fu_204_p3 = ((icmp_ln902_6_fu_192_p2[0:0] == 1'b1) ? ret_V_39_cast_fu_170_p4 : ret_V_24_fu_198_p2);

assign select_ln901_7_fu_264_p3 = ((icmp_ln902_7_fu_252_p2[0:0] == 1'b1) ? ret_V_43_cast_fu_230_p4 : ret_V_27_fu_258_p2);

assign select_ln901_fu_144_p3 = ((icmp_ln902_fu_132_p2[0:0] == 1'b1) ? ret_V_cast_fu_110_p4 : ret_V_fu_138_p2);

assign sext_ln712_6_fu_100_p1 = $signed(rhs_fu_88_p3);

assign sext_ln712_7_fu_160_p0 = Vb;

assign sext_ln712_7_fu_160_p1 = sext_ln712_7_fu_160_p0;

assign sext_ln712_8_fu_220_p0 = Vc;

assign sext_ln712_8_fu_220_p1 = sext_ln712_8_fu_220_p0;

assign sext_ln712_fu_96_p0 = Va;

assign sext_ln712_fu_96_p1 = sext_ln712_fu_96_p0;

assign tmp_fu_68_p4 = {{min_fu_54_p3[47:1]}};

assign tmp_s_fu_78_p1 = Vc;

assign tmp_s_fu_78_p4 = {{tmp_s_fu_78_p1[47:1]}};

assign trunc_ln902_6_fu_188_p1 = ret_V_30_fu_164_p2[23:0];

assign trunc_ln902_7_fu_248_p1 = ret_V_31_fu_224_p2[23:0];

assign trunc_ln902_fu_128_p1 = ret_V_29_fu_104_p2[23:0];

endmodule //foc_frontend_SVPWM_ap_fixed_48_24_5_3_0_s
