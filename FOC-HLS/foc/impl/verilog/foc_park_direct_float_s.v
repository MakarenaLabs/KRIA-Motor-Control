// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module foc_park_direct_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Ialpha,
        Ibeta,
        angle,
        Id,
        Id_ap_vld,
        Iq,
        Iq_ap_vld,
        grp_fu_2056_p_din0,
        grp_fu_2056_p_din1,
        grp_fu_2056_p_dout0,
        grp_fu_2056_p_ce,
        grp_fu_2060_p_din0,
        grp_fu_2060_p_din1,
        grp_fu_2060_p_dout0,
        grp_fu_2060_p_ce,
        grp_fu_2076_p_din0,
        grp_fu_2076_p_dout0,
        grp_fu_2076_p_ce,
        grp_fu_709_p_din0,
        grp_fu_709_p_din1,
        grp_fu_709_p_opcode,
        grp_fu_709_p_dout0,
        grp_fu_709_p_ce,
        grp_fu_2079_p_din0,
        grp_fu_2079_p_din1,
        grp_fu_2079_p_opcode,
        grp_fu_2079_p_dout0,
        grp_fu_2079_p_ce,
        grp_fu_699_p_din0,
        grp_fu_699_p_din1,
        grp_fu_699_p_opcode,
        grp_fu_699_p_dout0,
        grp_fu_699_p_ce,
        grp_fu_2072_p_din0,
        grp_fu_2072_p_din1,
        grp_fu_2072_p_opcode,
        grp_fu_2072_p_dout0,
        grp_fu_2072_p_ce,
        grp_fu_2064_p_din0,
        grp_fu_2064_p_din1,
        grp_fu_2064_p_dout0,
        grp_fu_2064_p_ce,
        grp_fu_2068_p_din0,
        grp_fu_2068_p_din1,
        grp_fu_2068_p_dout0,
        grp_fu_2068_p_ce
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Ialpha;
input  [31:0] Ibeta;
input  [9:0] angle;
output  [31:0] Id;
output   Id_ap_vld;
output  [31:0] Iq;
output   Iq_ap_vld;
output  [31:0] grp_fu_2056_p_din0;
output  [31:0] grp_fu_2056_p_din1;
input  [31:0] grp_fu_2056_p_dout0;
output   grp_fu_2056_p_ce;
output  [31:0] grp_fu_2060_p_din0;
output  [31:0] grp_fu_2060_p_din1;
input  [31:0] grp_fu_2060_p_dout0;
output   grp_fu_2060_p_ce;
output  [31:0] grp_fu_2076_p_din0;
input  [31:0] grp_fu_2076_p_dout0;
output   grp_fu_2076_p_ce;
output  [31:0] grp_fu_709_p_din0;
output  [31:0] grp_fu_709_p_din1;
output  [4:0] grp_fu_709_p_opcode;
input  [0:0] grp_fu_709_p_dout0;
output   grp_fu_709_p_ce;
output  [31:0] grp_fu_2079_p_din0;
output  [31:0] grp_fu_2079_p_din1;
output  [4:0] grp_fu_2079_p_opcode;
input  [0:0] grp_fu_2079_p_dout0;
output   grp_fu_2079_p_ce;
output  [31:0] grp_fu_699_p_din0;
output  [31:0] grp_fu_699_p_din1;
output  [0:0] grp_fu_699_p_opcode;
input  [31:0] grp_fu_699_p_dout0;
output   grp_fu_699_p_ce;
output  [31:0] grp_fu_2072_p_din0;
output  [31:0] grp_fu_2072_p_din1;
output  [0:0] grp_fu_2072_p_opcode;
input  [31:0] grp_fu_2072_p_dout0;
output   grp_fu_2072_p_ce;
output  [31:0] grp_fu_2064_p_din0;
output  [31:0] grp_fu_2064_p_din1;
input  [31:0] grp_fu_2064_p_dout0;
output   grp_fu_2064_p_ce;
output  [31:0] grp_fu_2068_p_din0;
output  [31:0] grp_fu_2068_p_din1;
input  [31:0] grp_fu_2068_p_dout0;
output   grp_fu_2068_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg Id_ap_vld;
reg Iq_ap_vld;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] sine_d_address0;
reg    sine_d_ce0;
wire   [31:0] sine_d_q0;
wire   [9:0] cosine_d_address0;
reg    cosine_d_ce0;
wire   [31:0] cosine_d_q0;
reg   [31:0] sine_d_load_reg_374;
wire    ap_CS_fsm_state2;
reg   [31:0] cosine_d_load_reg_380;
reg   [31:0] mul_reg_398;
wire    ap_CS_fsm_state5;
reg   [31:0] mul3_reg_403;
reg   [31:0] mul4_reg_408;
reg   [31:0] mul5_reg_413;
reg   [31:0] dc_reg_418;
wire    ap_CS_fsm_state9;
reg   [31:0] dc_2_reg_426;
wire   [31:0] bitcast_ln354_fu_155_p1;
wire    ap_CS_fsm_state11;
wire   [0:0] or_ln30_fu_186_p2;
reg   [0:0] or_ln30_reg_439;
reg   [0:0] tmp_6_reg_446;
reg   [0:0] tmp_7_reg_451;
wire   [31:0] bitcast_ln354_2_fu_203_p1;
wire   [0:0] or_ln34_fu_234_p2;
reg   [0:0] or_ln34_reg_461;
wire   [0:0] grp_fu_126_p2;
reg   [0:0] tmp_1_reg_468;
wire   [0:0] grp_fu_131_p2;
reg   [0:0] tmp_2_reg_473;
reg   [0:0] tmp_5_reg_478;
wire    ap_CS_fsm_state12;
wire  signed [31:0] sext_ln31_2_fu_280_p1;
reg   [0:0] tmp_s_reg_488;
wire   [63:0] zext_ln19_fu_138_p1;
wire    ap_CS_fsm_state15;
wire  signed [31:0] grp_fu_113_p0;
reg   [31:0] grp_fu_116_p0;
reg   [31:0] grp_fu_116_p1;
wire    ap_CS_fsm_state10;
reg   [31:0] grp_fu_121_p0;
reg   [31:0] grp_fu_121_p1;
wire   [31:0] data_V_fu_144_p1;
wire   [30:0] p_Result_s_fu_147_p1;
wire   [31:0] zext_ln368_fu_151_p1;
wire   [7:0] tmp_fu_160_p4;
wire   [22:0] trunc_ln30_fu_170_p1;
wire   [0:0] icmp_ln30_2_fu_180_p2;
wire   [0:0] icmp_ln30_fu_174_p2;
wire   [31:0] data_V_2_fu_192_p1;
wire   [30:0] p_Result_2_fu_195_p1;
wire   [31:0] zext_ln368_2_fu_199_p1;
wire   [7:0] tmp_8_fu_208_p4;
wire   [22:0] trunc_ln34_fu_218_p1;
wire   [0:0] icmp_ln34_2_fu_228_p2;
wire   [0:0] icmp_ln34_fu_222_p2;
wire   [0:0] and_ln12_fu_240_p2;
wire   [0:0] and_ln12_4_fu_248_p2;
wire   [1:0] zext_ln12_fu_244_p1;
wire   [1:0] zext_ln12_4_fu_252_p1;
wire  signed [1:0] sub_ln12_fu_256_p2;
wire   [16:0] shl_ln_fu_266_p3;
wire  signed [16:0] sext_ln31_fu_262_p1;
wire   [16:0] sub_ln31_fu_274_p2;
wire   [0:0] and_ln12_5_fu_285_p2;
wire   [0:0] and_ln12_6_fu_293_p2;
wire   [1:0] zext_ln12_5_fu_289_p1;
wire   [1:0] zext_ln12_6_fu_297_p1;
wire  signed [1:0] sub_ln12_2_fu_301_p2;
wire   [16:0] shl_ln2_fu_311_p3;
wire  signed [16:0] sext_ln35_fu_307_p1;
wire   [16:0] sub_ln35_fu_319_p2;
wire   [0:0] and_ln30_fu_330_p2;
wire   [0:0] and_ln34_fu_341_p2;
wire   [31:0] grp_fu_113_p1;
reg   [4:0] grp_fu_121_opcode;
reg   [14:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
end

foc_park_inverse_float_s_sine_i_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
sine_d_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sine_d_address0),
    .ce0(sine_d_ce0),
    .q0(sine_d_q0)
);

foc_park_inverse_float_s_cosine_i_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
cosine_d_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cosine_d_address0),
    .ce0(cosine_d_ce0),
    .q0(cosine_d_q0)
);

foc_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_113_p0),
    .ce(1'b1),
    .dout(grp_fu_113_p1)
);

foc_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dc_2_reg_426),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_126_p2)
);

foc_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dc_2_reg_426),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_131_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cosine_d_load_reg_380 <= cosine_d_q0;
        sine_d_load_reg_374 <= sine_d_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dc_2_reg_426 <= grp_fu_2072_p_dout0;
        dc_reg_418 <= grp_fu_699_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul3_reg_403 <= grp_fu_2068_p_dout0;
        mul4_reg_408 <= grp_fu_2056_p_dout0;
        mul5_reg_413 <= grp_fu_2060_p_dout0;
        mul_reg_398 <= grp_fu_2064_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        or_ln30_reg_439 <= or_ln30_fu_186_p2;
        or_ln34_reg_461 <= or_ln34_fu_234_p2;
        tmp_1_reg_468 <= grp_fu_126_p2;
        tmp_2_reg_473 <= grp_fu_131_p2;
        tmp_6_reg_446 <= grp_fu_709_p_dout0;
        tmp_7_reg_451 <= grp_fu_2079_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_5_reg_478 <= grp_fu_709_p_dout0;
        tmp_s_reg_488 <= grp_fu_2079_p_dout0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        Id_ap_vld = 1'b1;
    end else begin
        Id_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        Iq_ap_vld = 1'b1;
    end else begin
        Iq_ap_vld = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cosine_d_ce0 = 1'b1;
    end else begin
        cosine_d_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_116_p0 = bitcast_ln354_fu_155_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_116_p0 = dc_reg_418;
    end else begin
        grp_fu_116_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_116_p1 = 32'd1191181824;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_116_p1 = 32'd0;
    end else begin
        grp_fu_116_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_121_opcode = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_121_opcode = 5'd4;
    end else begin
        grp_fu_121_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_121_p0 = bitcast_ln354_2_fu_203_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_121_p0 = dc_reg_418;
    end else begin
        grp_fu_121_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_121_p1 = 32'd1191181824;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_121_p1 = 32'd0;
    end else begin
        grp_fu_121_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sine_d_ce0 = 1'b1;
    end else begin
        sine_d_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Id = ((and_ln30_fu_330_p2[0:0] == 1'b1) ? grp_fu_2076_p_dout0 : dc_reg_418);

assign Iq = ((and_ln34_fu_341_p2[0:0] == 1'b1) ? grp_fu_113_p1 : dc_2_reg_426);

assign and_ln12_4_fu_248_p2 = (tmp_7_reg_451 & or_ln30_reg_439);

assign and_ln12_5_fu_285_p2 = (tmp_1_reg_468 & or_ln34_reg_461);

assign and_ln12_6_fu_293_p2 = (tmp_2_reg_473 & or_ln34_reg_461);

assign and_ln12_fu_240_p2 = (tmp_6_reg_446 & or_ln30_reg_439);

assign and_ln30_fu_330_p2 = (tmp_5_reg_478 & or_ln30_reg_439);

assign and_ln34_fu_341_p2 = (tmp_s_reg_488 & or_ln34_reg_461);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln354_2_fu_203_p1 = zext_ln368_2_fu_199_p1;

assign bitcast_ln354_fu_155_p1 = zext_ln368_fu_151_p1;

assign cosine_d_address0 = zext_ln19_fu_138_p1;

assign data_V_2_fu_192_p1 = dc_2_reg_426;

assign data_V_fu_144_p1 = dc_reg_418;

assign grp_fu_113_p0 = $signed(sub_ln35_fu_319_p2);

assign grp_fu_2056_p_ce = 1'b1;

assign grp_fu_2056_p_din0 = cosine_d_load_reg_380;

assign grp_fu_2056_p_din1 = Ibeta;

assign grp_fu_2060_p_ce = 1'b1;

assign grp_fu_2060_p_din0 = sine_d_load_reg_374;

assign grp_fu_2060_p_din1 = Ibeta;

assign grp_fu_2064_p_ce = 1'b1;

assign grp_fu_2064_p_din0 = cosine_d_load_reg_380;

assign grp_fu_2064_p_din1 = Ialpha;

assign grp_fu_2068_p_ce = 1'b1;

assign grp_fu_2068_p_din0 = sine_d_load_reg_374;

assign grp_fu_2068_p_din1 = Ialpha;

assign grp_fu_2072_p_ce = 1'b1;

assign grp_fu_2072_p_din0 = mul4_reg_408;

assign grp_fu_2072_p_din1 = mul3_reg_403;

assign grp_fu_2072_p_opcode = 2'd1;

assign grp_fu_2076_p_ce = 1'b1;

assign grp_fu_2076_p_din0 = sext_ln31_2_fu_280_p1;

assign grp_fu_2079_p_ce = 1'b1;

assign grp_fu_2079_p_din0 = grp_fu_121_p0;

assign grp_fu_2079_p_din1 = grp_fu_121_p1;

assign grp_fu_2079_p_opcode = grp_fu_121_opcode;

assign grp_fu_699_p_ce = 1'b1;

assign grp_fu_699_p_din0 = mul_reg_398;

assign grp_fu_699_p_din1 = mul5_reg_413;

assign grp_fu_699_p_opcode = 2'd0;

assign grp_fu_709_p_ce = 1'b1;

assign grp_fu_709_p_din0 = grp_fu_116_p0;

assign grp_fu_709_p_din1 = grp_fu_116_p1;

assign grp_fu_709_p_opcode = 5'd2;

assign icmp_ln30_2_fu_180_p2 = ((trunc_ln30_fu_170_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_174_p2 = ((tmp_fu_160_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln34_2_fu_228_p2 = ((trunc_ln34_fu_218_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_222_p2 = ((tmp_8_fu_208_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln30_fu_186_p2 = (icmp_ln30_fu_174_p2 | icmp_ln30_2_fu_180_p2);

assign or_ln34_fu_234_p2 = (icmp_ln34_fu_222_p2 | icmp_ln34_2_fu_228_p2);

assign p_Result_2_fu_195_p1 = data_V_2_fu_192_p1[30:0];

assign p_Result_s_fu_147_p1 = data_V_fu_144_p1[30:0];

assign sext_ln31_2_fu_280_p1 = $signed(sub_ln31_fu_274_p2);

assign sext_ln31_fu_262_p1 = sub_ln12_fu_256_p2;

assign sext_ln35_fu_307_p1 = sub_ln12_2_fu_301_p2;

assign shl_ln2_fu_311_p3 = {{sub_ln12_2_fu_301_p2}, {15'd0}};

assign shl_ln_fu_266_p3 = {{sub_ln12_fu_256_p2}, {15'd0}};

assign sine_d_address0 = zext_ln19_fu_138_p1;

assign sub_ln12_2_fu_301_p2 = (zext_ln12_5_fu_289_p1 - zext_ln12_6_fu_297_p1);

assign sub_ln12_fu_256_p2 = (zext_ln12_fu_244_p1 - zext_ln12_4_fu_252_p1);

assign sub_ln31_fu_274_p2 = ($signed(shl_ln_fu_266_p3) - $signed(sext_ln31_fu_262_p1));

assign sub_ln35_fu_319_p2 = ($signed(shl_ln2_fu_311_p3) - $signed(sext_ln35_fu_307_p1));

assign tmp_8_fu_208_p4 = {{data_V_2_fu_192_p1[30:23]}};

assign tmp_fu_160_p4 = {{data_V_fu_144_p1[30:23]}};

assign trunc_ln30_fu_170_p1 = data_V_fu_144_p1[22:0];

assign trunc_ln34_fu_218_p1 = data_V_2_fu_192_p1[22:0];

assign zext_ln12_4_fu_252_p1 = and_ln12_4_fu_248_p2;

assign zext_ln12_5_fu_289_p1 = and_ln12_5_fu_285_p2;

assign zext_ln12_6_fu_297_p1 = and_ln12_6_fu_293_p2;

assign zext_ln12_fu_244_p1 = and_ln12_fu_240_p2;

assign zext_ln19_fu_138_p1 = angle;

assign zext_ln368_2_fu_199_p1 = p_Result_2_fu_195_p1;

assign zext_ln368_fu_151_p1 = p_Result_s_fu_147_p1;

endmodule //foc_park_direct_float_s
