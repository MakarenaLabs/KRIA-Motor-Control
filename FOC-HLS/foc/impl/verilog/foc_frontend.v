// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="foc_frontend_foc_frontend,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=88,HLS_SYN_TPT=none,HLS_SYN_MEM=13,HLS_SYN_DSP=0,HLS_SYN_FF=15184,HLS_SYN_LUT=23054,HLS_VERSION=2021_2}" *)

module foc_frontend (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        A_TDATA,
        A_TVALID,
        A_TREADY,
        A_TKEEP,
        A_TSTRB,
        A_TLAST,
        B_TDATA,
        B_TVALID,
        B_TREADY,
        B_TKEEP,
        B_TSTRB,
        B_TLAST,
        C_TDATA,
        C_TVALID,
        C_TREADY,
        C_TKEEP,
        C_TSTRB,
        C_TLAST,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input  [79:0] A_TDATA;
input   A_TVALID;
output   A_TREADY;
input  [9:0] A_TKEEP;
input  [9:0] A_TSTRB;
input  [0:0] A_TLAST;
output  [63:0] B_TDATA;
output   B_TVALID;
input   B_TREADY;
output  [7:0] B_TKEEP;
output  [7:0] B_TSTRB;
output  [0:0] B_TLAST;
output  [63:0] C_TDATA;
output   C_TVALID;
input   C_TREADY;
output  [7:0] C_TKEEP;
output  [7:0] C_TSTRB;
output  [0:0] C_TLAST;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;

wire   [0:0] ap_local_deadlock;
 reg    ap_rst_n_inv;
reg   [2:0] control_address0;
reg    control_ce0;
wire   [31:0] control_q0;
reg   [3:0] logger_address0;
reg    logger_ce0;
reg    logger_we0;
reg   [31:0] logger_d0;
reg   [31:0] velocity_accum;
reg   [4:0] buffer_velocity_address0;
reg    buffer_velocity_ce0;
reg    buffer_velocity_we0;
reg   [31:0] buffer_velocity_d0;
wire   [31:0] buffer_velocity_q0;
reg   [31:0] Y1a_prev;
reg   [31:0] Y1b_prev;
reg   [31:0] Y2a_prev;
reg   [31:0] Y2b_prev;
reg   [31:0] ierr;
reg    A_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state17;
wire   [2:0] control_addr_reg_418;
wire    ap_CS_fsm_state1;
wire   [31:0] bitcast_ln13_fu_318_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] grp_fu_312_p2;
reg   [0:0] icmp_ln13_reg_428;
wire   [0:0] icmp_ln13_1_fu_327_p2;
reg   [0:0] icmp_ln13_1_reg_433;
wire   [31:0] bitcast_ln18_fu_343_p1;
wire    ap_CS_fsm_state4;
reg   [0:0] icmp_ln18_reg_446;
wire   [0:0] icmp_ln18_1_fu_352_p2;
reg   [0:0] icmp_ln18_1_reg_451;
wire   [0:0] and_ln18_fu_362_p2;
reg   [0:0] and_ln18_reg_456;
wire    ap_CS_fsm_state5;
wire   [31:0] bitcast_ln20_fu_368_p1;
wire    ap_CS_fsm_state6;
reg   [0:0] icmp_ln20_reg_465;
wire   [0:0] icmp_ln20_1_fu_377_p2;
reg   [0:0] icmp_ln20_1_reg_470;
wire   [0:0] and_ln20_fu_387_p2;
reg   [0:0] and_ln20_reg_475;
wire    ap_CS_fsm_state7;
wire   [31:0] bitcast_ln22_fu_393_p1;
wire    ap_CS_fsm_state8;
reg   [0:0] icmp_ln22_reg_484;
wire   [0:0] icmp_ln22_1_fu_402_p2;
reg   [0:0] icmp_ln22_1_reg_489;
wire   [0:0] and_ln22_fu_412_p2;
reg   [0:0] and_ln22_reg_494;
wire    ap_CS_fsm_state9;
wire    grp_calibration_fu_146_ap_start;
wire    grp_calibration_fu_146_ap_done;
wire    grp_calibration_fu_146_ap_idle;
wire    grp_calibration_fu_146_ap_ready;
wire   [63:0] grp_calibration_fu_146_B_TDATA;
wire    grp_calibration_fu_146_B_TVALID;
wire    grp_calibration_fu_146_B_TREADY;
wire   [7:0] grp_calibration_fu_146_B_TKEEP;
wire   [7:0] grp_calibration_fu_146_B_TSTRB;
wire   [0:0] grp_calibration_fu_146_B_TLAST;
wire    grp_manual_control_fu_158_ap_start;
wire    grp_manual_control_fu_158_ap_done;
wire    grp_manual_control_fu_158_ap_idle;
wire    grp_manual_control_fu_158_ap_ready;
wire    grp_manual_control_fu_158_A_TREADY;
wire   [63:0] grp_manual_control_fu_158_B_TDATA;
wire    grp_manual_control_fu_158_B_TVALID;
wire    grp_manual_control_fu_158_B_TREADY;
wire   [7:0] grp_manual_control_fu_158_B_TKEEP;
wire   [7:0] grp_manual_control_fu_158_B_TSTRB;
wire   [0:0] grp_manual_control_fu_158_B_TLAST;
wire   [2:0] grp_manual_control_fu_158_control_address0;
wire    grp_manual_control_fu_158_control_ce0;
wire   [3:0] grp_manual_control_fu_158_logger_address0;
wire    grp_manual_control_fu_158_logger_ce0;
wire    grp_manual_control_fu_158_logger_we0;
wire   [31:0] grp_manual_control_fu_158_logger_d0;
wire    grp_torque_foc_fu_186_ap_start;
wire    grp_torque_foc_fu_186_ap_done;
wire    grp_torque_foc_fu_186_ap_idle;
wire    grp_torque_foc_fu_186_ap_ready;
wire    grp_torque_foc_fu_186_A_TREADY;
wire   [63:0] grp_torque_foc_fu_186_B_TDATA;
wire    grp_torque_foc_fu_186_B_TVALID;
wire    grp_torque_foc_fu_186_B_TREADY;
wire   [7:0] grp_torque_foc_fu_186_B_TKEEP;
wire   [7:0] grp_torque_foc_fu_186_B_TSTRB;
wire   [0:0] grp_torque_foc_fu_186_B_TLAST;
wire   [63:0] grp_torque_foc_fu_186_C_TDATA;
wire    grp_torque_foc_fu_186_C_TVALID;
wire    grp_torque_foc_fu_186_C_TREADY;
wire   [7:0] grp_torque_foc_fu_186_C_TKEEP;
wire   [7:0] grp_torque_foc_fu_186_C_TSTRB;
wire   [0:0] grp_torque_foc_fu_186_C_TLAST;
wire   [2:0] grp_torque_foc_fu_186_control_address0;
wire    grp_torque_foc_fu_186_control_ce0;
wire   [3:0] grp_torque_foc_fu_186_logger_address0;
wire    grp_torque_foc_fu_186_logger_ce0;
wire    grp_torque_foc_fu_186_logger_we0;
wire   [31:0] grp_torque_foc_fu_186_logger_d0;
wire   [31:0] grp_torque_foc_fu_186_velocity_accum_o;
wire    grp_torque_foc_fu_186_velocity_accum_o_ap_vld;
wire   [4:0] grp_torque_foc_fu_186_buffer_velocity_address0;
wire    grp_torque_foc_fu_186_buffer_velocity_ce0;
wire    grp_torque_foc_fu_186_buffer_velocity_we0;
wire   [31:0] grp_torque_foc_fu_186_buffer_velocity_d0;
wire   [31:0] grp_torque_foc_fu_186_Y1a_prev_o;
wire    grp_torque_foc_fu_186_Y1a_prev_o_ap_vld;
wire   [31:0] grp_torque_foc_fu_186_Y1b_prev_o;
wire    grp_torque_foc_fu_186_Y1b_prev_o_ap_vld;
wire   [31:0] grp_torque_foc_fu_186_Y2a_prev_o;
wire    grp_torque_foc_fu_186_Y2a_prev_o_ap_vld;
wire   [31:0] grp_torque_foc_fu_186_Y2b_prev_o;
wire    grp_torque_foc_fu_186_Y2b_prev_o_ap_vld;
wire   [31:0] grp_torque_foc_fu_186_ierr_o;
wire    grp_torque_foc_fu_186_ierr_o_ap_vld;
wire   [31:0] grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din1;
wire   [31:0] grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din2;
wire   [31:0] grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din3;
wire   [31:0] grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din4;
wire   [31:0] grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din5;
wire    grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_start;
wire   [31:0] grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din1;
wire   [31:0] grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din2;
wire   [31:0] grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din3;
wire    grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_start;
wire   [31:0] grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din1;
wire   [31:0] grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din2;
wire    grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_start;
wire   [31:0] grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din1;
wire   [31:0] grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din2;
wire    grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_start;
wire   [31:0] grp_torque_foc_fu_186_grp_fu_522_p_din0;
wire   [31:0] grp_torque_foc_fu_186_grp_fu_522_p_din1;
wire   [1:0] grp_torque_foc_fu_186_grp_fu_522_p_opcode;
wire    grp_torque_foc_fu_186_grp_fu_522_p_ce;
wire  signed [31:0] grp_torque_foc_fu_186_grp_fu_526_p_din0;
wire    grp_torque_foc_fu_186_grp_fu_526_p_ce;
wire  signed [31:0] grp_torque_foc_fu_186_grp_fu_529_p_din0;
wire    grp_torque_foc_fu_186_grp_fu_529_p_ce;
wire  signed [31:0] grp_torque_foc_fu_186_grp_fu_532_p_din0;
wire    grp_torque_foc_fu_186_grp_fu_532_p_ce;
wire  signed [31:0] grp_torque_foc_fu_186_grp_fu_535_p_din0;
wire    grp_torque_foc_fu_186_grp_fu_535_p_ce;
wire   [31:0] grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din1;
wire   [31:0] grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din2;
wire   [9:0] grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din3;
wire    grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_start;
wire   [31:0] grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din1;
wire   [31:0] grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din2;
wire   [9:0] grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din3;
wire    grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_start;
wire    grp_foc_fu_240_ap_start;
wire    grp_foc_fu_240_ap_done;
wire    grp_foc_fu_240_ap_idle;
wire    grp_foc_fu_240_ap_ready;
wire    grp_foc_fu_240_A_TREADY;
wire   [63:0] grp_foc_fu_240_B_TDATA;
wire    grp_foc_fu_240_B_TVALID;
wire    grp_foc_fu_240_B_TREADY;
wire   [7:0] grp_foc_fu_240_B_TKEEP;
wire   [7:0] grp_foc_fu_240_B_TSTRB;
wire   [0:0] grp_foc_fu_240_B_TLAST;
wire   [63:0] grp_foc_fu_240_C_TDATA;
wire    grp_foc_fu_240_C_TVALID;
wire    grp_foc_fu_240_C_TREADY;
wire   [7:0] grp_foc_fu_240_C_TKEEP;
wire   [7:0] grp_foc_fu_240_C_TSTRB;
wire   [0:0] grp_foc_fu_240_C_TLAST;
wire   [2:0] grp_foc_fu_240_control_address0;
wire    grp_foc_fu_240_control_ce0;
wire   [3:0] grp_foc_fu_240_logger_address0;
wire    grp_foc_fu_240_logger_ce0;
wire    grp_foc_fu_240_logger_we0;
wire   [31:0] grp_foc_fu_240_logger_d0;
wire   [31:0] grp_foc_fu_240_velocity_accum_o;
wire    grp_foc_fu_240_velocity_accum_o_ap_vld;
wire   [4:0] grp_foc_fu_240_buffer_velocity_address0;
wire    grp_foc_fu_240_buffer_velocity_ce0;
wire    grp_foc_fu_240_buffer_velocity_we0;
wire   [31:0] grp_foc_fu_240_buffer_velocity_d0;
wire   [31:0] grp_foc_fu_240_Y1a_prev_o;
wire    grp_foc_fu_240_Y1a_prev_o_ap_vld;
wire   [31:0] grp_foc_fu_240_Y1b_prev_o;
wire    grp_foc_fu_240_Y1b_prev_o_ap_vld;
wire   [31:0] grp_foc_fu_240_Y2a_prev_o;
wire    grp_foc_fu_240_Y2a_prev_o_ap_vld;
wire   [31:0] grp_foc_fu_240_Y2b_prev_o;
wire    grp_foc_fu_240_Y2b_prev_o_ap_vld;
wire   [31:0] grp_foc_fu_240_ierr_o;
wire    grp_foc_fu_240_ierr_o_ap_vld;
wire   [31:0] grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din1;
wire   [31:0] grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din2;
wire   [31:0] grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din3;
wire   [31:0] grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din4;
wire   [31:0] grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din5;
wire    grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_start;
wire   [31:0] grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din1;
wire   [31:0] grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din2;
wire   [31:0] grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din3;
wire    grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_start;
wire   [31:0] grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din1;
wire   [31:0] grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din2;
wire    grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_start;
wire   [31:0] grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din1;
wire   [31:0] grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din2;
wire    grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_start;
wire   [31:0] grp_foc_fu_240_grp_fu_522_p_din0;
wire   [31:0] grp_foc_fu_240_grp_fu_522_p_din1;
wire   [1:0] grp_foc_fu_240_grp_fu_522_p_opcode;
wire    grp_foc_fu_240_grp_fu_522_p_ce;
wire  signed [31:0] grp_foc_fu_240_grp_fu_526_p_din0;
wire    grp_foc_fu_240_grp_fu_526_p_ce;
wire  signed [31:0] grp_foc_fu_240_grp_fu_529_p_din0;
wire    grp_foc_fu_240_grp_fu_529_p_ce;
wire  signed [31:0] grp_foc_fu_240_grp_fu_532_p_din0;
wire    grp_foc_fu_240_grp_fu_532_p_ce;
wire  signed [31:0] grp_foc_fu_240_grp_fu_535_p_din0;
wire    grp_foc_fu_240_grp_fu_535_p_ce;
wire   [31:0] grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din1;
wire   [31:0] grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din2;
wire   [9:0] grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din3;
wire    grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_start;
wire   [31:0] grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din1;
wire   [31:0] grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din2;
wire   [9:0] grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din3;
wire    grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_start;
reg    grp_PI_control_float_s_fu_498_ap_start;
wire    grp_PI_control_float_s_fu_498_ap_done;
wire    grp_PI_control_float_s_fu_498_ap_idle;
wire    grp_PI_control_float_s_fu_498_ap_ready;
reg   [31:0] grp_PI_control_float_s_fu_498_ref;
reg   [31:0] grp_PI_control_float_s_fu_498_val_r;
reg   [31:0] grp_PI_control_float_s_fu_498_KP;
reg   [31:0] grp_PI_control_float_s_fu_498_KI;
reg   [31:0] grp_PI_control_float_s_fu_498_ierr_i;
wire   [31:0] grp_PI_control_float_s_fu_498_ierr_o;
wire    grp_PI_control_float_s_fu_498_ierr_o_ap_vld;
wire   [31:0] grp_PI_control_float_s_fu_498_ap_return;
reg    grp_SVPWM_float_s_fu_506_ap_start;
wire    grp_SVPWM_float_s_fu_506_ap_done;
wire    grp_SVPWM_float_s_fu_506_ap_idle;
wire    grp_SVPWM_float_s_fu_506_ap_ready;
reg   [31:0] grp_SVPWM_float_s_fu_506_Va;
reg   [31:0] grp_SVPWM_float_s_fu_506_Vb;
reg   [31:0] grp_SVPWM_float_s_fu_506_Vc;
wire   [15:0] grp_SVPWM_float_s_fu_506_ap_return_0;
wire   [15:0] grp_SVPWM_float_s_fu_506_ap_return_1;
wire   [15:0] grp_SVPWM_float_s_fu_506_ap_return_2;
reg    grp_clarke_direct_float_s_fu_512_ap_start;
wire    grp_clarke_direct_float_s_fu_512_ap_done;
wire    grp_clarke_direct_float_s_fu_512_ap_idle;
wire    grp_clarke_direct_float_s_fu_512_ap_ready;
reg   [31:0] grp_clarke_direct_float_s_fu_512_Ia;
reg   [31:0] grp_clarke_direct_float_s_fu_512_Ib;
wire   [31:0] grp_clarke_direct_float_s_fu_512_ap_return_0;
wire   [31:0] grp_clarke_direct_float_s_fu_512_ap_return_1;
reg    grp_clarke_inverse_float_s_fu_517_ap_start;
wire    grp_clarke_inverse_float_s_fu_517_ap_done;
wire    grp_clarke_inverse_float_s_fu_517_ap_idle;
wire    grp_clarke_inverse_float_s_fu_517_ap_ready;
reg   [31:0] grp_clarke_inverse_float_s_fu_517_Valpha;
reg   [31:0] grp_clarke_inverse_float_s_fu_517_Vbeta;
wire   [31:0] grp_clarke_inverse_float_s_fu_517_ap_return_0;
wire   [31:0] grp_clarke_inverse_float_s_fu_517_ap_return_1;
wire   [31:0] grp_clarke_inverse_float_s_fu_517_ap_return_2;
reg    grp_park_direct_float_s_fu_538_ap_start;
wire    grp_park_direct_float_s_fu_538_ap_done;
wire    grp_park_direct_float_s_fu_538_ap_idle;
wire    grp_park_direct_float_s_fu_538_ap_ready;
reg   [31:0] grp_park_direct_float_s_fu_538_Ialpha;
reg   [31:0] grp_park_direct_float_s_fu_538_Ibeta;
reg   [9:0] grp_park_direct_float_s_fu_538_angle;
wire   [31:0] grp_park_direct_float_s_fu_538_ap_return_0;
wire   [31:0] grp_park_direct_float_s_fu_538_ap_return_1;
reg    grp_park_inverse_float_s_fu_546_ap_start;
wire    grp_park_inverse_float_s_fu_546_ap_done;
wire    grp_park_inverse_float_s_fu_546_ap_idle;
wire    grp_park_inverse_float_s_fu_546_ap_ready;
reg   [31:0] grp_park_inverse_float_s_fu_546_Vd;
reg   [31:0] grp_park_inverse_float_s_fu_546_Vq;
reg   [9:0] grp_park_inverse_float_s_fu_546_angle;
wire   [31:0] grp_park_inverse_float_s_fu_546_ap_return_0;
wire   [31:0] grp_park_inverse_float_s_fu_546_ap_return_1;
reg    grp_calibration_fu_146_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [0:0] and_ln13_fu_337_p2;
reg    grp_manual_control_fu_158_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state14;
reg    grp_torque_foc_fu_186_ap_start_reg;
wire    ap_CS_fsm_state12;
reg    grp_foc_fu_240_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg   [31:0] grp_fu_294_p0;
reg   [31:0] grp_fu_294_p1;
wire   [7:0] grp_fu_302_p4;
wire   [22:0] trunc_ln13_fu_323_p1;
wire   [0:0] or_ln13_fu_333_p2;
wire   [0:0] grp_fu_294_p2;
wire   [22:0] trunc_ln18_fu_348_p1;
wire   [0:0] or_ln18_fu_358_p2;
wire   [22:0] trunc_ln20_fu_373_p1;
wire   [0:0] or_ln20_fu_383_p2;
wire   [22:0] trunc_ln22_fu_398_p1;
wire   [0:0] or_ln22_fu_408_p2;
wire   [31:0] grp_fu_522_p2;
reg   [31:0] grp_fu_522_p0;
reg   [31:0] grp_fu_522_p1;
reg    grp_fu_522_ce;
wire   [31:0] grp_fu_526_p1;
reg  signed [31:0] grp_fu_526_p0;
reg    grp_fu_526_ce;
wire   [31:0] grp_fu_529_p1;
reg  signed [31:0] grp_fu_529_p0;
reg    grp_fu_529_ce;
wire   [31:0] grp_fu_532_p1;
reg  signed [31:0] grp_fu_532_p0;
reg    grp_fu_532_ce;
wire   [31:0] grp_fu_535_p1;
reg  signed [31:0] grp_fu_535_p0;
reg    grp_fu_535_ce;
reg   [17:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_predicate_op95_call_state11;
reg    ap_predicate_op97_call_state11;
reg    ap_block_state11_on_subcall_done;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    regslice_both_B_V_data_V_U_apdone_blk;
wire    regslice_both_C_V_data_V_U_apdone_blk;
reg    ap_block_state18;
wire    ap_CS_fsm_state18;
wire    regslice_both_A_V_data_V_U_apdone_blk;
wire   [79:0] A_TDATA_int_regslice;
wire    A_TVALID_int_regslice;
reg    A_TREADY_int_regslice;
wire    regslice_both_A_V_data_V_U_ack_in;
wire    regslice_both_A_V_keep_V_U_apdone_blk;
wire   [9:0] A_TKEEP_int_regslice;
wire    regslice_both_A_V_keep_V_U_vld_out;
wire    regslice_both_A_V_keep_V_U_ack_in;
wire    regslice_both_A_V_strb_V_U_apdone_blk;
wire   [9:0] A_TSTRB_int_regslice;
wire    regslice_both_A_V_strb_V_U_vld_out;
wire    regslice_both_A_V_strb_V_U_ack_in;
wire    regslice_both_A_V_last_V_U_apdone_blk;
wire   [0:0] A_TLAST_int_regslice;
wire    regslice_both_A_V_last_V_U_vld_out;
wire    regslice_both_A_V_last_V_U_ack_in;
reg   [63:0] B_TDATA_int_regslice;
reg    B_TVALID_int_regslice;
wire    B_TREADY_int_regslice;
wire    regslice_both_B_V_data_V_U_vld_out;
wire    regslice_both_B_V_keep_V_U_apdone_blk;
reg   [7:0] B_TKEEP_int_regslice;
wire    regslice_both_B_V_keep_V_U_ack_in_dummy;
wire    regslice_both_B_V_keep_V_U_vld_out;
wire    regslice_both_B_V_strb_V_U_apdone_blk;
reg   [7:0] B_TSTRB_int_regslice;
wire    regslice_both_B_V_strb_V_U_ack_in_dummy;
wire    regslice_both_B_V_strb_V_U_vld_out;
wire    regslice_both_B_V_last_V_U_apdone_blk;
reg   [0:0] B_TLAST_int_regslice;
wire    regslice_both_B_V_last_V_U_ack_in_dummy;
wire    regslice_both_B_V_last_V_U_vld_out;
reg   [63:0] C_TDATA_int_regslice;
reg    C_TVALID_int_regslice;
wire    C_TREADY_int_regslice;
wire    regslice_both_C_V_data_V_U_vld_out;
wire    regslice_both_C_V_keep_V_U_apdone_blk;
reg   [7:0] C_TKEEP_int_regslice;
wire    regslice_both_C_V_keep_V_U_ack_in_dummy;
wire    regslice_both_C_V_keep_V_U_vld_out;
wire    regslice_both_C_V_strb_V_U_apdone_blk;
reg   [7:0] C_TSTRB_int_regslice;
wire    regslice_both_C_V_strb_V_U_ack_in_dummy;
wire    regslice_both_C_V_strb_V_U_vld_out;
wire    regslice_both_C_V_last_V_U_apdone_blk;
reg   [0:0] C_TLAST_int_regslice;
wire    regslice_both_C_V_last_V_U_ack_in_dummy;
wire    regslice_both_C_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 velocity_accum = 32'd0;
#0 Y1a_prev = 32'd0;
#0 Y1b_prev = 32'd0;
#0 Y2a_prev = 32'd0;
#0 Y2b_prev = 32'd0;
#0 ierr = 32'd0;
#0 ap_CS_fsm = 18'd1;
#0 grp_calibration_fu_146_ap_start_reg = 1'b0;
#0 grp_manual_control_fu_158_ap_start_reg = 1'b0;
#0 grp_torque_foc_fu_186_ap_start_reg = 1'b0;
#0 grp_foc_fu_240_ap_start_reg = 1'b0;
end

foc_frontend_buffer_velocity_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
buffer_velocity_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_velocity_address0),
    .ce0(buffer_velocity_ce0),
    .we0(buffer_velocity_we0),
    .d0(buffer_velocity_d0),
    .q0(buffer_velocity_q0)
);

foc_frontend_calibration grp_calibration_fu_146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_calibration_fu_146_ap_start),
    .ap_done(grp_calibration_fu_146_ap_done),
    .ap_idle(grp_calibration_fu_146_ap_idle),
    .ap_ready(grp_calibration_fu_146_ap_ready),
    .B_TDATA(grp_calibration_fu_146_B_TDATA),
    .B_TVALID(grp_calibration_fu_146_B_TVALID),
    .B_TREADY(grp_calibration_fu_146_B_TREADY),
    .B_TKEEP(grp_calibration_fu_146_B_TKEEP),
    .B_TSTRB(grp_calibration_fu_146_B_TSTRB),
    .B_TLAST(grp_calibration_fu_146_B_TLAST)
);

foc_frontend_manual_control grp_manual_control_fu_158(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_manual_control_fu_158_ap_start),
    .ap_done(grp_manual_control_fu_158_ap_done),
    .ap_idle(grp_manual_control_fu_158_ap_idle),
    .ap_ready(grp_manual_control_fu_158_ap_ready),
    .A_TDATA(A_TDATA_int_regslice),
    .A_TVALID(A_TVALID_int_regslice),
    .A_TREADY(grp_manual_control_fu_158_A_TREADY),
    .A_TKEEP(A_TKEEP_int_regslice),
    .A_TSTRB(A_TSTRB_int_regslice),
    .A_TLAST(A_TLAST_int_regslice),
    .B_TDATA(grp_manual_control_fu_158_B_TDATA),
    .B_TVALID(grp_manual_control_fu_158_B_TVALID),
    .B_TREADY(grp_manual_control_fu_158_B_TREADY),
    .B_TKEEP(grp_manual_control_fu_158_B_TKEEP),
    .B_TSTRB(grp_manual_control_fu_158_B_TSTRB),
    .B_TLAST(grp_manual_control_fu_158_B_TLAST),
    .control_address0(grp_manual_control_fu_158_control_address0),
    .control_ce0(grp_manual_control_fu_158_control_ce0),
    .control_q0(control_q0),
    .logger_address0(grp_manual_control_fu_158_logger_address0),
    .logger_ce0(grp_manual_control_fu_158_logger_ce0),
    .logger_we0(grp_manual_control_fu_158_logger_we0),
    .logger_d0(grp_manual_control_fu_158_logger_d0)
);

foc_frontend_torque_foc grp_torque_foc_fu_186(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_torque_foc_fu_186_ap_start),
    .ap_done(grp_torque_foc_fu_186_ap_done),
    .ap_idle(grp_torque_foc_fu_186_ap_idle),
    .ap_ready(grp_torque_foc_fu_186_ap_ready),
    .A_TDATA(A_TDATA_int_regslice),
    .A_TVALID(A_TVALID_int_regslice),
    .A_TREADY(grp_torque_foc_fu_186_A_TREADY),
    .A_TKEEP(A_TKEEP_int_regslice),
    .A_TSTRB(A_TSTRB_int_regslice),
    .A_TLAST(A_TLAST_int_regslice),
    .B_TDATA(grp_torque_foc_fu_186_B_TDATA),
    .B_TVALID(grp_torque_foc_fu_186_B_TVALID),
    .B_TREADY(grp_torque_foc_fu_186_B_TREADY),
    .B_TKEEP(grp_torque_foc_fu_186_B_TKEEP),
    .B_TSTRB(grp_torque_foc_fu_186_B_TSTRB),
    .B_TLAST(grp_torque_foc_fu_186_B_TLAST),
    .C_TDATA(grp_torque_foc_fu_186_C_TDATA),
    .C_TVALID(grp_torque_foc_fu_186_C_TVALID),
    .C_TREADY(grp_torque_foc_fu_186_C_TREADY),
    .C_TKEEP(grp_torque_foc_fu_186_C_TKEEP),
    .C_TSTRB(grp_torque_foc_fu_186_C_TSTRB),
    .C_TLAST(grp_torque_foc_fu_186_C_TLAST),
    .control_address0(grp_torque_foc_fu_186_control_address0),
    .control_ce0(grp_torque_foc_fu_186_control_ce0),
    .control_q0(control_q0),
    .logger_address0(grp_torque_foc_fu_186_logger_address0),
    .logger_ce0(grp_torque_foc_fu_186_logger_ce0),
    .logger_we0(grp_torque_foc_fu_186_logger_we0),
    .logger_d0(grp_torque_foc_fu_186_logger_d0),
    .velocity_accum_i(velocity_accum),
    .velocity_accum_o(grp_torque_foc_fu_186_velocity_accum_o),
    .velocity_accum_o_ap_vld(grp_torque_foc_fu_186_velocity_accum_o_ap_vld),
    .buffer_velocity_address0(grp_torque_foc_fu_186_buffer_velocity_address0),
    .buffer_velocity_ce0(grp_torque_foc_fu_186_buffer_velocity_ce0),
    .buffer_velocity_we0(grp_torque_foc_fu_186_buffer_velocity_we0),
    .buffer_velocity_d0(grp_torque_foc_fu_186_buffer_velocity_d0),
    .buffer_velocity_q0(buffer_velocity_q0),
    .Y1a_prev_i(Y1a_prev),
    .Y1a_prev_o(grp_torque_foc_fu_186_Y1a_prev_o),
    .Y1a_prev_o_ap_vld(grp_torque_foc_fu_186_Y1a_prev_o_ap_vld),
    .Y1b_prev_i(Y1b_prev),
    .Y1b_prev_o(grp_torque_foc_fu_186_Y1b_prev_o),
    .Y1b_prev_o_ap_vld(grp_torque_foc_fu_186_Y1b_prev_o_ap_vld),
    .Y2a_prev_i(Y2a_prev),
    .Y2a_prev_o(grp_torque_foc_fu_186_Y2a_prev_o),
    .Y2a_prev_o_ap_vld(grp_torque_foc_fu_186_Y2a_prev_o_ap_vld),
    .Y2b_prev_i(Y2b_prev),
    .Y2b_prev_o(grp_torque_foc_fu_186_Y2b_prev_o),
    .Y2b_prev_o_ap_vld(grp_torque_foc_fu_186_Y2b_prev_o_ap_vld),
    .ierr_i(ierr),
    .ierr_o(grp_torque_foc_fu_186_ierr_o),
    .ierr_o_ap_vld(grp_torque_foc_fu_186_ierr_o_ap_vld),
    .grp_PI_control_float_s_fu_498_p_din1(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din1),
    .grp_PI_control_float_s_fu_498_p_din2(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din2),
    .grp_PI_control_float_s_fu_498_p_din3(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din3),
    .grp_PI_control_float_s_fu_498_p_din4(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din4),
    .grp_PI_control_float_s_fu_498_p_din5(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din5),
    .grp_PI_control_float_s_fu_498_p_din5_o(grp_PI_control_float_s_fu_498_ierr_o),
    .grp_PI_control_float_s_fu_498_p_din5_o_ap_vld(grp_PI_control_float_s_fu_498_ierr_o_ap_vld),
    .grp_PI_control_float_s_fu_498_p_dout0(grp_PI_control_float_s_fu_498_ap_return),
    .grp_PI_control_float_s_fu_498_p_start(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_start),
    .grp_PI_control_float_s_fu_498_p_ready(grp_PI_control_float_s_fu_498_ap_ready),
    .grp_PI_control_float_s_fu_498_p_done(grp_PI_control_float_s_fu_498_ap_done),
    .grp_PI_control_float_s_fu_498_p_idle(grp_PI_control_float_s_fu_498_ap_idle),
    .grp_SVPWM_float_s_fu_506_p_din1(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din1),
    .grp_SVPWM_float_s_fu_506_p_din2(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din2),
    .grp_SVPWM_float_s_fu_506_p_din3(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din3),
    .grp_SVPWM_float_s_fu_506_p_dout0_0(grp_SVPWM_float_s_fu_506_ap_return_0),
    .grp_SVPWM_float_s_fu_506_p_dout0_1(grp_SVPWM_float_s_fu_506_ap_return_1),
    .grp_SVPWM_float_s_fu_506_p_dout0_2(grp_SVPWM_float_s_fu_506_ap_return_2),
    .grp_SVPWM_float_s_fu_506_p_start(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_start),
    .grp_SVPWM_float_s_fu_506_p_ready(grp_SVPWM_float_s_fu_506_ap_ready),
    .grp_SVPWM_float_s_fu_506_p_done(grp_SVPWM_float_s_fu_506_ap_done),
    .grp_SVPWM_float_s_fu_506_p_idle(grp_SVPWM_float_s_fu_506_ap_idle),
    .grp_clarke_direct_float_s_fu_512_p_din1(grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din1),
    .grp_clarke_direct_float_s_fu_512_p_din2(grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din2),
    .grp_clarke_direct_float_s_fu_512_p_dout0_0(grp_clarke_direct_float_s_fu_512_ap_return_0),
    .grp_clarke_direct_float_s_fu_512_p_dout0_1(grp_clarke_direct_float_s_fu_512_ap_return_1),
    .grp_clarke_direct_float_s_fu_512_p_start(grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_start),
    .grp_clarke_direct_float_s_fu_512_p_ready(grp_clarke_direct_float_s_fu_512_ap_ready),
    .grp_clarke_direct_float_s_fu_512_p_done(grp_clarke_direct_float_s_fu_512_ap_done),
    .grp_clarke_direct_float_s_fu_512_p_idle(grp_clarke_direct_float_s_fu_512_ap_idle),
    .grp_clarke_inverse_float_s_fu_517_p_din1(grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din1),
    .grp_clarke_inverse_float_s_fu_517_p_din2(grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din2),
    .grp_clarke_inverse_float_s_fu_517_p_dout0_0(grp_clarke_inverse_float_s_fu_517_ap_return_0),
    .grp_clarke_inverse_float_s_fu_517_p_dout0_1(grp_clarke_inverse_float_s_fu_517_ap_return_1),
    .grp_clarke_inverse_float_s_fu_517_p_dout0_2(grp_clarke_inverse_float_s_fu_517_ap_return_2),
    .grp_clarke_inverse_float_s_fu_517_p_start(grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_start),
    .grp_clarke_inverse_float_s_fu_517_p_ready(grp_clarke_inverse_float_s_fu_517_ap_ready),
    .grp_clarke_inverse_float_s_fu_517_p_done(grp_clarke_inverse_float_s_fu_517_ap_done),
    .grp_clarke_inverse_float_s_fu_517_p_idle(grp_clarke_inverse_float_s_fu_517_ap_idle),
    .grp_fu_522_p_din0(grp_torque_foc_fu_186_grp_fu_522_p_din0),
    .grp_fu_522_p_din1(grp_torque_foc_fu_186_grp_fu_522_p_din1),
    .grp_fu_522_p_opcode(grp_torque_foc_fu_186_grp_fu_522_p_opcode),
    .grp_fu_522_p_dout0(grp_fu_522_p2),
    .grp_fu_522_p_ce(grp_torque_foc_fu_186_grp_fu_522_p_ce),
    .grp_fu_526_p_din0(grp_torque_foc_fu_186_grp_fu_526_p_din0),
    .grp_fu_526_p_dout0(grp_fu_526_p1),
    .grp_fu_526_p_ce(grp_torque_foc_fu_186_grp_fu_526_p_ce),
    .grp_fu_529_p_din0(grp_torque_foc_fu_186_grp_fu_529_p_din0),
    .grp_fu_529_p_dout0(grp_fu_529_p1),
    .grp_fu_529_p_ce(grp_torque_foc_fu_186_grp_fu_529_p_ce),
    .grp_fu_532_p_din0(grp_torque_foc_fu_186_grp_fu_532_p_din0),
    .grp_fu_532_p_dout0(grp_fu_532_p1),
    .grp_fu_532_p_ce(grp_torque_foc_fu_186_grp_fu_532_p_ce),
    .grp_fu_535_p_din0(grp_torque_foc_fu_186_grp_fu_535_p_din0),
    .grp_fu_535_p_dout0(grp_fu_535_p1),
    .grp_fu_535_p_ce(grp_torque_foc_fu_186_grp_fu_535_p_ce),
    .grp_park_direct_float_s_fu_538_p_din1(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din1),
    .grp_park_direct_float_s_fu_538_p_din2(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din2),
    .grp_park_direct_float_s_fu_538_p_din3(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din3),
    .grp_park_direct_float_s_fu_538_p_dout0_0(grp_park_direct_float_s_fu_538_ap_return_0),
    .grp_park_direct_float_s_fu_538_p_dout0_1(grp_park_direct_float_s_fu_538_ap_return_1),
    .grp_park_direct_float_s_fu_538_p_start(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_start),
    .grp_park_direct_float_s_fu_538_p_ready(grp_park_direct_float_s_fu_538_ap_ready),
    .grp_park_direct_float_s_fu_538_p_done(grp_park_direct_float_s_fu_538_ap_done),
    .grp_park_direct_float_s_fu_538_p_idle(grp_park_direct_float_s_fu_538_ap_idle),
    .grp_park_inverse_float_s_fu_546_p_din1(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din1),
    .grp_park_inverse_float_s_fu_546_p_din2(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din2),
    .grp_park_inverse_float_s_fu_546_p_din3(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din3),
    .grp_park_inverse_float_s_fu_546_p_dout0_0(grp_park_inverse_float_s_fu_546_ap_return_0),
    .grp_park_inverse_float_s_fu_546_p_dout0_1(grp_park_inverse_float_s_fu_546_ap_return_1),
    .grp_park_inverse_float_s_fu_546_p_start(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_start),
    .grp_park_inverse_float_s_fu_546_p_ready(grp_park_inverse_float_s_fu_546_ap_ready),
    .grp_park_inverse_float_s_fu_546_p_done(grp_park_inverse_float_s_fu_546_ap_done),
    .grp_park_inverse_float_s_fu_546_p_idle(grp_park_inverse_float_s_fu_546_ap_idle)
);

foc_frontend_foc grp_foc_fu_240(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_foc_fu_240_ap_start),
    .ap_done(grp_foc_fu_240_ap_done),
    .ap_idle(grp_foc_fu_240_ap_idle),
    .ap_ready(grp_foc_fu_240_ap_ready),
    .A_TDATA(A_TDATA_int_regslice),
    .A_TVALID(A_TVALID_int_regslice),
    .A_TREADY(grp_foc_fu_240_A_TREADY),
    .A_TKEEP(A_TKEEP_int_regslice),
    .A_TSTRB(A_TSTRB_int_regslice),
    .A_TLAST(A_TLAST_int_regslice),
    .B_TDATA(grp_foc_fu_240_B_TDATA),
    .B_TVALID(grp_foc_fu_240_B_TVALID),
    .B_TREADY(grp_foc_fu_240_B_TREADY),
    .B_TKEEP(grp_foc_fu_240_B_TKEEP),
    .B_TSTRB(grp_foc_fu_240_B_TSTRB),
    .B_TLAST(grp_foc_fu_240_B_TLAST),
    .C_TDATA(grp_foc_fu_240_C_TDATA),
    .C_TVALID(grp_foc_fu_240_C_TVALID),
    .C_TREADY(grp_foc_fu_240_C_TREADY),
    .C_TKEEP(grp_foc_fu_240_C_TKEEP),
    .C_TSTRB(grp_foc_fu_240_C_TSTRB),
    .C_TLAST(grp_foc_fu_240_C_TLAST),
    .control_address0(grp_foc_fu_240_control_address0),
    .control_ce0(grp_foc_fu_240_control_ce0),
    .control_q0(control_q0),
    .logger_address0(grp_foc_fu_240_logger_address0),
    .logger_ce0(grp_foc_fu_240_logger_ce0),
    .logger_we0(grp_foc_fu_240_logger_we0),
    .logger_d0(grp_foc_fu_240_logger_d0),
    .velocity_accum_i(velocity_accum),
    .velocity_accum_o(grp_foc_fu_240_velocity_accum_o),
    .velocity_accum_o_ap_vld(grp_foc_fu_240_velocity_accum_o_ap_vld),
    .buffer_velocity_address0(grp_foc_fu_240_buffer_velocity_address0),
    .buffer_velocity_ce0(grp_foc_fu_240_buffer_velocity_ce0),
    .buffer_velocity_we0(grp_foc_fu_240_buffer_velocity_we0),
    .buffer_velocity_d0(grp_foc_fu_240_buffer_velocity_d0),
    .buffer_velocity_q0(buffer_velocity_q0),
    .Y1a_prev_i(Y1a_prev),
    .Y1a_prev_o(grp_foc_fu_240_Y1a_prev_o),
    .Y1a_prev_o_ap_vld(grp_foc_fu_240_Y1a_prev_o_ap_vld),
    .Y1b_prev_i(Y1b_prev),
    .Y1b_prev_o(grp_foc_fu_240_Y1b_prev_o),
    .Y1b_prev_o_ap_vld(grp_foc_fu_240_Y1b_prev_o_ap_vld),
    .Y2a_prev_i(Y2a_prev),
    .Y2a_prev_o(grp_foc_fu_240_Y2a_prev_o),
    .Y2a_prev_o_ap_vld(grp_foc_fu_240_Y2a_prev_o_ap_vld),
    .Y2b_prev_i(Y2b_prev),
    .Y2b_prev_o(grp_foc_fu_240_Y2b_prev_o),
    .Y2b_prev_o_ap_vld(grp_foc_fu_240_Y2b_prev_o_ap_vld),
    .ierr_i(ierr),
    .ierr_o(grp_foc_fu_240_ierr_o),
    .ierr_o_ap_vld(grp_foc_fu_240_ierr_o_ap_vld),
    .grp_PI_control_float_s_fu_498_p_din1(grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din1),
    .grp_PI_control_float_s_fu_498_p_din2(grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din2),
    .grp_PI_control_float_s_fu_498_p_din3(grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din3),
    .grp_PI_control_float_s_fu_498_p_din4(grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din4),
    .grp_PI_control_float_s_fu_498_p_din5(grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din5),
    .grp_PI_control_float_s_fu_498_p_din5_o(grp_PI_control_float_s_fu_498_ierr_o),
    .grp_PI_control_float_s_fu_498_p_din5_o_ap_vld(grp_PI_control_float_s_fu_498_ierr_o_ap_vld),
    .grp_PI_control_float_s_fu_498_p_dout0(grp_PI_control_float_s_fu_498_ap_return),
    .grp_PI_control_float_s_fu_498_p_start(grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_start),
    .grp_PI_control_float_s_fu_498_p_ready(grp_PI_control_float_s_fu_498_ap_ready),
    .grp_PI_control_float_s_fu_498_p_done(grp_PI_control_float_s_fu_498_ap_done),
    .grp_PI_control_float_s_fu_498_p_idle(grp_PI_control_float_s_fu_498_ap_idle),
    .grp_SVPWM_float_s_fu_506_p_din1(grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din1),
    .grp_SVPWM_float_s_fu_506_p_din2(grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din2),
    .grp_SVPWM_float_s_fu_506_p_din3(grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din3),
    .grp_SVPWM_float_s_fu_506_p_dout0_0(grp_SVPWM_float_s_fu_506_ap_return_0),
    .grp_SVPWM_float_s_fu_506_p_dout0_1(grp_SVPWM_float_s_fu_506_ap_return_1),
    .grp_SVPWM_float_s_fu_506_p_dout0_2(grp_SVPWM_float_s_fu_506_ap_return_2),
    .grp_SVPWM_float_s_fu_506_p_start(grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_start),
    .grp_SVPWM_float_s_fu_506_p_ready(grp_SVPWM_float_s_fu_506_ap_ready),
    .grp_SVPWM_float_s_fu_506_p_done(grp_SVPWM_float_s_fu_506_ap_done),
    .grp_SVPWM_float_s_fu_506_p_idle(grp_SVPWM_float_s_fu_506_ap_idle),
    .grp_clarke_direct_float_s_fu_512_p_din1(grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din1),
    .grp_clarke_direct_float_s_fu_512_p_din2(grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din2),
    .grp_clarke_direct_float_s_fu_512_p_dout0_0(grp_clarke_direct_float_s_fu_512_ap_return_0),
    .grp_clarke_direct_float_s_fu_512_p_dout0_1(grp_clarke_direct_float_s_fu_512_ap_return_1),
    .grp_clarke_direct_float_s_fu_512_p_start(grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_start),
    .grp_clarke_direct_float_s_fu_512_p_ready(grp_clarke_direct_float_s_fu_512_ap_ready),
    .grp_clarke_direct_float_s_fu_512_p_done(grp_clarke_direct_float_s_fu_512_ap_done),
    .grp_clarke_direct_float_s_fu_512_p_idle(grp_clarke_direct_float_s_fu_512_ap_idle),
    .grp_clarke_inverse_float_s_fu_517_p_din1(grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din1),
    .grp_clarke_inverse_float_s_fu_517_p_din2(grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din2),
    .grp_clarke_inverse_float_s_fu_517_p_dout0_0(grp_clarke_inverse_float_s_fu_517_ap_return_0),
    .grp_clarke_inverse_float_s_fu_517_p_dout0_1(grp_clarke_inverse_float_s_fu_517_ap_return_1),
    .grp_clarke_inverse_float_s_fu_517_p_dout0_2(grp_clarke_inverse_float_s_fu_517_ap_return_2),
    .grp_clarke_inverse_float_s_fu_517_p_start(grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_start),
    .grp_clarke_inverse_float_s_fu_517_p_ready(grp_clarke_inverse_float_s_fu_517_ap_ready),
    .grp_clarke_inverse_float_s_fu_517_p_done(grp_clarke_inverse_float_s_fu_517_ap_done),
    .grp_clarke_inverse_float_s_fu_517_p_idle(grp_clarke_inverse_float_s_fu_517_ap_idle),
    .grp_fu_522_p_din0(grp_foc_fu_240_grp_fu_522_p_din0),
    .grp_fu_522_p_din1(grp_foc_fu_240_grp_fu_522_p_din1),
    .grp_fu_522_p_opcode(grp_foc_fu_240_grp_fu_522_p_opcode),
    .grp_fu_522_p_dout0(grp_fu_522_p2),
    .grp_fu_522_p_ce(grp_foc_fu_240_grp_fu_522_p_ce),
    .grp_fu_526_p_din0(grp_foc_fu_240_grp_fu_526_p_din0),
    .grp_fu_526_p_dout0(grp_fu_526_p1),
    .grp_fu_526_p_ce(grp_foc_fu_240_grp_fu_526_p_ce),
    .grp_fu_529_p_din0(grp_foc_fu_240_grp_fu_529_p_din0),
    .grp_fu_529_p_dout0(grp_fu_529_p1),
    .grp_fu_529_p_ce(grp_foc_fu_240_grp_fu_529_p_ce),
    .grp_fu_532_p_din0(grp_foc_fu_240_grp_fu_532_p_din0),
    .grp_fu_532_p_dout0(grp_fu_532_p1),
    .grp_fu_532_p_ce(grp_foc_fu_240_grp_fu_532_p_ce),
    .grp_fu_535_p_din0(grp_foc_fu_240_grp_fu_535_p_din0),
    .grp_fu_535_p_dout0(grp_fu_535_p1),
    .grp_fu_535_p_ce(grp_foc_fu_240_grp_fu_535_p_ce),
    .grp_park_direct_float_s_fu_538_p_din1(grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din1),
    .grp_park_direct_float_s_fu_538_p_din2(grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din2),
    .grp_park_direct_float_s_fu_538_p_din3(grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din3),
    .grp_park_direct_float_s_fu_538_p_dout0_0(grp_park_direct_float_s_fu_538_ap_return_0),
    .grp_park_direct_float_s_fu_538_p_dout0_1(grp_park_direct_float_s_fu_538_ap_return_1),
    .grp_park_direct_float_s_fu_538_p_start(grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_start),
    .grp_park_direct_float_s_fu_538_p_ready(grp_park_direct_float_s_fu_538_ap_ready),
    .grp_park_direct_float_s_fu_538_p_done(grp_park_direct_float_s_fu_538_ap_done),
    .grp_park_direct_float_s_fu_538_p_idle(grp_park_direct_float_s_fu_538_ap_idle),
    .grp_park_inverse_float_s_fu_546_p_din1(grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din1),
    .grp_park_inverse_float_s_fu_546_p_din2(grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din2),
    .grp_park_inverse_float_s_fu_546_p_din3(grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din3),
    .grp_park_inverse_float_s_fu_546_p_dout0_0(grp_park_inverse_float_s_fu_546_ap_return_0),
    .grp_park_inverse_float_s_fu_546_p_dout0_1(grp_park_inverse_float_s_fu_546_ap_return_1),
    .grp_park_inverse_float_s_fu_546_p_start(grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_start),
    .grp_park_inverse_float_s_fu_546_p_ready(grp_park_inverse_float_s_fu_546_ap_ready),
    .grp_park_inverse_float_s_fu_546_p_done(grp_park_inverse_float_s_fu_546_ap_done),
    .grp_park_inverse_float_s_fu_546_p_idle(grp_park_inverse_float_s_fu_546_ap_idle)
);

foc_frontend_PI_control_float_s grp_PI_control_float_s_fu_498(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_PI_control_float_s_fu_498_ap_start),
    .ap_done(grp_PI_control_float_s_fu_498_ap_done),
    .ap_idle(grp_PI_control_float_s_fu_498_ap_idle),
    .ap_ready(grp_PI_control_float_s_fu_498_ap_ready),
    .ref(grp_PI_control_float_s_fu_498_ref),
    .val_r(grp_PI_control_float_s_fu_498_val_r),
    .KP(grp_PI_control_float_s_fu_498_KP),
    .KI(grp_PI_control_float_s_fu_498_KI),
    .ierr_i(grp_PI_control_float_s_fu_498_ierr_i),
    .ierr_o(grp_PI_control_float_s_fu_498_ierr_o),
    .ierr_o_ap_vld(grp_PI_control_float_s_fu_498_ierr_o_ap_vld),
    .ap_return(grp_PI_control_float_s_fu_498_ap_return)
);

foc_frontend_SVPWM_float_s grp_SVPWM_float_s_fu_506(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_SVPWM_float_s_fu_506_ap_start),
    .ap_done(grp_SVPWM_float_s_fu_506_ap_done),
    .ap_idle(grp_SVPWM_float_s_fu_506_ap_idle),
    .ap_ready(grp_SVPWM_float_s_fu_506_ap_ready),
    .Va(grp_SVPWM_float_s_fu_506_Va),
    .Vb(grp_SVPWM_float_s_fu_506_Vb),
    .Vc(grp_SVPWM_float_s_fu_506_Vc),
    .ap_return_0(grp_SVPWM_float_s_fu_506_ap_return_0),
    .ap_return_1(grp_SVPWM_float_s_fu_506_ap_return_1),
    .ap_return_2(grp_SVPWM_float_s_fu_506_ap_return_2)
);

foc_frontend_clarke_direct_float_s grp_clarke_direct_float_s_fu_512(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_clarke_direct_float_s_fu_512_ap_start),
    .ap_done(grp_clarke_direct_float_s_fu_512_ap_done),
    .ap_idle(grp_clarke_direct_float_s_fu_512_ap_idle),
    .ap_ready(grp_clarke_direct_float_s_fu_512_ap_ready),
    .Ia(grp_clarke_direct_float_s_fu_512_Ia),
    .Ib(grp_clarke_direct_float_s_fu_512_Ib),
    .ap_return_0(grp_clarke_direct_float_s_fu_512_ap_return_0),
    .ap_return_1(grp_clarke_direct_float_s_fu_512_ap_return_1)
);

foc_frontend_clarke_inverse_float_s grp_clarke_inverse_float_s_fu_517(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_clarke_inverse_float_s_fu_517_ap_start),
    .ap_done(grp_clarke_inverse_float_s_fu_517_ap_done),
    .ap_idle(grp_clarke_inverse_float_s_fu_517_ap_idle),
    .ap_ready(grp_clarke_inverse_float_s_fu_517_ap_ready),
    .Valpha(grp_clarke_inverse_float_s_fu_517_Valpha),
    .Vbeta(grp_clarke_inverse_float_s_fu_517_Vbeta),
    .ap_return_0(grp_clarke_inverse_float_s_fu_517_ap_return_0),
    .ap_return_1(grp_clarke_inverse_float_s_fu_517_ap_return_1),
    .ap_return_2(grp_clarke_inverse_float_s_fu_517_ap_return_2)
);

foc_frontend_park_direct_float_s grp_park_direct_float_s_fu_538(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_park_direct_float_s_fu_538_ap_start),
    .ap_done(grp_park_direct_float_s_fu_538_ap_done),
    .ap_idle(grp_park_direct_float_s_fu_538_ap_idle),
    .ap_ready(grp_park_direct_float_s_fu_538_ap_ready),
    .Ialpha(grp_park_direct_float_s_fu_538_Ialpha),
    .Ibeta(grp_park_direct_float_s_fu_538_Ibeta),
    .angle(grp_park_direct_float_s_fu_538_angle),
    .ap_return_0(grp_park_direct_float_s_fu_538_ap_return_0),
    .ap_return_1(grp_park_direct_float_s_fu_538_ap_return_1)
);

foc_frontend_park_inverse_float_s grp_park_inverse_float_s_fu_546(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_park_inverse_float_s_fu_546_ap_start),
    .ap_done(grp_park_inverse_float_s_fu_546_ap_done),
    .ap_idle(grp_park_inverse_float_s_fu_546_ap_idle),
    .ap_ready(grp_park_inverse_float_s_fu_546_ap_ready),
    .Vd(grp_park_inverse_float_s_fu_546_Vd),
    .Vq(grp_park_inverse_float_s_fu_546_Vq),
    .angle(grp_park_inverse_float_s_fu_546_angle),
    .ap_return_0(grp_park_inverse_float_s_fu_546_ap_return_0),
    .ap_return_1(grp_park_inverse_float_s_fu_546_ap_return_1)
);

foc_frontend_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .control_address0(control_address0),
    .control_ce0(control_ce0),
    .control_q0(control_q0),
    .logger_address0(logger_address0),
    .logger_ce0(logger_ce0),
    .logger_we0(logger_we0),
    .logger_d0(logger_d0),
    .ap_local_deadlock(ap_local_deadlock)
);

foc_frontend_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U168(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_294_p0),
    .din1(grp_fu_294_p1),
    .ce(1'b1),
    .opcode(5'd1),
    .dout(grp_fu_294_p2)
);

foc_frontend_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_full_dsp_1_U169(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_522_p0),
    .din1(grp_fu_522_p1),
    .ce(grp_fu_522_ce),
    .dout(grp_fu_522_p2)
);

foc_frontend_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U170(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_526_p0),
    .ce(grp_fu_526_ce),
    .dout(grp_fu_526_p1)
);

foc_frontend_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U171(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_529_p0),
    .ce(grp_fu_529_ce),
    .dout(grp_fu_529_p1)
);

foc_frontend_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U172(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_532_p0),
    .ce(grp_fu_532_ce),
    .dout(grp_fu_532_p1)
);

foc_frontend_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U173(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_535_p0),
    .ce(grp_fu_535_ce),
    .dout(grp_fu_535_p1)
);

foc_frontend_regslice_both #(
    .DataWidth( 80 ))
regslice_both_A_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TDATA),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_data_V_U_ack_in),
    .data_out(A_TDATA_int_regslice),
    .vld_out(A_TVALID_int_regslice),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_data_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 10 ))
regslice_both_A_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TKEEP),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_keep_V_U_ack_in),
    .data_out(A_TKEEP_int_regslice),
    .vld_out(regslice_both_A_V_keep_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_keep_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 10 ))
regslice_both_A_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TSTRB),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_strb_V_U_ack_in),
    .data_out(A_TSTRB_int_regslice),
    .vld_out(regslice_both_A_V_strb_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_strb_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 1 ))
regslice_both_A_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TLAST),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_last_V_U_ack_in),
    .data_out(A_TLAST_int_regslice),
    .vld_out(regslice_both_A_V_last_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_last_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 64 ))
regslice_both_B_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(B_TDATA_int_regslice),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(B_TREADY_int_regslice),
    .data_out(B_TDATA),
    .vld_out(regslice_both_B_V_data_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_data_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 8 ))
regslice_both_B_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(B_TKEEP_int_regslice),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(regslice_both_B_V_keep_V_U_ack_in_dummy),
    .data_out(B_TKEEP),
    .vld_out(regslice_both_B_V_keep_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_keep_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 8 ))
regslice_both_B_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(B_TSTRB_int_regslice),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(regslice_both_B_V_strb_V_U_ack_in_dummy),
    .data_out(B_TSTRB),
    .vld_out(regslice_both_B_V_strb_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_strb_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 1 ))
regslice_both_B_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(B_TLAST_int_regslice),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(regslice_both_B_V_last_V_U_ack_in_dummy),
    .data_out(B_TLAST),
    .vld_out(regslice_both_B_V_last_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_last_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 64 ))
regslice_both_C_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(C_TDATA_int_regslice),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(C_TREADY_int_regslice),
    .data_out(C_TDATA),
    .vld_out(regslice_both_C_V_data_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_data_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 8 ))
regslice_both_C_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(C_TKEEP_int_regslice),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(regslice_both_C_V_keep_V_U_ack_in_dummy),
    .data_out(C_TKEEP),
    .vld_out(regslice_both_C_V_keep_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_keep_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 8 ))
regslice_both_C_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(C_TSTRB_int_regslice),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(regslice_both_C_V_strb_V_U_ack_in_dummy),
    .data_out(C_TSTRB),
    .vld_out(regslice_both_C_V_strb_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_strb_V_U_apdone_blk)
);

foc_frontend_regslice_both #(
    .DataWidth( 1 ))
regslice_both_C_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(C_TLAST_int_regslice),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(regslice_both_C_V_last_V_U_ack_in_dummy),
    .data_out(C_TLAST),
    .vld_out(regslice_both_C_V_last_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_calibration_fu_146_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln13_fu_337_p2))) begin
            grp_calibration_fu_146_ap_start_reg <= 1'b1;
        end else if ((grp_calibration_fu_146_ap_ready == 1'b1)) begin
            grp_calibration_fu_146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_foc_fu_240_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_foc_fu_240_ap_start_reg <= 1'b1;
        end else if ((grp_foc_fu_240_ap_ready == 1'b1)) begin
            grp_foc_fu_240_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_manual_control_fu_158_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10))) begin
            grp_manual_control_fu_158_ap_start_reg <= 1'b1;
        end else if ((grp_manual_control_fu_158_ap_ready == 1'b1)) begin
            grp_manual_control_fu_158_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_torque_foc_fu_186_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_torque_foc_fu_186_ap_start_reg <= 1'b1;
        end else if ((grp_torque_foc_fu_186_ap_ready == 1'b1)) begin
            grp_torque_foc_fu_186_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_Y1a_prev_o_ap_vld == 1'b1))) begin
        Y1a_prev <= grp_foc_fu_240_Y1a_prev_o;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_Y1a_prev_o_ap_vld == 1'b1))) begin
        Y1a_prev <= grp_torque_foc_fu_186_Y1a_prev_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_Y1b_prev_o_ap_vld == 1'b1))) begin
        Y1b_prev <= grp_foc_fu_240_Y1b_prev_o;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_Y1b_prev_o_ap_vld == 1'b1))) begin
        Y1b_prev <= grp_torque_foc_fu_186_Y1b_prev_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_Y2a_prev_o_ap_vld == 1'b1))) begin
        Y2a_prev <= grp_foc_fu_240_Y2a_prev_o;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_Y2a_prev_o_ap_vld == 1'b1))) begin
        Y2a_prev <= grp_torque_foc_fu_186_Y2a_prev_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_Y2b_prev_o_ap_vld == 1'b1))) begin
        Y2b_prev <= grp_foc_fu_240_Y2b_prev_o;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_Y2b_prev_o_ap_vld == 1'b1))) begin
        Y2b_prev <= grp_torque_foc_fu_186_Y2b_prev_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_ierr_o_ap_vld == 1'b1))) begin
        ierr <= grp_foc_fu_240_ierr_o;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_ierr_o_ap_vld == 1'b1))) begin
        ierr <= grp_torque_foc_fu_186_ierr_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_velocity_accum_o_ap_vld == 1'b1))) begin
        velocity_accum <= grp_foc_fu_240_velocity_accum_o;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_velocity_accum_o_ap_vld == 1'b1))) begin
        velocity_accum <= grp_torque_foc_fu_186_velocity_accum_o;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        and_ln18_reg_456 <= and_ln18_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        and_ln20_reg_475 <= and_ln20_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        and_ln22_reg_494 <= and_ln22_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln13_1_reg_433 <= icmp_ln13_1_fu_327_p2;
        icmp_ln13_reg_428 <= grp_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln18_1_reg_451 <= icmp_ln18_1_fu_352_p2;
        icmp_ln18_reg_446 <= grp_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln20_1_reg_470 <= icmp_ln20_1_fu_377_p2;
        icmp_ln20_reg_465 <= grp_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln22_1_reg_489 <= icmp_ln22_1_fu_402_p2;
        icmp_ln22_reg_484 <= grp_fu_312_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        A_TDATA_blk_n = A_TVALID_int_regslice;
    end else begin
        A_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == A_TVALID_int_regslice) | (grp_calibration_fu_146_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state17))) begin
        A_TREADY_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        A_TREADY_int_regslice = grp_foc_fu_240_A_TREADY;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        A_TREADY_int_regslice = grp_torque_foc_fu_186_A_TREADY;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        A_TREADY_int_regslice = grp_manual_control_fu_158_A_TREADY;
    end else begin
        A_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_B_TVALID == 1'b1))) begin
        B_TDATA_int_regslice = grp_foc_fu_240_B_TDATA;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_B_TVALID == 1'b1))) begin
        B_TDATA_int_regslice = grp_torque_foc_fu_186_B_TDATA;
    end else if ((((1'b1 == ap_CS_fsm_state14) & (grp_manual_control_fu_158_B_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_manual_control_fu_158_B_TVALID == 1'b1)))) begin
        B_TDATA_int_regslice = grp_manual_control_fu_158_B_TDATA;
    end else if (((1'b1 == ap_CS_fsm_state17) & (grp_calibration_fu_146_B_TVALID == 1'b1))) begin
        B_TDATA_int_regslice = grp_calibration_fu_146_B_TDATA;
    end else begin
        B_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_B_TVALID == 1'b1))) begin
        B_TKEEP_int_regslice = grp_foc_fu_240_B_TKEEP;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_B_TVALID == 1'b1))) begin
        B_TKEEP_int_regslice = grp_torque_foc_fu_186_B_TKEEP;
    end else if ((((1'b1 == ap_CS_fsm_state14) & (grp_manual_control_fu_158_B_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_manual_control_fu_158_B_TVALID == 1'b1)))) begin
        B_TKEEP_int_regslice = grp_manual_control_fu_158_B_TKEEP;
    end else if (((1'b1 == ap_CS_fsm_state17) & (grp_calibration_fu_146_B_TVALID == 1'b1))) begin
        B_TKEEP_int_regslice = grp_calibration_fu_146_B_TKEEP;
    end else begin
        B_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_B_TVALID == 1'b1))) begin
        B_TLAST_int_regslice = grp_foc_fu_240_B_TLAST;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_B_TVALID == 1'b1))) begin
        B_TLAST_int_regslice = grp_torque_foc_fu_186_B_TLAST;
    end else if ((((1'b1 == ap_CS_fsm_state14) & (grp_manual_control_fu_158_B_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_manual_control_fu_158_B_TVALID == 1'b1)))) begin
        B_TLAST_int_regslice = grp_manual_control_fu_158_B_TLAST;
    end else if (((1'b1 == ap_CS_fsm_state17) & (grp_calibration_fu_146_B_TVALID == 1'b1))) begin
        B_TLAST_int_regslice = grp_calibration_fu_146_B_TLAST;
    end else begin
        B_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_B_TVALID == 1'b1))) begin
        B_TSTRB_int_regslice = grp_foc_fu_240_B_TSTRB;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_B_TVALID == 1'b1))) begin
        B_TSTRB_int_regslice = grp_torque_foc_fu_186_B_TSTRB;
    end else if ((((1'b1 == ap_CS_fsm_state14) & (grp_manual_control_fu_158_B_TVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_manual_control_fu_158_B_TVALID == 1'b1)))) begin
        B_TSTRB_int_regslice = grp_manual_control_fu_158_B_TSTRB;
    end else if (((1'b1 == ap_CS_fsm_state17) & (grp_calibration_fu_146_B_TVALID == 1'b1))) begin
        B_TSTRB_int_regslice = grp_calibration_fu_146_B_TSTRB;
    end else begin
        B_TSTRB_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        B_TVALID_int_regslice = grp_foc_fu_240_B_TVALID;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        B_TVALID_int_regslice = grp_torque_foc_fu_186_B_TVALID;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        B_TVALID_int_regslice = grp_manual_control_fu_158_B_TVALID;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        B_TVALID_int_regslice = grp_calibration_fu_146_B_TVALID;
    end else begin
        B_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_C_TVALID == 1'b1))) begin
        C_TDATA_int_regslice = grp_foc_fu_240_C_TDATA;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_C_TVALID == 1'b1))) begin
        C_TDATA_int_regslice = grp_torque_foc_fu_186_C_TDATA;
    end else begin
        C_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_C_TVALID == 1'b1))) begin
        C_TKEEP_int_regslice = grp_foc_fu_240_C_TKEEP;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_C_TVALID == 1'b1))) begin
        C_TKEEP_int_regslice = grp_torque_foc_fu_186_C_TKEEP;
    end else begin
        C_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_C_TVALID == 1'b1))) begin
        C_TLAST_int_regslice = grp_foc_fu_240_C_TLAST;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_C_TVALID == 1'b1))) begin
        C_TLAST_int_regslice = grp_torque_foc_fu_186_C_TLAST;
    end else begin
        C_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_C_TVALID == 1'b1))) begin
        C_TSTRB_int_regslice = grp_foc_fu_240_C_TSTRB;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456) & (grp_torque_foc_fu_186_C_TVALID == 1'b1))) begin
        C_TSTRB_int_regslice = grp_torque_foc_fu_186_C_TSTRB;
    end else begin
        C_TSTRB_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        C_TVALID_int_regslice = grp_foc_fu_240_C_TVALID;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        C_TVALID_int_regslice = grp_torque_foc_fu_186_C_TVALID;
    end else begin
        C_TVALID_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state11_on_subcall_done)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_manual_control_fu_158_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_foc_fu_240_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == A_TVALID_int_regslice) | (grp_calibration_fu_146_ap_done == 1'b0))) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_C_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_B_V_data_V_U_apdone_blk == 1'b1))) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state1_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        buffer_velocity_address0 = grp_foc_fu_240_buffer_velocity_address0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        buffer_velocity_address0 = grp_torque_foc_fu_186_buffer_velocity_address0;
    end else begin
        buffer_velocity_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        buffer_velocity_ce0 = grp_foc_fu_240_buffer_velocity_ce0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        buffer_velocity_ce0 = grp_torque_foc_fu_186_buffer_velocity_ce0;
    end else begin
        buffer_velocity_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        buffer_velocity_d0 = grp_foc_fu_240_buffer_velocity_d0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        buffer_velocity_d0 = grp_torque_foc_fu_186_buffer_velocity_d0;
    end else begin
        buffer_velocity_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        buffer_velocity_we0 = grp_foc_fu_240_buffer_velocity_we0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        buffer_velocity_we0 = grp_torque_foc_fu_186_buffer_velocity_we0;
    end else begin
        buffer_velocity_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        control_address0 = control_addr_reg_418;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        control_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        control_address0 = grp_foc_fu_240_control_address0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        control_address0 = grp_torque_foc_fu_186_control_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        control_address0 = grp_manual_control_fu_158_control_address0;
    end else begin
        control_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        control_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        control_ce0 = grp_foc_fu_240_control_ce0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        control_ce0 = grp_torque_foc_fu_186_control_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        control_ce0 = grp_manual_control_fu_158_control_ce0;
    end else begin
        control_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_PI_control_float_s_fu_498_KI = grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din4;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_PI_control_float_s_fu_498_KI = grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din4;
    end else begin
        grp_PI_control_float_s_fu_498_KI = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_PI_control_float_s_fu_498_KP = grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_PI_control_float_s_fu_498_KP = grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din3;
    end else begin
        grp_PI_control_float_s_fu_498_KP = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_PI_control_float_s_fu_498_ap_start = grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_start;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_PI_control_float_s_fu_498_ap_start = grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_start;
    end else begin
        grp_PI_control_float_s_fu_498_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_PI_control_float_s_fu_498_ierr_i = grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din5;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_PI_control_float_s_fu_498_ierr_i = grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din5;
    end else begin
        grp_PI_control_float_s_fu_498_ierr_i = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_PI_control_float_s_fu_498_ref = grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_PI_control_float_s_fu_498_ref = grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din1;
    end else begin
        grp_PI_control_float_s_fu_498_ref = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_PI_control_float_s_fu_498_val_r = grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_PI_control_float_s_fu_498_val_r = grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din2;
    end else begin
        grp_PI_control_float_s_fu_498_val_r = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_SVPWM_float_s_fu_506_Va = grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_SVPWM_float_s_fu_506_Va = grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din1;
    end else begin
        grp_SVPWM_float_s_fu_506_Va = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_SVPWM_float_s_fu_506_Vb = grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_SVPWM_float_s_fu_506_Vb = grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din2;
    end else begin
        grp_SVPWM_float_s_fu_506_Vb = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_SVPWM_float_s_fu_506_Vc = grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_SVPWM_float_s_fu_506_Vc = grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din3;
    end else begin
        grp_SVPWM_float_s_fu_506_Vc = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_SVPWM_float_s_fu_506_ap_start = grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_start;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_SVPWM_float_s_fu_506_ap_start = grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_start;
    end else begin
        grp_SVPWM_float_s_fu_506_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_clarke_direct_float_s_fu_512_Ia = grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_clarke_direct_float_s_fu_512_Ia = grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din1;
    end else begin
        grp_clarke_direct_float_s_fu_512_Ia = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_clarke_direct_float_s_fu_512_Ib = grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_clarke_direct_float_s_fu_512_Ib = grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din2;
    end else begin
        grp_clarke_direct_float_s_fu_512_Ib = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_clarke_direct_float_s_fu_512_ap_start = grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_start;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_clarke_direct_float_s_fu_512_ap_start = grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_start;
    end else begin
        grp_clarke_direct_float_s_fu_512_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_clarke_inverse_float_s_fu_517_Valpha = grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_clarke_inverse_float_s_fu_517_Valpha = grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din1;
    end else begin
        grp_clarke_inverse_float_s_fu_517_Valpha = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_clarke_inverse_float_s_fu_517_Vbeta = grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_clarke_inverse_float_s_fu_517_Vbeta = grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din2;
    end else begin
        grp_clarke_inverse_float_s_fu_517_Vbeta = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_clarke_inverse_float_s_fu_517_ap_start = grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_start;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_clarke_inverse_float_s_fu_517_ap_start = grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_start;
    end else begin
        grp_clarke_inverse_float_s_fu_517_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_294_p0 = bitcast_ln22_fu_393_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_294_p0 = bitcast_ln20_fu_368_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_294_p0 = bitcast_ln18_fu_343_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_294_p0 = bitcast_ln13_fu_318_p1;
    end else begin
        grp_fu_294_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_294_p1 = 32'd1084227584;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_294_p1 = 32'd1082130432;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_294_p1 = 32'd1077936128;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_294_p1 = 32'd1073741824;
    end else begin
        grp_fu_294_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_522_ce = grp_foc_fu_240_grp_fu_522_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_522_ce = grp_torque_foc_fu_186_grp_fu_522_p_ce;
    end else begin
        grp_fu_522_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_522_p0 = grp_foc_fu_240_grp_fu_522_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_522_p0 = grp_torque_foc_fu_186_grp_fu_522_p_din0;
    end else begin
        grp_fu_522_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_522_p1 = grp_foc_fu_240_grp_fu_522_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_522_p1 = grp_torque_foc_fu_186_grp_fu_522_p_din1;
    end else begin
        grp_fu_522_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_526_ce = grp_foc_fu_240_grp_fu_526_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_526_ce = grp_torque_foc_fu_186_grp_fu_526_p_ce;
    end else begin
        grp_fu_526_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_526_p0 = grp_foc_fu_240_grp_fu_526_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_526_p0 = grp_torque_foc_fu_186_grp_fu_526_p_din0;
    end else begin
        grp_fu_526_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_529_ce = grp_foc_fu_240_grp_fu_529_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_529_ce = grp_torque_foc_fu_186_grp_fu_529_p_ce;
    end else begin
        grp_fu_529_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_529_p0 = grp_foc_fu_240_grp_fu_529_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_529_p0 = grp_torque_foc_fu_186_grp_fu_529_p_din0;
    end else begin
        grp_fu_529_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_532_ce = grp_foc_fu_240_grp_fu_532_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_532_ce = grp_torque_foc_fu_186_grp_fu_532_p_ce;
    end else begin
        grp_fu_532_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_532_p0 = grp_foc_fu_240_grp_fu_532_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_532_p0 = grp_torque_foc_fu_186_grp_fu_532_p_din0;
    end else begin
        grp_fu_532_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_535_ce = grp_foc_fu_240_grp_fu_535_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_535_ce = grp_torque_foc_fu_186_grp_fu_535_p_ce;
    end else begin
        grp_fu_535_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_535_p0 = grp_foc_fu_240_grp_fu_535_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_535_p0 = grp_torque_foc_fu_186_grp_fu_535_p_din0;
    end else begin
        grp_fu_535_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_direct_float_s_fu_538_Ialpha = grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_direct_float_s_fu_538_Ialpha = grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din1;
    end else begin
        grp_park_direct_float_s_fu_538_Ialpha = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_direct_float_s_fu_538_Ibeta = grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_direct_float_s_fu_538_Ibeta = grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din2;
    end else begin
        grp_park_direct_float_s_fu_538_Ibeta = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_direct_float_s_fu_538_angle = grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_direct_float_s_fu_538_angle = grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din3;
    end else begin
        grp_park_direct_float_s_fu_538_angle = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_direct_float_s_fu_538_ap_start = grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_start;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_direct_float_s_fu_538_ap_start = grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_start;
    end else begin
        grp_park_direct_float_s_fu_538_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_inverse_float_s_fu_546_Vd = grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_inverse_float_s_fu_546_Vd = grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din1;
    end else begin
        grp_park_inverse_float_s_fu_546_Vd = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_inverse_float_s_fu_546_Vq = grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_inverse_float_s_fu_546_Vq = grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din2;
    end else begin
        grp_park_inverse_float_s_fu_546_Vq = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_inverse_float_s_fu_546_angle = grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_inverse_float_s_fu_546_angle = grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din3;
    end else begin
        grp_park_inverse_float_s_fu_546_angle = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_park_inverse_float_s_fu_546_ap_start = grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_start;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_park_inverse_float_s_fu_546_ap_start = grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_start;
    end else begin
        grp_park_inverse_float_s_fu_546_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        logger_address0 = grp_foc_fu_240_logger_address0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        logger_address0 = grp_torque_foc_fu_186_logger_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        logger_address0 = grp_manual_control_fu_158_logger_address0;
    end else begin
        logger_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        logger_ce0 = grp_foc_fu_240_logger_ce0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        logger_ce0 = grp_torque_foc_fu_186_logger_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        logger_ce0 = grp_manual_control_fu_158_logger_ce0;
    end else begin
        logger_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        logger_d0 = grp_foc_fu_240_logger_d0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        logger_d0 = grp_torque_foc_fu_186_logger_d0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        logger_d0 = grp_manual_control_fu_158_logger_d0;
    end else begin
        logger_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        logger_we0 = grp_foc_fu_240_logger_we0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456))) begin
        logger_we0 = grp_torque_foc_fu_186_logger_we0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456)))) begin
        logger_we0 = grp_manual_control_fu_158_logger_we0;
    end else begin
        logger_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == and_ln13_fu_337_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'd1 == and_ln18_fu_362_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == and_ln20_fu_387_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln22_fu_412_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_manual_control_fu_158_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (grp_foc_fu_240_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if ((~((1'b0 == A_TVALID_int_regslice) | (grp_calibration_fu_146_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if ((~((regslice_both_C_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_B_V_data_V_U_apdone_blk == 1'b1)) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_TREADY = regslice_both_A_V_data_V_U_ack_in;

assign B_TVALID = regslice_both_B_V_data_V_U_vld_out;

assign C_TVALID = regslice_both_C_V_data_V_U_vld_out;

assign and_ln13_fu_337_p2 = (or_ln13_fu_333_p2 & grp_fu_294_p2);

assign and_ln18_fu_362_p2 = (or_ln18_fu_358_p2 & grp_fu_294_p2);

assign and_ln20_fu_387_p2 = (or_ln20_fu_383_p2 & grp_fu_294_p2);

assign and_ln22_fu_412_p2 = (or_ln22_fu_408_p2 & grp_fu_294_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state11_on_subcall_done = (((ap_predicate_op97_call_state11 == 1'b1) & (grp_torque_foc_fu_186_ap_done == 1'b0)) | ((ap_predicate_op95_call_state11 == 1'b1) & (grp_manual_control_fu_158_ap_done == 1'b0)));
end

always @ (*) begin
    ap_block_state18 = ((regslice_both_C_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_B_V_data_V_U_apdone_blk == 1'b1));
end


assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_predicate_op95_call_state11 = ((1'd0 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456));
end

always @ (*) begin
    ap_predicate_op97_call_state11 = ((1'd1 == and_ln22_reg_494) & (1'd0 == and_ln20_reg_475) & (1'd0 == and_ln18_reg_456));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln13_fu_318_p1 = control_q0;

assign bitcast_ln18_fu_343_p1 = control_q0;

assign bitcast_ln20_fu_368_p1 = control_q0;

assign bitcast_ln22_fu_393_p1 = control_q0;

assign control_addr_reg_418 = 64'd5;

assign grp_calibration_fu_146_B_TREADY = (ap_CS_fsm_state17 & B_TREADY_int_regslice);

assign grp_calibration_fu_146_ap_start = grp_calibration_fu_146_ap_start_reg;

assign grp_foc_fu_240_B_TREADY = (ap_CS_fsm_state16 & B_TREADY_int_regslice);

assign grp_foc_fu_240_C_TREADY = (ap_CS_fsm_state16 & C_TREADY_int_regslice);

assign grp_foc_fu_240_ap_start = grp_foc_fu_240_ap_start_reg;

assign grp_fu_302_p4 = {{control_q0[30:23]}};

assign grp_fu_312_p2 = ((grp_fu_302_p4 != 8'd255) ? 1'b1 : 1'b0);

assign grp_manual_control_fu_158_B_TREADY = ((ap_CS_fsm_state14 & B_TREADY_int_regslice) | (ap_CS_fsm_state11 & B_TREADY_int_regslice));

assign grp_manual_control_fu_158_ap_start = grp_manual_control_fu_158_ap_start_reg;

assign grp_torque_foc_fu_186_B_TREADY = (ap_CS_fsm_state11 & B_TREADY_int_regslice);

assign grp_torque_foc_fu_186_C_TREADY = (ap_CS_fsm_state11 & C_TREADY_int_regslice);

assign grp_torque_foc_fu_186_ap_start = grp_torque_foc_fu_186_ap_start_reg;

assign icmp_ln13_1_fu_327_p2 = ((trunc_ln13_fu_323_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln18_1_fu_352_p2 = ((trunc_ln18_fu_348_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_377_p2 = ((trunc_ln20_fu_373_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_1_fu_402_p2 = ((trunc_ln22_fu_398_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_ln13_fu_333_p2 = (icmp_ln13_reg_428 | icmp_ln13_1_reg_433);

assign or_ln18_fu_358_p2 = (icmp_ln18_reg_446 | icmp_ln18_1_reg_451);

assign or_ln20_fu_383_p2 = (icmp_ln20_reg_465 | icmp_ln20_1_reg_470);

assign or_ln22_fu_408_p2 = (icmp_ln22_reg_484 | icmp_ln22_1_reg_489);

assign trunc_ln13_fu_323_p1 = control_q0[22:0];

assign trunc_ln18_fu_348_p1 = control_q0[22:0];

assign trunc_ln20_fu_373_p1 = control_q0[22:0];

assign trunc_ln22_fu_398_p1 = control_q0[22:0];


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "foc_frontend_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //foc_frontend
























































