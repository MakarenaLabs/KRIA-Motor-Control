// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module foc_park_direct_ap_fixed_32_16_5_3_0_Pipeline_VITIS_LOOP_87_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln245,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [32:0] sext_ln245;
output  [32:0] p_out;
output   p_out_ap_vld;
output  [32:0] p_out1;
output   p_out1_ap_vld;

reg ap_idle;
reg p_out_ap_vld;
reg p_out1_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln87_fu_128_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [6:0] cordic_apfixed_circ_table_arctan_128_V_address0;
reg    cordic_apfixed_circ_table_arctan_128_V_ce0;
wire   [125:0] cordic_apfixed_circ_table_arctan_128_V_q0;
reg   [5:0] n_4_reg_309;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln87_reg_314;
wire   [63:0] zext_ln87_fu_140_p1;
wire    ap_block_pp0_stage0;
reg   [33:0] p_Val2_s_fu_52;
wire   [33:0] tz_fu_242_p3;
wire  signed [33:0] sext_ln245_cast_fu_101_p1;
wire    ap_loop_init;
reg   [33:0] tx_2_fu_56;
wire   [33:0] tx_fu_258_p3;
reg   [33:0] ty_2_fu_60;
wire   [33:0] ty_fu_250_p3;
reg   [5:0] n_fu_64;
wire   [5:0] add_ln87_fu_134_p2;
reg   [5:0] ap_sig_allocacmp_n_4;
wire    ap_block_pp0_stage0_01001;
wire   [33:0] zext_ln1386_fu_177_p1;
wire   [30:0] tmp_s_fu_192_p4;
wire   [33:0] r_V_9_fu_186_p2;
wire   [33:0] r_V_fu_180_p2;
wire   [33:0] zext_ln717_fu_202_p1;
wire   [0:0] p_Result_s_fu_169_p3;
wire   [33:0] add_ln712_3_fu_218_p2;
wire   [33:0] sub_ln712_7_fu_236_p2;
wire   [33:0] sub_ln712_fu_212_p2;
wire   [33:0] add_ln712_4_fu_230_p2;
wire   [33:0] add_ln712_fu_206_p2;
wire   [33:0] sub_ln712_6_fu_224_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

foc_park_direct_ap_fixed_32_16_5_3_0_Pipeline_VITIS_LOOP_87_1_cordic_apfixed_circbkb #(
    .DataWidth( 126 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
cordic_apfixed_circ_table_arctan_128_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cordic_apfixed_circ_table_arctan_128_V_address0),
    .ce0(cordic_apfixed_circ_table_arctan_128_V_ce0),
    .q0(cordic_apfixed_circ_table_arctan_128_V_q0)
);

foc_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln87_fu_128_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n_fu_64 <= add_ln87_fu_134_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_64 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_52 <= sext_ln245_cast_fu_101_p1;
        end else if (((icmp_ln87_reg_314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_s_fu_52 <= tz_fu_242_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tx_2_fu_56 <= 34'd1304065748;
        end else if (((icmp_ln87_reg_314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            tx_2_fu_56 <= tx_fu_258_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            ty_2_fu_60 <= 34'd0;
        end else if (((icmp_ln87_reg_314 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ty_2_fu_60 <= ty_fu_250_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln87_reg_314 <= icmp_ln87_fu_128_p2;
        n_4_reg_309 <= ap_sig_allocacmp_n_4;
    end
end

always @ (*) begin
    if (((icmp_ln87_fu_128_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_4 = 6'd0;
    end else begin
        ap_sig_allocacmp_n_4 = n_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cordic_apfixed_circ_table_arctan_128_V_ce0 = 1'b1;
    end else begin
        cordic_apfixed_circ_table_arctan_128_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_314 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_314 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln712_3_fu_218_p2 = (zext_ln717_fu_202_p1 + p_Val2_s_fu_52);

assign add_ln712_4_fu_230_p2 = (r_V_fu_180_p2 + ty_2_fu_60);

assign add_ln712_fu_206_p2 = (tx_2_fu_56 + r_V_9_fu_186_p2);

assign add_ln87_fu_134_p2 = (ap_sig_allocacmp_n_4 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign cordic_apfixed_circ_table_arctan_128_V_address0 = zext_ln87_fu_140_p1;

assign icmp_ln87_fu_128_p2 = ((ap_sig_allocacmp_n_4 == 6'd34) ? 1'b1 : 1'b0);

assign p_Result_s_fu_169_p3 = p_Val2_s_fu_52[32'd33];

assign p_out = ty_2_fu_60[32:0];

assign p_out1 = tx_2_fu_56[32:0];

assign r_V_9_fu_186_p2 = $signed(ty_2_fu_60) >>> zext_ln1386_fu_177_p1;

assign r_V_fu_180_p2 = $signed(tx_2_fu_56) >>> zext_ln1386_fu_177_p1;

assign sext_ln245_cast_fu_101_p1 = $signed(sext_ln245);

assign sub_ln712_6_fu_224_p2 = (tx_2_fu_56 - r_V_9_fu_186_p2);

assign sub_ln712_7_fu_236_p2 = (p_Val2_s_fu_52 - zext_ln717_fu_202_p1);

assign sub_ln712_fu_212_p2 = (ty_2_fu_60 - r_V_fu_180_p2);

assign tmp_s_fu_192_p4 = {{cordic_apfixed_circ_table_arctan_128_V_q0[125:95]}};

assign tx_fu_258_p3 = ((p_Result_s_fu_169_p3[0:0] == 1'b1) ? add_ln712_fu_206_p2 : sub_ln712_6_fu_224_p2);

assign ty_fu_250_p3 = ((p_Result_s_fu_169_p3[0:0] == 1'b1) ? sub_ln712_fu_212_p2 : add_ln712_4_fu_230_p2);

assign tz_fu_242_p3 = ((p_Result_s_fu_169_p3[0:0] == 1'b1) ? add_ln712_3_fu_218_p2 : sub_ln712_7_fu_236_p2);

assign zext_ln1386_fu_177_p1 = n_4_reg_309;

assign zext_ln717_fu_202_p1 = tmp_s_fu_192_p4;

assign zext_ln87_fu_140_p1 = ap_sig_allocacmp_n_4;

endmodule //foc_park_direct_ap_fixed_32_16_5_3_0_Pipeline_VITIS_LOOP_87_1
