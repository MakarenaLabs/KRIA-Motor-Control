// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="foc_foc,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.389800,HLS_SYN_LAT=168,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=5205,HLS_SYN_LUT=11152,HLS_VERSION=2021_2}" *)

module foc (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        A_TDATA,
        A_TVALID,
        A_TREADY,
        A_TKEEP,
        A_TSTRB,
        A_TLAST,
        B_TDATA,
        B_TVALID,
        B_TREADY,
        B_TKEEP,
        B_TSTRB,
        B_TLAST,
        C_TDATA,
        C_TVALID,
        C_TREADY,
        C_TKEEP,
        C_TSTRB,
        C_TLAST,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP
);

parameter    ap_ST_fsm_state1 = 118'd1;
parameter    ap_ST_fsm_state2 = 118'd2;
parameter    ap_ST_fsm_state3 = 118'd4;
parameter    ap_ST_fsm_state4 = 118'd8;
parameter    ap_ST_fsm_state5 = 118'd16;
parameter    ap_ST_fsm_state6 = 118'd32;
parameter    ap_ST_fsm_state7 = 118'd64;
parameter    ap_ST_fsm_state8 = 118'd128;
parameter    ap_ST_fsm_state9 = 118'd256;
parameter    ap_ST_fsm_state10 = 118'd512;
parameter    ap_ST_fsm_state11 = 118'd1024;
parameter    ap_ST_fsm_state12 = 118'd2048;
parameter    ap_ST_fsm_state13 = 118'd4096;
parameter    ap_ST_fsm_state14 = 118'd8192;
parameter    ap_ST_fsm_state15 = 118'd16384;
parameter    ap_ST_fsm_state16 = 118'd32768;
parameter    ap_ST_fsm_state17 = 118'd65536;
parameter    ap_ST_fsm_state18 = 118'd131072;
parameter    ap_ST_fsm_state19 = 118'd262144;
parameter    ap_ST_fsm_state20 = 118'd524288;
parameter    ap_ST_fsm_state21 = 118'd1048576;
parameter    ap_ST_fsm_state22 = 118'd2097152;
parameter    ap_ST_fsm_state23 = 118'd4194304;
parameter    ap_ST_fsm_state24 = 118'd8388608;
parameter    ap_ST_fsm_state25 = 118'd16777216;
parameter    ap_ST_fsm_state26 = 118'd33554432;
parameter    ap_ST_fsm_state27 = 118'd67108864;
parameter    ap_ST_fsm_state28 = 118'd134217728;
parameter    ap_ST_fsm_state29 = 118'd268435456;
parameter    ap_ST_fsm_state30 = 118'd536870912;
parameter    ap_ST_fsm_state31 = 118'd1073741824;
parameter    ap_ST_fsm_state32 = 118'd2147483648;
parameter    ap_ST_fsm_state33 = 118'd4294967296;
parameter    ap_ST_fsm_state34 = 118'd8589934592;
parameter    ap_ST_fsm_state35 = 118'd17179869184;
parameter    ap_ST_fsm_state36 = 118'd34359738368;
parameter    ap_ST_fsm_state37 = 118'd68719476736;
parameter    ap_ST_fsm_state38 = 118'd137438953472;
parameter    ap_ST_fsm_state39 = 118'd274877906944;
parameter    ap_ST_fsm_state40 = 118'd549755813888;
parameter    ap_ST_fsm_state41 = 118'd1099511627776;
parameter    ap_ST_fsm_state42 = 118'd2199023255552;
parameter    ap_ST_fsm_state43 = 118'd4398046511104;
parameter    ap_ST_fsm_state44 = 118'd8796093022208;
parameter    ap_ST_fsm_state45 = 118'd17592186044416;
parameter    ap_ST_fsm_state46 = 118'd35184372088832;
parameter    ap_ST_fsm_state47 = 118'd70368744177664;
parameter    ap_ST_fsm_state48 = 118'd140737488355328;
parameter    ap_ST_fsm_state49 = 118'd281474976710656;
parameter    ap_ST_fsm_state50 = 118'd562949953421312;
parameter    ap_ST_fsm_state51 = 118'd1125899906842624;
parameter    ap_ST_fsm_state52 = 118'd2251799813685248;
parameter    ap_ST_fsm_state53 = 118'd4503599627370496;
parameter    ap_ST_fsm_state54 = 118'd9007199254740992;
parameter    ap_ST_fsm_state55 = 118'd18014398509481984;
parameter    ap_ST_fsm_state56 = 118'd36028797018963968;
parameter    ap_ST_fsm_state57 = 118'd72057594037927936;
parameter    ap_ST_fsm_state58 = 118'd144115188075855872;
parameter    ap_ST_fsm_state59 = 118'd288230376151711744;
parameter    ap_ST_fsm_state60 = 118'd576460752303423488;
parameter    ap_ST_fsm_state61 = 118'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 118'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 118'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 118'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 118'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 118'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 118'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 118'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 118'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 118'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 118'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 118'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 118'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 118'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 118'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 118'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 118'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 118'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 118'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 118'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 118'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 118'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 118'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 118'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 118'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 118'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 118'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 118'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 118'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 118'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 118'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 118'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 118'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 118'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 118'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 118'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 118'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 118'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 118'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 118'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 118'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 118'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 118'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 118'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 118'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 118'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 118'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 118'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 118'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 118'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 118'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 118'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 118'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 118'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 118'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 118'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 118'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 118'd166153499473114484112975882535043072;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input  [79:0] A_TDATA;
input   A_TVALID;
output   A_TREADY;
input  [9:0] A_TKEEP;
input  [9:0] A_TSTRB;
input  [0:0] A_TLAST;
output  [63:0] B_TDATA;
output   B_TVALID;
input   B_TREADY;
output  [7:0] B_TKEEP;
output  [7:0] B_TSTRB;
output  [0:0] B_TLAST;
output  [63:0] C_TDATA;
output   C_TVALID;
input   C_TREADY;
output  [7:0] C_TKEEP;
output  [7:0] C_TSTRB;
output  [0:0] C_TLAST;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;

wire   [0:0] ap_local_deadlock;
 reg    ap_rst_n_inv;
wire   [31:0] control;
reg   [31:0] velocity_accum;
reg   [4:0] buffer_velocity_address0;
reg    buffer_velocity_ce0;
reg    buffer_velocity_we0;
reg   [31:0] buffer_velocity_d0;
wire   [31:0] buffer_velocity_q0;
wire   [31:0] buffer_velocity_q1;
reg   [31:0] dc_cnt;
reg   [31:0] Ia_DC_acc;
reg   [31:0] Ib_DC_acc;
reg   [31:0] Ia_corr;
reg   [31:0] Ib_corr;
reg   [31:0] ierr;
reg    A_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [117:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    B_TDATA_blk_n;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state118;
reg    C_TDATA_blk_n;
wire   [31:0] grp_fu_352_p1;
reg   [31:0] reg_395;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state14;
wire   [31:0] grp_fu_294_p2;
reg   [31:0] reg_401;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state41;
wire    grp_sin_or_cos_float_s_fu_264_ap_ready;
wire    grp_sin_or_cos_float_s_fu_264_ap_done;
wire    grp_sin_or_cos_float_s_fu_279_ap_ready;
wire    grp_sin_or_cos_float_s_fu_279_ap_done;
reg    ap_block_state41_on_subcall_done;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state107;
wire   [31:0] grp_fu_311_p2;
reg   [31:0] reg_413;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state110;
reg   [31:0] reg_423;
wire    ap_CS_fsm_state39;
reg   [31:0] reg_428;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state73;
reg   [31:0] reg_436;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state58;
wire   [31:0] grp_fu_316_p2;
reg   [31:0] reg_442;
wire   [31:0] grp_fu_324_p2;
reg   [31:0] reg_450;
wire   [31:0] grp_fu_328_p2;
reg   [31:0] reg_455;
wire   [31:0] grp_fu_301_p2;
reg   [31:0] reg_460;
reg   [15:0] trunc_ln_reg_2254;
wire  signed [31:0] sext_ln27_fu_491_p1;
reg   [0:0] tmp_reg_2264;
wire   [31:0] Theta_fu_504_p3;
reg   [31:0] Theta_reg_2269;
wire    ap_CS_fsm_state8;
reg   [31:0] buffer_velocity_load_reg_2277;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln26_fu_511_p1;
wire    ap_CS_fsm_state11;
wire   [31:0] Theta_3_fu_561_p3;
reg   [31:0] Theta_3_reg_2290;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_347_p2;
reg   [31:0] Angle_reg_2295;
wire   [0:0] icmp_ln47_fu_578_p2;
reg   [0:0] icmp_ln47_reg_2303;
wire   [31:0] add_ln59_fu_608_p2;
wire    ap_CS_fsm_state24;
reg   [31:0] control_read_reg_2330;
wire   [31:0] vel_corr_fu_651_p1;
wire    ap_CS_fsm_state30;
wire   [31:0] bitcast_ln54_fu_656_p1;
wire   [63:0] grp_fu_364_p1;
reg   [63:0] conv_i_reg_2345;
wire   [31:0] xor_ln11_fu_669_p2;
reg   [31:0] xor_ln11_reg_2353;
wire    ap_CS_fsm_state34;
wire   [31:0] bitcast_ln11_1_fu_675_p1;
wire    ap_CS_fsm_state35;
reg   [31:0] add_i1_reg_2363;
wire   [63:0] grp_fu_390_p2;
reg   [63:0] mul1_i_reg_2368;
wire    ap_CS_fsm_state38;
wire   [31:0] bitcast_ln354_fu_691_p1;
wire    ap_CS_fsm_state40;
wire   [0:0] icmp_ln11_fu_710_p2;
reg   [0:0] icmp_ln11_reg_2378;
wire   [0:0] icmp_ln11_1_fu_716_p2;
reg   [0:0] icmp_ln11_1_reg_2383;
wire   [31:0] bitcast_ln354_1_fu_734_p1;
wire   [0:0] icmp_ln20_fu_753_p2;
reg   [0:0] icmp_ln20_reg_2393;
wire   [0:0] icmp_ln20_1_fu_759_p2;
reg   [0:0] icmp_ln20_1_reg_2398;
wire   [31:0] grp_fu_359_p1;
reg   [31:0] p_angle_reg_2403;
wire   [31:0] Ialpha_fu_775_p3;
reg   [31:0] Ialpha_reg_2409;
wire   [31:0] Ibeta_fu_793_p3;
reg   [31:0] Ibeta_reg_2415;
wire   [31:0] grp_sin_or_cos_float_s_fu_264_ap_return;
reg   [31:0] tmp_i_reg_2421;
wire   [31:0] grp_sin_or_cos_float_s_fu_279_ap_return;
reg   [31:0] tmp_i_34_reg_2427;
wire   [31:0] grp_fu_332_p2;
reg   [31:0] mul_i3_reg_2433;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] mul3_i_reg_2438;
wire   [31:0] grp_fu_307_p2;
reg   [31:0] control_law_reg_2443;
wire   [0:0] grp_fu_367_p2;
reg   [0:0] tmp_13_reg_2451;
wire    ap_CS_fsm_state50;
wire   [0:0] grp_fu_373_p2;
reg   [0:0] tmp_14_reg_2456;
wire   [0:0] grp_fu_380_p2;
reg   [0:0] tmp_18_reg_2461;
wire   [0:0] grp_fu_385_p2;
reg   [0:0] tmp_19_reg_2466;
wire   [31:0] bitcast_ln354_3_fu_813_p1;
wire    ap_CS_fsm_state51;
wire   [0:0] or_ln25_fu_844_p2;
reg   [0:0] or_ln25_reg_2476;
wire  signed [31:0] sext_ln26_fu_882_p1;
wire   [31:0] bitcast_ln354_9_fu_898_p1;
wire   [0:0] or_ln15_fu_929_p2;
reg   [0:0] or_ln15_reg_2491;
wire  signed [31:0] sext_ln16_fu_967_p1;
reg   [0:0] tmp_12_reg_2501;
wire    ap_CS_fsm_state52;
reg   [0:0] tmp_17_reg_2506;
wire   [31:0] Iq_fu_976_p3;
reg   [31:0] Iq_reg_2511;
wire    ap_CS_fsm_state54;
wire   [31:0] ref_torque_fu_988_p3;
reg   [31:0] ref_torque_reg_2516;
wire   [31:0] xor_ln11_1_fu_999_p2;
reg   [31:0] xor_ln11_1_reg_2521;
wire    ap_CS_fsm_state59;
wire   [31:0] bitcast_ln11_3_fu_1005_p1;
wire    ap_CS_fsm_state60;
reg   [0:0] tmp_6_reg_2531;
reg   [0:0] tmp_9_reg_2536;
wire   [31:0] bitcast_ln354_2_fu_1021_p1;
wire    ap_CS_fsm_state63;
wire   [0:0] or_ln21_fu_1052_p2;
reg   [0:0] or_ln21_reg_2546;
wire  signed [31:0] sext_ln22_fu_1090_p1;
reg   [0:0] tmp_3_reg_2556;
wire    ap_CS_fsm_state64;
wire   [31:0] Id_fu_1099_p3;
reg   [31:0] Id_reg_2561;
wire   [31:0] err_2_fu_1116_p1;
reg   [31:0] err_2_reg_2567;
wire    ap_CS_fsm_state67;
reg   [0:0] tmp_23_reg_2573;
wire    ap_CS_fsm_state83;
reg   [0:0] tmp_24_reg_2578;
reg   [0:0] tmp_28_reg_2583;
reg   [0:0] tmp_29_reg_2588;
wire   [31:0] bitcast_ln354_10_fu_1139_p1;
wire    ap_CS_fsm_state84;
wire   [0:0] or_ln15_1_fu_1170_p2;
reg   [0:0] or_ln15_1_reg_2598;
wire  signed [31:0] sext_ln16_1_fu_1208_p1;
wire   [31:0] bitcast_ln354_11_fu_1225_p1;
wire   [0:0] or_ln15_2_fu_1256_p2;
reg   [0:0] or_ln15_2_reg_2613;
wire  signed [31:0] sext_ln16_2_fu_1294_p1;
reg   [0:0] tmp_22_reg_2623;
wire    ap_CS_fsm_state85;
reg   [0:0] tmp_27_reg_2628;
wire   [31:0] Vq_fu_1303_p3;
reg   [31:0] Vq_reg_2633;
wire    ap_CS_fsm_state87;
wire   [31:0] Vd_fu_1315_p3;
reg   [31:0] Vd_reg_2639;
reg   [0:0] tmp_38_reg_2645;
wire    ap_CS_fsm_state96;
reg   [0:0] tmp_39_reg_2650;
reg   [0:0] tmp_33_reg_2655;
wire    ap_CS_fsm_state97;
reg   [0:0] tmp_34_reg_2660;
wire   [31:0] bitcast_ln354_5_fu_1335_p1;
wire   [0:0] or_ln25_1_fu_1366_p2;
reg   [0:0] or_ln25_1_reg_2670;
wire  signed [31:0] sext_ln26_1_fu_1404_p1;
wire   [31:0] bitcast_ln354_4_fu_1421_p1;
wire    ap_CS_fsm_state98;
wire   [0:0] or_ln21_1_fu_1452_p2;
reg   [0:0] or_ln21_1_reg_2685;
wire  signed [31:0] sext_ln22_1_fu_1490_p1;
reg   [0:0] tmp_37_reg_2695;
reg   [0:0] tmp_32_reg_2700;
wire    ap_CS_fsm_state99;
wire   [31:0] Vbeta_fu_1499_p3;
reg   [31:0] Vbeta_reg_2705;
wire    ap_CS_fsm_state100;
wire   [31:0] dc_9_fu_1511_p3;
reg   [31:0] dc_9_reg_2710;
wire    ap_CS_fsm_state101;
reg   [0:0] tmp_43_reg_2719;
reg   [0:0] tmp_44_reg_2724;
wire   [31:0] bitcast_ln354_6_fu_1530_p1;
wire    ap_CS_fsm_state104;
wire   [0:0] or_ln9_fu_1561_p2;
reg   [0:0] or_ln9_reg_2734;
wire  signed [31:0] sext_ln12_fu_1599_p1;
wire   [31:0] bitcast_ln17_fu_1610_p1;
reg   [0:0] tmp_42_reg_2749;
wire    ap_CS_fsm_state105;
wire   [31:0] Va_2_fu_1619_p3;
reg   [31:0] Va_2_reg_2754;
wire   [15:0] result_V_fu_1757_p3;
reg   [15:0] result_V_reg_2759;
wire    ap_CS_fsm_state108;
reg   [0:0] tmp_48_reg_2764;
wire    ap_CS_fsm_state112;
reg   [0:0] tmp_49_reg_2769;
reg   [0:0] tmp_53_reg_2774;
reg   [0:0] tmp_54_reg_2779;
wire   [31:0] bitcast_ln354_7_fu_1777_p1;
wire    ap_CS_fsm_state113;
wire   [0:0] or_ln19_fu_1808_p2;
reg   [0:0] or_ln19_reg_2789;
wire  signed [31:0] sext_ln20_fu_1846_p1;
wire   [31:0] bitcast_ln354_8_fu_1863_p1;
wire   [0:0] or_ln23_fu_1894_p2;
reg   [0:0] or_ln23_reg_2804;
wire  signed [31:0] sext_ln24_fu_1932_p1;
reg   [0:0] tmp_47_reg_2814;
wire    ap_CS_fsm_state114;
reg   [0:0] tmp_52_reg_2819;
wire   [31:0] Vb_4_fu_1941_p3;
reg   [31:0] Vb_4_reg_2824;
wire    ap_CS_fsm_state116;
wire   [31:0] Vc_4_fu_1953_p3;
reg   [31:0] Vc_4_reg_2829;
wire   [63:0] zext_ln78_fu_2248_p1;
wire    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start;
wire    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done;
wire    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_idle;
wire    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_ready;
wire   [4:0] grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address0;
wire    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce0;
wire    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_we0;
wire   [31:0] grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_d0;
wire   [4:0] grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address1;
wire    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce1;
wire    grp_sin_or_cos_float_s_fu_264_ap_start;
wire    grp_sin_or_cos_float_s_fu_264_ap_idle;
wire    grp_sin_or_cos_float_s_fu_279_ap_start;
wire    grp_sin_or_cos_float_s_fu_279_ap_idle;
reg   [31:0] storemerge_reg_247;
wire    ap_CS_fsm_state26;
reg    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg;
reg    grp_sin_or_cos_float_s_fu_264_ap_start_reg;
reg    grp_sin_or_cos_float_s_fu_279_ap_start_reg;
wire    ap_CS_fsm_state27;
reg    ap_block_state117;
reg    ap_block_state117_io;
wire    ap_CS_fsm_state9;
reg   [31:0] grp_fu_294_p0;
reg   [31:0] grp_fu_294_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state91;
reg   [31:0] grp_fu_301_p0;
reg   [31:0] grp_fu_301_p1;
reg   [31:0] grp_fu_311_p0;
reg   [31:0] grp_fu_311_p1;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state88;
reg   [31:0] grp_fu_316_p0;
reg   [31:0] grp_fu_316_p1;
reg   [31:0] grp_fu_324_p1;
reg   [31:0] grp_fu_328_p1;
wire    ap_CS_fsm_state13;
reg  signed [63:0] grp_fu_352_p0;
reg  signed [31:0] grp_fu_356_p0;
reg   [31:0] grp_fu_367_p0;
reg   [31:0] grp_fu_367_p1;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state111;
reg   [31:0] grp_fu_373_p0;
reg   [31:0] grp_fu_373_p1;
reg   [31:0] grp_fu_380_p0;
reg   [31:0] grp_fu_385_p0;
wire   [15:0] trunc_ln1691_1_fu_481_p4;
wire   [31:0] bitcast_ln30_fu_520_p1;
wire   [7:0] tmp_s_fu_523_p4;
wire   [22:0] trunc_ln30_fu_533_p1;
wire   [0:0] icmp_ln30_1_fu_543_p2;
wire   [0:0] icmp_ln30_fu_537_p2;
wire   [0:0] or_ln30_fu_549_p2;
wire   [0:0] and_ln30_fu_555_p2;
wire   [31:0] bitcast_ln70_fu_641_p1;
wire   [31:0] xor_ln70_fu_645_p2;
wire   [31:0] bitcast_ln11_fu_665_p1;
wire   [31:0] data_V_fu_679_p1;
wire   [30:0] p_Result_s_fu_683_p1;
wire   [31:0] zext_ln368_fu_687_p1;
wire   [7:0] tmp_2_fu_696_p4;
wire   [22:0] trunc_ln11_fu_706_p1;
wire   [31:0] data_V_1_fu_722_p1;
wire   [30:0] p_Result_24_fu_726_p1;
wire   [31:0] zext_ln368_1_fu_730_p1;
wire   [7:0] tmp_5_fu_739_p4;
wire   [22:0] trunc_ln20_fu_749_p1;
wire   [0:0] or_ln11_fu_765_p2;
wire   [0:0] and_ln11_fu_769_p2;
wire   [0:0] or_ln20_fu_783_p2;
wire   [0:0] and_ln20_fu_787_p2;
wire   [31:0] data_V_3_fu_801_p1;
wire   [30:0] p_Result_26_fu_805_p1;
wire   [31:0] zext_ln368_3_fu_809_p1;
wire   [7:0] tmp_11_fu_818_p4;
wire   [22:0] trunc_ln25_fu_828_p1;
wire   [0:0] icmp_ln25_1_fu_838_p2;
wire   [0:0] icmp_ln25_fu_832_p2;
wire   [0:0] and_ln10_2_fu_850_p2;
wire   [0:0] and_ln10_3_fu_859_p2;
wire   [1:0] zext_ln10_1_fu_855_p1;
wire   [1:0] zext_ln26_1_fu_864_p1;
wire   [1:0] sub_ln26_fu_868_p2;
wire   [16:0] tmp_15_fu_874_p3;
wire   [31:0] data_V_4_fu_887_p1;
wire   [30:0] p_Result_27_fu_890_p1;
wire   [31:0] zext_ln368_4_fu_894_p1;
wire   [7:0] tmp_16_fu_903_p4;
wire   [22:0] trunc_ln15_fu_913_p1;
wire   [0:0] icmp_ln15_1_fu_923_p2;
wire   [0:0] icmp_ln15_fu_917_p2;
wire   [0:0] and_ln10_4_fu_935_p2;
wire   [0:0] and_ln10_5_fu_944_p2;
wire   [1:0] zext_ln10_2_fu_940_p1;
wire   [1:0] zext_ln16_fu_949_p1;
wire   [1:0] sub_ln16_fu_953_p2;
wire   [16:0] tmp_20_fu_959_p3;
wire   [0:0] and_ln25_fu_972_p2;
wire   [0:0] and_ln15_fu_984_p2;
wire   [31:0] grp_fu_356_p1;
wire   [31:0] bitcast_ln11_2_fu_995_p1;
wire   [31:0] data_V_2_fu_1009_p1;
wire   [30:0] p_Result_25_fu_1013_p1;
wire   [31:0] zext_ln368_2_fu_1017_p1;
wire   [7:0] tmp_8_fu_1026_p4;
wire   [22:0] trunc_ln21_fu_1036_p1;
wire   [0:0] icmp_ln21_1_fu_1046_p2;
wire   [0:0] icmp_ln21_fu_1040_p2;
wire   [0:0] and_ln10_fu_1058_p2;
wire   [0:0] and_ln10_1_fu_1067_p2;
wire   [1:0] zext_ln10_fu_1063_p1;
wire   [1:0] zext_ln22_fu_1072_p1;
wire   [1:0] sub_ln22_fu_1076_p2;
wire   [16:0] tmp_10_fu_1082_p3;
wire   [0:0] and_ln21_fu_1095_p2;
wire   [31:0] bitcast_ln10_fu_1107_p1;
wire   [31:0] xor_ln10_fu_1110_p2;
wire   [31:0] data_V_5_fu_1127_p1;
wire   [30:0] p_Result_28_fu_1131_p1;
wire   [31:0] zext_ln368_5_fu_1135_p1;
wire   [7:0] tmp_21_fu_1144_p4;
wire   [22:0] trunc_ln15_1_fu_1154_p1;
wire   [0:0] icmp_ln15_3_fu_1164_p2;
wire   [0:0] icmp_ln15_2_fu_1158_p2;
wire   [0:0] and_ln10_6_fu_1176_p2;
wire   [0:0] and_ln10_7_fu_1185_p2;
wire   [1:0] zext_ln10_3_fu_1181_p1;
wire   [1:0] zext_ln16_1_fu_1190_p1;
wire   [1:0] sub_ln16_1_fu_1194_p2;
wire   [16:0] tmp_25_fu_1200_p3;
wire   [31:0] data_V_6_fu_1213_p1;
wire   [30:0] p_Result_29_fu_1217_p1;
wire   [31:0] zext_ln368_6_fu_1221_p1;
wire   [7:0] tmp_26_fu_1230_p4;
wire   [22:0] trunc_ln15_2_fu_1240_p1;
wire   [0:0] icmp_ln15_5_fu_1250_p2;
wire   [0:0] icmp_ln15_4_fu_1244_p2;
wire   [0:0] and_ln10_8_fu_1262_p2;
wire   [0:0] and_ln10_9_fu_1271_p2;
wire   [1:0] zext_ln10_4_fu_1267_p1;
wire   [1:0] zext_ln16_2_fu_1276_p1;
wire   [1:0] sub_ln16_2_fu_1280_p2;
wire   [16:0] tmp_30_fu_1286_p3;
wire   [0:0] and_ln15_1_fu_1299_p2;
wire   [0:0] and_ln15_2_fu_1311_p2;
wire   [31:0] data_V_8_fu_1323_p1;
wire   [30:0] p_Result_31_fu_1327_p1;
wire   [31:0] zext_ln368_8_fu_1331_p1;
wire   [7:0] tmp_36_fu_1340_p4;
wire   [22:0] trunc_ln25_1_fu_1350_p1;
wire   [0:0] icmp_ln25_3_fu_1360_p2;
wire   [0:0] icmp_ln25_2_fu_1354_p2;
wire   [0:0] and_ln10_12_fu_1372_p2;
wire   [0:0] and_ln10_13_fu_1381_p2;
wire   [1:0] zext_ln10_6_fu_1377_p1;
wire   [1:0] zext_ln26_2_fu_1386_p1;
wire   [1:0] sub_ln26_1_fu_1390_p2;
wire   [16:0] tmp_40_fu_1396_p3;
wire   [31:0] data_V_7_fu_1409_p1;
wire   [30:0] p_Result_30_fu_1413_p1;
wire   [31:0] zext_ln368_7_fu_1417_p1;
wire   [7:0] tmp_31_fu_1426_p4;
wire   [22:0] trunc_ln21_1_fu_1436_p1;
wire   [0:0] icmp_ln21_3_fu_1446_p2;
wire   [0:0] icmp_ln21_2_fu_1440_p2;
wire   [0:0] and_ln10_10_fu_1458_p2;
wire   [0:0] and_ln10_11_fu_1467_p2;
wire   [1:0] zext_ln10_5_fu_1463_p1;
wire   [1:0] zext_ln22_1_fu_1472_p1;
wire   [1:0] sub_ln22_1_fu_1476_p2;
wire   [16:0] tmp_35_fu_1482_p3;
wire   [0:0] and_ln25_1_fu_1495_p2;
wire   [0:0] and_ln21_1_fu_1507_p2;
wire   [31:0] data_V_9_fu_1519_p1;
wire   [30:0] p_Result_32_fu_1522_p1;
wire   [31:0] zext_ln368_9_fu_1526_p1;
wire   [7:0] tmp_41_fu_1535_p4;
wire   [22:0] trunc_ln9_fu_1545_p1;
wire   [0:0] icmp_ln9_1_fu_1555_p2;
wire   [0:0] icmp_ln9_fu_1549_p2;
wire   [0:0] and_ln10_14_fu_1567_p2;
wire   [0:0] and_ln10_15_fu_1576_p2;
wire   [1:0] zext_ln10_7_fu_1572_p1;
wire   [1:0] zext_ln12_fu_1581_p1;
wire   [1:0] sub_ln12_fu_1585_p2;
wire   [16:0] tmp_45_fu_1591_p3;
wire   [31:0] xor_ln17_fu_1604_p2;
wire   [0:0] and_ln9_fu_1615_p2;
wire   [31:0] data_V_12_fu_1626_p1;
wire   [22:0] tmp_72_fu_1647_p1;
wire   [24:0] mantissa_fu_1651_p4;
wire   [7:0] tmp_71_fu_1637_p4;
wire   [8:0] zext_ln344_fu_1665_p1;
wire   [8:0] add_ln344_fu_1669_p2;
wire   [7:0] sub_ln1364_fu_1683_p2;
wire   [0:0] isNeg_fu_1675_p3;
wire  signed [8:0] sext_ln1364_fu_1689_p1;
wire   [8:0] ush_fu_1693_p3;
wire  signed [31:0] sext_ln1340_fu_1701_p1;
wire   [62:0] zext_ln15_fu_1661_p1;
wire   [62:0] zext_ln1340_fu_1705_p1;
wire   [62:0] r_V_fu_1709_p2;
wire   [0:0] tmp_60_fu_1721_p3;
wire   [62:0] r_V_7_fu_1715_p2;
wire   [15:0] zext_ln671_fu_1729_p1;
wire   [15:0] tmp_57_fu_1733_p4;
wire   [15:0] val_fu_1743_p3;
wire   [0:0] p_Result_35_fu_1629_p3;
wire   [15:0] result_V_2_fu_1751_p2;
wire   [31:0] data_V_10_fu_1765_p1;
wire   [30:0] p_Result_33_fu_1769_p1;
wire   [31:0] zext_ln368_10_fu_1773_p1;
wire   [7:0] tmp_46_fu_1782_p4;
wire   [22:0] trunc_ln19_fu_1792_p1;
wire   [0:0] icmp_ln19_1_fu_1802_p2;
wire   [0:0] icmp_ln19_fu_1796_p2;
wire   [0:0] and_ln10_16_fu_1814_p2;
wire   [0:0] and_ln10_17_fu_1823_p2;
wire   [1:0] zext_ln10_8_fu_1819_p1;
wire   [1:0] zext_ln20_fu_1828_p1;
wire   [1:0] sub_ln20_fu_1832_p2;
wire   [16:0] tmp_50_fu_1838_p3;
wire   [31:0] data_V_11_fu_1851_p1;
wire   [30:0] p_Result_34_fu_1855_p1;
wire   [31:0] zext_ln368_11_fu_1859_p1;
wire   [7:0] tmp_51_fu_1868_p4;
wire   [22:0] trunc_ln23_fu_1878_p1;
wire   [0:0] icmp_ln23_1_fu_1888_p2;
wire   [0:0] icmp_ln23_fu_1882_p2;
wire   [0:0] and_ln10_18_fu_1900_p2;
wire   [0:0] and_ln10_19_fu_1909_p2;
wire   [1:0] zext_ln10_9_fu_1905_p1;
wire   [1:0] zext_ln24_fu_1914_p1;
wire   [1:0] sub_ln24_fu_1918_p2;
wire   [16:0] tmp_55_fu_1924_p3;
wire   [0:0] and_ln19_fu_1937_p2;
wire   [0:0] and_ln23_fu_1949_p2;
wire   [31:0] data_V_13_fu_1961_p1;
wire   [22:0] tmp_74_fu_1982_p1;
wire   [24:0] mantissa_1_fu_1986_p4;
wire   [7:0] tmp_73_fu_1972_p4;
wire   [8:0] zext_ln344_1_fu_2000_p1;
wire   [8:0] add_ln344_1_fu_2004_p2;
wire   [7:0] sub_ln1364_1_fu_2018_p2;
wire   [0:0] isNeg_1_fu_2010_p3;
wire  signed [8:0] sext_ln1364_1_fu_2024_p1;
wire   [8:0] ush_1_fu_2028_p3;
wire  signed [31:0] sext_ln1340_1_fu_2036_p1;
wire   [62:0] zext_ln15_1_fu_1996_p1;
wire   [62:0] zext_ln1340_1_fu_2040_p1;
wire   [62:0] r_V_8_fu_2044_p2;
wire   [0:0] tmp_65_fu_2056_p3;
wire   [62:0] r_V_9_fu_2050_p2;
wire   [15:0] zext_ln671_1_fu_2064_p1;
wire   [15:0] tmp_59_fu_2068_p4;
wire   [15:0] val_1_fu_2078_p3;
wire   [0:0] p_Result_36_fu_1964_p3;
wire   [15:0] result_V_5_fu_2086_p2;
wire   [31:0] data_V_14_fu_2100_p1;
wire   [22:0] tmp_76_fu_2121_p1;
wire   [24:0] mantissa_2_fu_2125_p4;
wire   [7:0] tmp_75_fu_2111_p4;
wire   [8:0] zext_ln344_2_fu_2139_p1;
wire   [8:0] add_ln344_2_fu_2143_p2;
wire   [7:0] sub_ln1364_2_fu_2157_p2;
wire   [0:0] isNeg_2_fu_2149_p3;
wire  signed [8:0] sext_ln1364_2_fu_2163_p1;
wire   [8:0] ush_2_fu_2167_p3;
wire  signed [31:0] sext_ln1340_2_fu_2175_p1;
wire   [62:0] zext_ln15_2_fu_2135_p1;
wire   [62:0] zext_ln1340_2_fu_2179_p1;
wire   [62:0] r_V_10_fu_2183_p2;
wire   [0:0] tmp_70_fu_2195_p3;
wire   [62:0] r_V_11_fu_2189_p2;
wire   [15:0] zext_ln671_2_fu_2203_p1;
wire   [15:0] tmp_62_fu_2207_p4;
wire   [15:0] val_2_fu_2217_p3;
wire   [0:0] p_Result_37_fu_2103_p3;
wire   [15:0] result_V_9_fu_2225_p2;
wire   [15:0] result_V_11_fu_2231_p3;
wire   [15:0] result_V_10_fu_2092_p3;
wire   [47:0] pwmStreamObj_data_V_fu_2239_p4;
reg   [1:0] grp_fu_294_opcode;
reg    grp_fu_294_ce;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state115;
reg   [1:0] grp_fu_301_opcode;
reg    grp_fu_352_ce;
reg    grp_fu_367_ce;
reg   [4:0] grp_fu_367_opcode;
reg    grp_fu_373_ce;
reg   [4:0] grp_fu_373_opcode;
reg   [117:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
reg    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
wire    ap_ST_fsm_state113_blk;
wire    ap_ST_fsm_state114_blk;
wire    ap_ST_fsm_state115_blk;
wire    ap_ST_fsm_state116_blk;
reg    ap_ST_fsm_state117_blk;
reg    ap_ST_fsm_state118_blk;
wire    regslice_both_B_V_data_V_U_apdone_blk;
wire    regslice_both_C_V_data_V_U_apdone_blk;
reg    ap_block_state118;
reg    ap_block_state118_io;
wire    regslice_both_A_V_data_V_U_apdone_blk;
wire   [79:0] A_TDATA_int_regslice;
wire    A_TVALID_int_regslice;
reg    A_TREADY_int_regslice;
wire    regslice_both_A_V_data_V_U_ack_in;
wire    regslice_both_A_V_keep_V_U_apdone_blk;
wire   [9:0] A_TKEEP_int_regslice;
wire    regslice_both_A_V_keep_V_U_vld_out;
wire    regslice_both_A_V_keep_V_U_ack_in;
wire    regslice_both_A_V_strb_V_U_apdone_blk;
wire   [9:0] A_TSTRB_int_regslice;
wire    regslice_both_A_V_strb_V_U_vld_out;
wire    regslice_both_A_V_strb_V_U_ack_in;
wire    regslice_both_A_V_last_V_U_apdone_blk;
wire   [0:0] A_TLAST_int_regslice;
wire    regslice_both_A_V_last_V_U_vld_out;
wire    regslice_both_A_V_last_V_U_ack_in;
reg    B_TVALID_int_regslice;
wire    B_TREADY_int_regslice;
wire    regslice_both_B_V_data_V_U_vld_out;
wire    regslice_both_B_V_keep_V_U_apdone_blk;
wire    regslice_both_B_V_keep_V_U_ack_in_dummy;
wire    regslice_both_B_V_keep_V_U_vld_out;
wire    regslice_both_B_V_strb_V_U_apdone_blk;
wire    regslice_both_B_V_strb_V_U_ack_in_dummy;
wire    regslice_both_B_V_strb_V_U_vld_out;
wire    regslice_both_B_V_last_V_U_apdone_blk;
wire    regslice_both_B_V_last_V_U_ack_in_dummy;
wire    regslice_both_B_V_last_V_U_vld_out;
reg    C_TVALID_int_regslice;
wire    C_TREADY_int_regslice;
wire    regslice_both_C_V_data_V_U_vld_out;
wire    regslice_both_C_V_keep_V_U_apdone_blk;
wire    regslice_both_C_V_keep_V_U_ack_in_dummy;
wire    regslice_both_C_V_keep_V_U_vld_out;
wire    regslice_both_C_V_strb_V_U_apdone_blk;
wire    regslice_both_C_V_strb_V_U_ack_in_dummy;
wire    regslice_both_C_V_strb_V_U_vld_out;
wire    regslice_both_C_V_last_V_U_apdone_blk;
wire    regslice_both_C_V_last_V_U_ack_in_dummy;
wire    regslice_both_C_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 velocity_accum = 32'd0;
#0 dc_cnt = 32'd0;
#0 Ia_DC_acc = 32'd0;
#0 Ib_DC_acc = 32'd0;
#0 Ia_corr = 32'd0;
#0 Ib_corr = 32'd0;
#0 ierr = 32'd0;
#0 ap_CS_fsm = 118'd1;
#0 grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_264_ap_start_reg = 1'b0;
#0 grp_sin_or_cos_float_s_fu_279_ap_start_reg = 1'b0;
end

foc_buffer_velocity_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
buffer_velocity_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_velocity_address0),
    .ce0(buffer_velocity_ce0),
    .we0(buffer_velocity_we0),
    .d0(buffer_velocity_d0),
    .q0(buffer_velocity_q0),
    .address1(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address1),
    .ce1(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce1),
    .q1(buffer_velocity_q1)
);

foc_foc_Pipeline_VITIS_LOOP_13_1 grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start),
    .ap_done(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done),
    .ap_idle(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_idle),
    .ap_ready(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_ready),
    .buffer_velocity_address0(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address0),
    .buffer_velocity_ce0(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce0),
    .buffer_velocity_we0(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_we0),
    .buffer_velocity_d0(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_d0),
    .buffer_velocity_address1(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address1),
    .buffer_velocity_ce1(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce1),
    .buffer_velocity_q1(buffer_velocity_q1)
);

foc_sin_or_cos_float_s grp_sin_or_cos_float_s_fu_264(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sin_or_cos_float_s_fu_264_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_264_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_264_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_264_ap_ready),
    .t_in(p_angle_reg_2403),
    .do_cos(1'd0),
    .ap_return(grp_sin_or_cos_float_s_fu_264_ap_return)
);

foc_sin_or_cos_float_s grp_sin_or_cos_float_s_fu_279(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sin_or_cos_float_s_fu_279_ap_start),
    .ap_done(grp_sin_or_cos_float_s_fu_279_ap_done),
    .ap_idle(grp_sin_or_cos_float_s_fu_279_ap_idle),
    .ap_ready(grp_sin_or_cos_float_s_fu_279_ap_ready),
    .t_in(p_angle_reg_2403),
    .do_cos(1'd1),
    .ap_return(grp_sin_or_cos_float_s_fu_279_ap_return)
);

foc_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .control(control),
    .ap_local_deadlock(ap_local_deadlock)
);

foc_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_4_full_dsp_1_U35(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_294_p0),
    .din1(grp_fu_294_p1),
    .opcode(grp_fu_294_opcode),
    .ce(grp_fu_294_ce),
    .dout(grp_fu_294_p2)
);

foc_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_4_full_dsp_1_U36(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_301_p0),
    .din1(grp_fu_301_p1),
    .opcode(grp_fu_301_opcode),
    .ce(1'b1),
    .dout(grp_fu_301_p2)
);

foc_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_i3_reg_2433),
    .din1(mul3_i_reg_2438),
    .ce(1'b1),
    .dout(grp_fu_307_p2)
);

foc_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U38(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_311_p0),
    .din1(grp_fu_311_p1),
    .ce(1'b1),
    .dout(grp_fu_311_p2)
);

foc_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U39(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_316_p0),
    .din1(grp_fu_316_p1),
    .ce(1'b1),
    .dout(grp_fu_316_p2)
);

foc_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U40(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_i_34_reg_2427),
    .din1(grp_fu_324_p1),
    .ce(1'b1),
    .dout(grp_fu_324_p2)
);

foc_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_i_reg_2421),
    .din1(grp_fu_328_p1),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

foc_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_428),
    .din1(32'd1084227584),
    .ce(1'b1),
    .dout(grp_fu_332_p2)
);

foc_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_401),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

foc_fdiv_32ns_32ns_32_9_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_9_no_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(Theta_3_reg_2290),
    .din1(32'd1148846080),
    .ce(1'b1),
    .dout(grp_fu_347_p2)
);

foc_sitofp_64s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
sitofp_64s_32_4_no_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_352_p0),
    .ce(grp_fu_352_ce),
    .dout(grp_fu_352_p1)
);

foc_sitofp_32s_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_4_no_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_356_p0),
    .ce(1'b1),
    .dout(grp_fu_356_p1)
);

foc_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul1_i_reg_2368),
    .ce(1'b1),
    .dout(grp_fu_359_p1)
);

foc_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_413),
    .ce(1'b1),
    .dout(grp_fu_364_p1)
);

foc_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U49(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_367_p0),
    .din1(grp_fu_367_p1),
    .ce(grp_fu_367_ce),
    .opcode(grp_fu_367_opcode),
    .dout(grp_fu_367_p2)
);

foc_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_373_p0),
    .din1(grp_fu_373_p1),
    .ce(grp_fu_373_ce),
    .opcode(grp_fu_373_opcode),
    .dout(grp_fu_373_p2)
);

foc_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U51(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_380_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_380_p2)
);

foc_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U52(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_385_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_385_p2)
);

foc_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U53(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv_i_reg_2345),
    .din1(64'd4614256656656552343),
    .ce(1'b1),
    .dout(grp_fu_390_p2)
);

foc_regslice_both #(
    .DataWidth( 80 ))
regslice_both_A_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TDATA),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_data_V_U_ack_in),
    .data_out(A_TDATA_int_regslice),
    .vld_out(A_TVALID_int_regslice),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_data_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 10 ))
regslice_both_A_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TKEEP),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_keep_V_U_ack_in),
    .data_out(A_TKEEP_int_regslice),
    .vld_out(regslice_both_A_V_keep_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_keep_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 10 ))
regslice_both_A_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TSTRB),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_strb_V_U_ack_in),
    .data_out(A_TSTRB_int_regslice),
    .vld_out(regslice_both_A_V_strb_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_strb_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 1 ))
regslice_both_A_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_TLAST),
    .vld_in(A_TVALID),
    .ack_in(regslice_both_A_V_last_V_U_ack_in),
    .data_out(A_TLAST_int_regslice),
    .vld_out(regslice_both_A_V_last_V_U_vld_out),
    .ack_out(A_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_V_last_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 64 ))
regslice_both_B_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(zext_ln78_fu_2248_p1),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(B_TREADY_int_regslice),
    .data_out(B_TDATA),
    .vld_out(regslice_both_B_V_data_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_data_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 8 ))
regslice_both_B_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd0),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(regslice_both_B_V_keep_V_U_ack_in_dummy),
    .data_out(B_TKEEP),
    .vld_out(regslice_both_B_V_keep_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_keep_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 8 ))
regslice_both_B_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd0),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(regslice_both_B_V_strb_V_U_ack_in_dummy),
    .data_out(B_TSTRB),
    .vld_out(regslice_both_B_V_strb_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_strb_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 1 ))
regslice_both_B_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(B_TVALID_int_regslice),
    .ack_in(regslice_both_B_V_last_V_U_ack_in_dummy),
    .data_out(B_TLAST),
    .vld_out(regslice_both_B_V_last_V_U_vld_out),
    .ack_out(B_TREADY),
    .apdone_blk(regslice_both_B_V_last_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 64 ))
regslice_both_C_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(zext_ln78_fu_2248_p1),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(C_TREADY_int_regslice),
    .data_out(C_TDATA),
    .vld_out(regslice_both_C_V_data_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_data_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 8 ))
regslice_both_C_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd0),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(regslice_both_C_V_keep_V_U_ack_in_dummy),
    .data_out(C_TKEEP),
    .vld_out(regslice_both_C_V_keep_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_keep_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 8 ))
regslice_both_C_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd0),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(regslice_both_C_V_strb_V_U_ack_in_dummy),
    .data_out(C_TSTRB),
    .vld_out(regslice_both_C_V_strb_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_strb_V_U_apdone_blk)
);

foc_regslice_both #(
    .DataWidth( 1 ))
regslice_both_C_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(C_TVALID_int_regslice),
    .ack_in(regslice_both_C_V_last_V_U_ack_in_dummy),
    .data_out(C_TLAST),
    .vld_out(regslice_both_C_V_last_V_U_vld_out),
    .ack_out(C_TREADY),
    .apdone_blk(regslice_both_C_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg <= 1'b1;
        end else if ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_ready == 1'b1)) begin
            grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sin_or_cos_float_s_fu_264_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_sin_or_cos_float_s_fu_264_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_264_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_264_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sin_or_cos_float_s_fu_279_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_sin_or_cos_float_s_fu_279_ap_start_reg <= 1'b1;
        end else if ((grp_sin_or_cos_float_s_fu_279_ap_ready == 1'b1)) begin
            grp_sin_or_cos_float_s_fu_279_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        storemerge_reg_247 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln47_reg_2303 == 1'd0))) begin
        storemerge_reg_247 <= add_ln59_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        Angle_reg_2295 <= grp_fu_347_p2;
        icmp_ln47_reg_2303 <= icmp_ln47_fu_578_p2;
        velocity_accum <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln47_reg_2303 == 1'd0))) begin
        Ia_DC_acc <= grp_fu_294_p2;
        Ib_DC_acc <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        Ia_corr <= grp_fu_311_p2;
        Ib_corr <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        Ialpha_reg_2409 <= Ialpha_fu_775_p3;
        Ibeta_reg_2415 <= Ibeta_fu_793_p3;
        tmp_i_34_reg_2427 <= grp_sin_or_cos_float_s_fu_279_ap_return;
        tmp_i_reg_2421 <= grp_sin_or_cos_float_s_fu_264_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        Id_reg_2561 <= Id_fu_1099_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        Iq_reg_2511 <= Iq_fu_976_p3;
        ref_torque_reg_2516 <= ref_torque_fu_988_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Theta_3_reg_2290 <= Theta_3_fu_561_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Theta_reg_2269 <= Theta_fu_504_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        Va_2_reg_2754 <= Va_2_fu_1619_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        Vb_4_reg_2824 <= Vb_4_fu_1941_p3;
        Vc_4_reg_2829 <= Vc_4_fu_1953_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        Vbeta_reg_2705 <= Vbeta_fu_1499_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        Vd_reg_2639 <= Vd_fu_1315_p3;
        Vq_reg_2633 <= Vq_fu_1303_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_i1_reg_2363 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buffer_velocity_load_reg_2277 <= buffer_velocity_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        control_law_reg_2443 <= grp_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        control_read_reg_2330 <= control;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        conv_i_reg_2345 <= grp_fu_364_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        dc_9_reg_2710 <= dc_9_fu_1511_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        dc_cnt <= storemerge_reg_247;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        err_2_reg_2567 <= err_2_fu_1116_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        icmp_ln11_1_reg_2383 <= icmp_ln11_1_fu_716_p2;
        icmp_ln11_reg_2378 <= icmp_ln11_fu_710_p2;
        icmp_ln20_1_reg_2398 <= icmp_ln20_1_fu_759_p2;
        icmp_ln20_reg_2393 <= icmp_ln20_fu_753_p2;
        p_angle_reg_2403 <= grp_fu_359_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        ierr <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        mul1_i_reg_2368 <= grp_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        mul3_i_reg_2438 <= grp_fu_337_p2;
        mul_i3_reg_2433 <= grp_fu_332_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        or_ln15_1_reg_2598 <= or_ln15_1_fu_1170_p2;
        or_ln15_2_reg_2613 <= or_ln15_2_fu_1256_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        or_ln15_reg_2491 <= or_ln15_fu_929_p2;
        or_ln25_reg_2476 <= or_ln25_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        or_ln19_reg_2789 <= or_ln19_fu_1808_p2;
        or_ln23_reg_2804 <= or_ln23_fu_1894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        or_ln21_1_reg_2685 <= or_ln21_1_fu_1452_p2;
        tmp_37_reg_2695 <= grp_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        or_ln21_reg_2546 <= or_ln21_fu_1052_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        or_ln25_1_reg_2670 <= or_ln25_1_fu_1366_p2;
        tmp_33_reg_2655 <= grp_fu_367_p2;
        tmp_34_reg_2660 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        or_ln9_reg_2734 <= or_ln9_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_395 <= grp_fu_352_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state41) & (1'b0 == ap_block_state41_on_subcall_done)))) begin
        reg_401 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state62))) begin
        reg_413 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_423 <= grp_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_428 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state36))) begin
        reg_436 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_442 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_450 <= grp_fu_324_p2;
        reg_455 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state94))) begin
        reg_460 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        result_V_reg_2759 <= result_V_fu_1757_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        tmp_12_reg_2501 <= grp_fu_367_p2;
        tmp_17_reg_2506 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        tmp_13_reg_2451 <= grp_fu_367_p2;
        tmp_14_reg_2456 <= grp_fu_373_p2;
        tmp_18_reg_2461 <= grp_fu_380_p2;
        tmp_19_reg_2466 <= grp_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        tmp_22_reg_2623 <= grp_fu_367_p2;
        tmp_27_reg_2628 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        tmp_23_reg_2573 <= grp_fu_367_p2;
        tmp_24_reg_2578 <= grp_fu_373_p2;
        tmp_28_reg_2583 <= grp_fu_380_p2;
        tmp_29_reg_2588 <= grp_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        tmp_32_reg_2700 <= grp_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        tmp_38_reg_2645 <= grp_fu_367_p2;
        tmp_39_reg_2650 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        tmp_3_reg_2556 <= grp_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        tmp_42_reg_2749 <= grp_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state103)) begin
        tmp_43_reg_2719 <= grp_fu_367_p2;
        tmp_44_reg_2724 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        tmp_47_reg_2814 <= grp_fu_367_p2;
        tmp_52_reg_2819 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        tmp_48_reg_2764 <= grp_fu_367_p2;
        tmp_49_reg_2769 <= grp_fu_373_p2;
        tmp_53_reg_2774 <= grp_fu_380_p2;
        tmp_54_reg_2779 <= grp_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        tmp_6_reg_2531 <= grp_fu_367_p2;
        tmp_9_reg_2536 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_reg_2264 <= A_TDATA_int_regslice[32'd79];
        trunc_ln_reg_2254 <= {{A_TDATA_int_regslice[63:48]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        xor_ln11_1_reg_2521 <= xor_ln11_1_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        xor_ln11_reg_2353 <= xor_ln11_fu_669_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        A_TDATA_blk_n = A_TVALID_int_regslice;
    end else begin
        A_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == A_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state1))) begin
        A_TREADY_int_regslice = 1'b1;
    end else begin
        A_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state117))) begin
        B_TDATA_blk_n = B_TREADY_int_regslice;
    end else begin
        B_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice) | (1'b1 == ap_block_state117_io)) & (1'b1 == ap_CS_fsm_state117))) begin
        B_TVALID_int_regslice = 1'b1;
    end else begin
        B_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state117))) begin
        C_TDATA_blk_n = C_TREADY_int_regslice;
    end else begin
        C_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice) | (1'b1 == ap_block_state117_io)) & (1'b1 == ap_CS_fsm_state117))) begin
        C_TVALID_int_regslice = 1'b1;
    end else begin
        C_TVALID_int_regslice = 1'b0;
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

assign ap_ST_fsm_state113_blk = 1'b0;

assign ap_ST_fsm_state114_blk = 1'b0;

assign ap_ST_fsm_state115_blk = 1'b0;

assign ap_ST_fsm_state116_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice) | (1'b1 == ap_block_state117_io))) begin
        ap_ST_fsm_state117_blk = 1'b1;
    end else begin
        ap_ST_fsm_state117_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_C_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_B_V_data_V_U_apdone_blk == 1'b1) | (1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice) | (1'b1 == ap_block_state118_io))) begin
        ap_ST_fsm_state118_blk = 1'b1;
    end else begin
        ap_ST_fsm_state118_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((1'b0 == A_TVALID_int_regslice)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state41_on_subcall_done)) begin
        ap_ST_fsm_state41_blk = 1'b1;
    end else begin
        ap_ST_fsm_state41_blk = 1'b0;
    end
end

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer_velocity_address0 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buffer_velocity_address0 = 5'd31;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer_velocity_address0 = grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address0;
    end else begin
        buffer_velocity_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state14))) begin
        buffer_velocity_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer_velocity_ce0 = grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce0;
    end else begin
        buffer_velocity_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer_velocity_d0 = grp_fu_352_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer_velocity_d0 = grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_d0;
    end else begin
        buffer_velocity_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buffer_velocity_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer_velocity_we0 = grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_we0;
    end else begin
        buffer_velocity_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_state41) & (1'b1 == ap_block_state41_on_subcall_done)) | ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done == 1'b0) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_fu_294_ce = 1'b0;
    end else begin
        grp_fu_294_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_294_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state70) | ((1'b1 == ap_CS_fsm_state5) & (tmp_reg_2264 == 1'd1)) | ((1'b1 == ap_CS_fsm_state21) & (icmp_ln47_fu_578_p2 == 1'd0)))) begin
        grp_fu_294_opcode = 2'd0;
    end else begin
        grp_fu_294_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_294_p0 = ref_torque_reg_2516;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state70))) begin
        grp_fu_294_p0 = reg_413;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_294_p0 = add_i1_reg_2363;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_294_p0 = ierr;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_294_p0 = bitcast_ln54_fu_656_p1;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_294_p0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_294_p0 = Ia_DC_acc;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_294_p0 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_294_p0 = velocity_accum;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_294_p0 = Theta_reg_2269;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_294_p0 = reg_395;
    end else begin
        grp_fu_294_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_294_p1 = dc_9_reg_2710;
    end else if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state70))) begin
        grp_fu_294_p1 = reg_442;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_294_p1 = err_2_fu_1116_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_294_p1 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_294_p1 = Iq_reg_2511;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_294_p1 = reg_455;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_294_p1 = reg_413;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_294_p1 = reg_428;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state33))) begin
        grp_fu_294_p1 = reg_423;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_294_p1 = vel_corr_fu_651_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_294_p1 = Ia_corr;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_294_p1 = Ib_corr;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_294_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_294_p1 = reg_395;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_294_p1 = buffer_velocity_load_reg_2277;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_294_p1 = 32'd3296329728;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_294_p1 = 32'd1148846080;
    end else begin
        grp_fu_294_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_301_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state91) | ((1'b1 == ap_CS_fsm_state21) & (icmp_ln47_fu_578_p2 == 1'd0)))) begin
        grp_fu_301_opcode = 2'd0;
    end else begin
        grp_fu_301_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_301_p0 = bitcast_ln17_fu_1610_p1;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_301_p0 = reg_450;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_301_p0 = Ib_DC_acc;
    end else begin
        grp_fu_301_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_301_p1 = reg_413;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_301_p1 = reg_442;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_301_p1 = 32'd0;
    end else begin
        grp_fu_301_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_311_p0 = Vbeta_reg_2705;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_311_p0 = err_2_reg_2567;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_311_p0 = Id_reg_2561;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_311_p0 = bitcast_ln11_3_fu_1005_p1;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_311_p0 = tmp_i_34_reg_2427;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_311_p0 = reg_436;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_311_p0 = bitcast_ln11_1_fu_675_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_311_p0 = Angle_reg_2295;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_311_p0 = Ia_DC_acc;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_311_p0 = reg_401;
    end else begin
        grp_fu_311_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_fu_311_p1 = 32'd1071493677;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_311_p1 = Vd_reg_2639;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_311_p1 = 32'd1084227584;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_311_p1 = 32'd1077936128;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_311_p1 = Ialpha_reg_2409;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_311_p1 = 32'd1058262326;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_311_p1 = 32'd1056964608;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29))) begin
        grp_fu_311_p1 = 32'd1073741824;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_311_p1 = 32'd1023410176;
    end else begin
        grp_fu_311_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_316_p0 = reg_460;
    end else if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state75))) begin
        grp_fu_316_p0 = reg_401;
    end else if (((1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_316_p0 = tmp_i_reg_2421;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_316_p0 = Ib_DC_acc;
    end else begin
        grp_fu_316_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_316_p1 = Vd_reg_2639;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_fu_316_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state67))) begin
        grp_fu_316_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_316_p1 = Ialpha_reg_2409;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_316_p1 = 32'd1023410176;
    end else begin
        grp_fu_316_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_324_p1 = Vq_reg_2633;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_324_p1 = Ibeta_reg_2415;
    end else begin
        grp_fu_324_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_328_p1 = Vq_reg_2633;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_328_p1 = Ibeta_reg_2415;
    end else begin
        grp_fu_328_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state13) | ((1'b1 == A_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state1)) | ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_fu_352_ce = 1'b1;
    end else begin
        grp_fu_352_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_352_p0 = sext_ln20_fu_1846_p1;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_352_p0 = sext_ln12_fu_1599_p1;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_352_p0 = sext_ln22_1_fu_1490_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        grp_fu_352_p0 = sext_ln26_1_fu_1404_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_352_p0 = sext_ln16_1_fu_1208_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_352_p0 = sext_ln22_fu_1090_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_352_p0 = sext_ln26_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_352_p0 = zext_ln26_fu_511_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_352_p0 = sext_ln27_fu_491_p1;
    end else begin
        grp_fu_352_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_356_p0 = sext_ln24_fu_1932_p1;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_356_p0 = sext_ln16_2_fu_1294_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_356_p0 = sext_ln16_fu_967_p1;
    end else begin
        grp_fu_356_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state41) & (1'b0 == ap_block_state41_on_subcall_done)) | ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_fu_367_ce = 1'b1;
    end else begin
        grp_fu_367_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_367_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_367_opcode = 5'd4;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_367_opcode = 5'd3;
    end else begin
        grp_fu_367_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_367_p0 = bitcast_ln354_7_fu_1777_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_367_p0 = reg_413;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_367_p0 = bitcast_ln354_6_fu_1530_p1;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_fu_367_p0 = dc_9_reg_2710;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_367_p0 = bitcast_ln354_4_fu_1421_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        grp_fu_367_p0 = bitcast_ln354_5_fu_1335_p1;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_367_p0 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_367_p0 = bitcast_ln354_10_fu_1139_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        grp_fu_367_p0 = bitcast_ln354_2_fu_1021_p1;
    end else if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_367_p0 = reg_428;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_367_p0 = bitcast_ln354_3_fu_813_p1;
    end else if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_367_p0 = reg_460;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_367_p0 = bitcast_ln354_fu_691_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_367_p0 = Theta_reg_2269;
    end else begin
        grp_fu_367_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_367_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_367_p1 = 32'd1191182336;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_367_p1 = 32'd1148846080;
    end else begin
        grp_fu_367_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state49) | ((1'b1 == ap_CS_fsm_state41) & (1'b0 == ap_block_state41_on_subcall_done)))) begin
        grp_fu_373_ce = 1'b1;
    end else begin
        grp_fu_373_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_373_opcode = 5'd4;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_373_opcode = 5'd2;
    end else begin
        grp_fu_373_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_373_p0 = bitcast_ln354_8_fu_1863_p1;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_373_p0 = reg_413;
    end else if ((1'b1 == ap_CS_fsm_state102)) begin
        grp_fu_373_p0 = dc_9_reg_2710;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_373_p0 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_fu_373_p0 = bitcast_ln354_11_fu_1225_p1;
    end else if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_fu_373_p0 = reg_428;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_373_p0 = bitcast_ln354_9_fu_898_p1;
    end else if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_373_p0 = reg_460;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        grp_fu_373_p0 = bitcast_ln354_1_fu_734_p1;
    end else begin
        grp_fu_373_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_373_p1 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_373_p1 = 32'd1191182336;
    end else begin
        grp_fu_373_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_380_p0 = reg_442;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_380_p0 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_380_p0 = control_law_reg_2443;
    end else begin
        grp_fu_380_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_385_p0 = reg_442;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_385_p0 = reg_401;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_385_p0 = control_law_reg_2443;
    end else begin
        grp_fu_385_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == A_TVALID_int_regslice) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln47_fu_578_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (1'b0 == ap_block_state41_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            if ((~((1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice) | (1'b1 == ap_block_state117_io)) & (1'b1 == ap_CS_fsm_state117))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end
        end
        ap_ST_fsm_state118 : begin
            if ((~((regslice_both_C_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_B_V_data_V_U_apdone_blk == 1'b1) | (1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice) | (1'b1 == ap_block_state118_io)) & (1'b1 == ap_CS_fsm_state118))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_TREADY = regslice_both_A_V_data_V_U_ack_in;

assign B_TVALID = regslice_both_B_V_data_V_U_vld_out;

assign C_TVALID = regslice_both_C_V_data_V_U_vld_out;

assign Ialpha_fu_775_p3 = ((and_ln11_fu_769_p2[0:0] == 1'b1) ? reg_401 : 32'd0);

assign Ibeta_fu_793_p3 = ((and_ln20_fu_787_p2[0:0] == 1'b1) ? 32'd0 : reg_423);

assign Id_fu_1099_p3 = ((and_ln21_fu_1095_p2[0:0] == 1'b1) ? grp_fu_352_p1 : reg_428);

assign Iq_fu_976_p3 = ((and_ln25_fu_972_p2[0:0] == 1'b1) ? grp_fu_352_p1 : reg_460);

assign Theta_3_fu_561_p3 = ((and_ln30_fu_555_p2[0:0] == 1'b1) ? grp_fu_294_p2 : Theta_reg_2269);

assign Theta_fu_504_p3 = ((tmp_reg_2264[0:0] == 1'b1) ? grp_fu_294_p2 : reg_395);

assign Va_2_fu_1619_p3 = ((and_ln9_fu_1615_p2[0:0] == 1'b1) ? dc_9_reg_2710 : grp_fu_352_p1);

assign Vb_4_fu_1941_p3 = ((and_ln19_fu_1937_p2[0:0] == 1'b1) ? grp_fu_352_p1 : reg_413);

assign Vbeta_fu_1499_p3 = ((and_ln25_1_fu_1495_p2[0:0] == 1'b1) ? grp_fu_352_p1 : reg_460);

assign Vc_4_fu_1953_p3 = ((and_ln23_fu_1949_p2[0:0] == 1'b1) ? grp_fu_356_p1 : reg_442);

assign Vd_fu_1315_p3 = ((and_ln15_2_fu_1311_p2[0:0] == 1'b1) ? grp_fu_356_p1 : reg_401);

assign Vq_fu_1303_p3 = ((and_ln15_1_fu_1299_p2[0:0] == 1'b1) ? grp_fu_352_p1 : reg_428);

assign add_ln344_1_fu_2004_p2 = ($signed(zext_ln344_1_fu_2000_p1) + $signed(9'd385));

assign add_ln344_2_fu_2143_p2 = ($signed(zext_ln344_2_fu_2139_p1) + $signed(9'd385));

assign add_ln344_fu_1669_p2 = ($signed(zext_ln344_fu_1665_p1) + $signed(9'd385));

assign add_ln59_fu_608_p2 = (dc_cnt + 32'd1);

assign and_ln10_10_fu_1458_p2 = (tmp_33_reg_2655 & or_ln21_1_fu_1452_p2);

assign and_ln10_11_fu_1467_p2 = (tmp_34_reg_2660 & or_ln21_1_fu_1452_p2);

assign and_ln10_12_fu_1372_p2 = (tmp_38_reg_2645 & or_ln25_1_fu_1366_p2);

assign and_ln10_13_fu_1381_p2 = (tmp_39_reg_2650 & or_ln25_1_fu_1366_p2);

assign and_ln10_14_fu_1567_p2 = (tmp_43_reg_2719 & or_ln9_fu_1561_p2);

assign and_ln10_15_fu_1576_p2 = (tmp_44_reg_2724 & or_ln9_fu_1561_p2);

assign and_ln10_16_fu_1814_p2 = (tmp_48_reg_2764 & or_ln19_fu_1808_p2);

assign and_ln10_17_fu_1823_p2 = (tmp_49_reg_2769 & or_ln19_fu_1808_p2);

assign and_ln10_18_fu_1900_p2 = (tmp_53_reg_2774 & or_ln23_fu_1894_p2);

assign and_ln10_19_fu_1909_p2 = (tmp_54_reg_2779 & or_ln23_fu_1894_p2);

assign and_ln10_1_fu_1067_p2 = (tmp_9_reg_2536 & or_ln21_fu_1052_p2);

assign and_ln10_2_fu_850_p2 = (tmp_13_reg_2451 & or_ln25_fu_844_p2);

assign and_ln10_3_fu_859_p2 = (tmp_14_reg_2456 & or_ln25_fu_844_p2);

assign and_ln10_4_fu_935_p2 = (tmp_18_reg_2461 & or_ln15_fu_929_p2);

assign and_ln10_5_fu_944_p2 = (tmp_19_reg_2466 & or_ln15_fu_929_p2);

assign and_ln10_6_fu_1176_p2 = (tmp_23_reg_2573 & or_ln15_1_fu_1170_p2);

assign and_ln10_7_fu_1185_p2 = (tmp_24_reg_2578 & or_ln15_1_fu_1170_p2);

assign and_ln10_8_fu_1262_p2 = (tmp_28_reg_2583 & or_ln15_2_fu_1256_p2);

assign and_ln10_9_fu_1271_p2 = (tmp_29_reg_2588 & or_ln15_2_fu_1256_p2);

assign and_ln10_fu_1058_p2 = (tmp_6_reg_2531 & or_ln21_fu_1052_p2);

assign and_ln11_fu_769_p2 = (or_ln11_fu_765_p2 & grp_fu_367_p2);

assign and_ln15_1_fu_1299_p2 = (tmp_22_reg_2623 & or_ln15_1_reg_2598);

assign and_ln15_2_fu_1311_p2 = (tmp_27_reg_2628 & or_ln15_2_reg_2613);

assign and_ln15_fu_984_p2 = (tmp_17_reg_2506 & or_ln15_reg_2491);

assign and_ln19_fu_1937_p2 = (tmp_47_reg_2814 & or_ln19_reg_2789);

assign and_ln20_fu_787_p2 = (or_ln20_fu_783_p2 & grp_fu_373_p2);

assign and_ln21_1_fu_1507_p2 = (tmp_32_reg_2700 & or_ln21_1_reg_2685);

assign and_ln21_fu_1095_p2 = (tmp_3_reg_2556 & or_ln21_reg_2546);

assign and_ln23_fu_1949_p2 = (tmp_52_reg_2819 & or_ln23_reg_2804);

assign and_ln25_1_fu_1495_p2 = (tmp_37_reg_2695 & or_ln25_1_reg_2670);

assign and_ln25_fu_972_p2 = (tmp_12_reg_2501 & or_ln25_reg_2476);

assign and_ln30_fu_555_p2 = (or_ln30_fu_549_p2 & grp_fu_367_p2);

assign and_ln9_fu_1615_p2 = (tmp_42_reg_2749 & or_ln9_reg_2734);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state117 = ((1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state117_io = ((1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state118 = ((regslice_both_C_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_B_V_data_V_U_apdone_blk == 1'b1) | (1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state118_io = ((1'b0 == C_TREADY_int_regslice) | (1'b0 == B_TREADY_int_regslice));
end

always @ (*) begin
    ap_block_state41_on_subcall_done = ((grp_sin_or_cos_float_s_fu_279_ap_done == 1'b0) | (grp_sin_or_cos_float_s_fu_264_ap_done == 1'b0));
end


assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln10_fu_1107_p1 = Id_reg_2561;

assign bitcast_ln11_1_fu_675_p1 = xor_ln11_reg_2353;

assign bitcast_ln11_2_fu_995_p1 = reg_436;

assign bitcast_ln11_3_fu_1005_p1 = xor_ln11_1_reg_2521;

assign bitcast_ln11_fu_665_p1 = reg_428;

assign bitcast_ln17_fu_1610_p1 = xor_ln17_fu_1604_p2;

assign bitcast_ln30_fu_520_p1 = Theta_reg_2269;

assign bitcast_ln354_10_fu_1139_p1 = zext_ln368_5_fu_1135_p1;

assign bitcast_ln354_11_fu_1225_p1 = zext_ln368_6_fu_1221_p1;

assign bitcast_ln354_1_fu_734_p1 = zext_ln368_1_fu_730_p1;

assign bitcast_ln354_2_fu_1021_p1 = zext_ln368_2_fu_1017_p1;

assign bitcast_ln354_3_fu_813_p1 = zext_ln368_3_fu_809_p1;

assign bitcast_ln354_4_fu_1421_p1 = zext_ln368_7_fu_1417_p1;

assign bitcast_ln354_5_fu_1335_p1 = zext_ln368_8_fu_1331_p1;

assign bitcast_ln354_6_fu_1530_p1 = zext_ln368_9_fu_1526_p1;

assign bitcast_ln354_7_fu_1777_p1 = zext_ln368_10_fu_1773_p1;

assign bitcast_ln354_8_fu_1863_p1 = zext_ln368_11_fu_1859_p1;

assign bitcast_ln354_9_fu_898_p1 = zext_ln368_4_fu_894_p1;

assign bitcast_ln354_fu_691_p1 = zext_ln368_fu_687_p1;

assign bitcast_ln54_fu_656_p1 = control_read_reg_2330;

assign bitcast_ln70_fu_641_p1 = reg_413;

assign data_V_10_fu_1765_p1 = reg_413;

assign data_V_11_fu_1851_p1 = reg_442;

assign data_V_12_fu_1626_p1 = Va_2_reg_2754;

assign data_V_13_fu_1961_p1 = Vb_4_reg_2824;

assign data_V_14_fu_2100_p1 = Vc_4_reg_2829;

assign data_V_1_fu_722_p1 = reg_423;

assign data_V_2_fu_1009_p1 = reg_428;

assign data_V_3_fu_801_p1 = reg_460;

assign data_V_4_fu_887_p1 = control_law_reg_2443;

assign data_V_5_fu_1127_p1 = reg_428;

assign data_V_6_fu_1213_p1 = reg_401;

assign data_V_7_fu_1409_p1 = reg_401;

assign data_V_8_fu_1323_p1 = reg_460;

assign data_V_9_fu_1519_p1 = dc_9_reg_2710;

assign data_V_fu_679_p1 = reg_401;

assign dc_9_fu_1511_p3 = ((and_ln21_1_fu_1507_p2[0:0] == 1'b1) ? grp_fu_352_p1 : reg_401);

assign err_2_fu_1116_p1 = xor_ln10_fu_1110_p2;

assign grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start = grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_264_ap_start = grp_sin_or_cos_float_s_fu_264_ap_start_reg;

assign grp_sin_or_cos_float_s_fu_279_ap_start = grp_sin_or_cos_float_s_fu_279_ap_start_reg;

assign icmp_ln11_1_fu_716_p2 = ((trunc_ln11_fu_706_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln11_fu_710_p2 = ((tmp_2_fu_696_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln15_1_fu_923_p2 = ((trunc_ln15_fu_913_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_2_fu_1158_p2 = ((tmp_21_fu_1144_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln15_3_fu_1164_p2 = ((trunc_ln15_1_fu_1154_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_4_fu_1244_p2 = ((tmp_26_fu_1230_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln15_5_fu_1250_p2 = ((trunc_ln15_2_fu_1240_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_917_p2 = ((tmp_16_fu_903_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_1802_p2 = ((trunc_ln19_fu_1792_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_1796_p2 = ((tmp_46_fu_1782_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_759_p2 = ((trunc_ln20_fu_749_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_753_p2 = ((tmp_5_fu_739_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln21_1_fu_1046_p2 = ((trunc_ln21_fu_1036_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_2_fu_1440_p2 = ((tmp_31_fu_1426_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln21_3_fu_1446_p2 = ((trunc_ln21_1_fu_1436_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_1040_p2 = ((tmp_8_fu_1026_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_1888_p2 = ((trunc_ln23_fu_1878_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_1882_p2 = ((tmp_51_fu_1868_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln25_1_fu_838_p2 = ((trunc_ln25_fu_828_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_2_fu_1354_p2 = ((tmp_36_fu_1340_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln25_3_fu_1360_p2 = ((trunc_ln25_1_fu_1350_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_832_p2 = ((tmp_11_fu_818_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln30_1_fu_543_p2 = ((trunc_ln30_fu_533_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_537_p2 = ((tmp_s_fu_523_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_578_p2 = (($signed(dc_cnt) > $signed(32'd14)) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_1555_p2 = ((trunc_ln9_fu_1545_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_1549_p2 = ((tmp_41_fu_1535_p4 != 8'd255) ? 1'b1 : 1'b0);

assign isNeg_1_fu_2010_p3 = add_ln344_1_fu_2004_p2[32'd8];

assign isNeg_2_fu_2149_p3 = add_ln344_2_fu_2143_p2[32'd8];

assign isNeg_fu_1675_p3 = add_ln344_fu_1669_p2[32'd8];

assign mantissa_1_fu_1986_p4 = {{{{1'd1}, {tmp_74_fu_1982_p1}}}, {1'd0}};

assign mantissa_2_fu_2125_p4 = {{{{1'd1}, {tmp_76_fu_2121_p1}}}, {1'd0}};

assign mantissa_fu_1651_p4 = {{{{1'd1}, {tmp_72_fu_1647_p1}}}, {1'd0}};

assign or_ln11_fu_765_p2 = (icmp_ln11_reg_2378 | icmp_ln11_1_reg_2383);

assign or_ln15_1_fu_1170_p2 = (icmp_ln15_3_fu_1164_p2 | icmp_ln15_2_fu_1158_p2);

assign or_ln15_2_fu_1256_p2 = (icmp_ln15_5_fu_1250_p2 | icmp_ln15_4_fu_1244_p2);

assign or_ln15_fu_929_p2 = (icmp_ln15_fu_917_p2 | icmp_ln15_1_fu_923_p2);

assign or_ln19_fu_1808_p2 = (icmp_ln19_fu_1796_p2 | icmp_ln19_1_fu_1802_p2);

assign or_ln20_fu_783_p2 = (icmp_ln20_reg_2393 | icmp_ln20_1_reg_2398);

assign or_ln21_1_fu_1452_p2 = (icmp_ln21_3_fu_1446_p2 | icmp_ln21_2_fu_1440_p2);

assign or_ln21_fu_1052_p2 = (icmp_ln21_fu_1040_p2 | icmp_ln21_1_fu_1046_p2);

assign or_ln23_fu_1894_p2 = (icmp_ln23_fu_1882_p2 | icmp_ln23_1_fu_1888_p2);

assign or_ln25_1_fu_1366_p2 = (icmp_ln25_3_fu_1360_p2 | icmp_ln25_2_fu_1354_p2);

assign or_ln25_fu_844_p2 = (icmp_ln25_fu_832_p2 | icmp_ln25_1_fu_838_p2);

assign or_ln30_fu_549_p2 = (icmp_ln30_fu_537_p2 | icmp_ln30_1_fu_543_p2);

assign or_ln9_fu_1561_p2 = (icmp_ln9_fu_1549_p2 | icmp_ln9_1_fu_1555_p2);

assign p_Result_24_fu_726_p1 = data_V_1_fu_722_p1[30:0];

assign p_Result_25_fu_1013_p1 = data_V_2_fu_1009_p1[30:0];

assign p_Result_26_fu_805_p1 = data_V_3_fu_801_p1[30:0];

assign p_Result_27_fu_890_p1 = data_V_4_fu_887_p1[30:0];

assign p_Result_28_fu_1131_p1 = data_V_5_fu_1127_p1[30:0];

assign p_Result_29_fu_1217_p1 = data_V_6_fu_1213_p1[30:0];

assign p_Result_30_fu_1413_p1 = data_V_7_fu_1409_p1[30:0];

assign p_Result_31_fu_1327_p1 = data_V_8_fu_1323_p1[30:0];

assign p_Result_32_fu_1522_p1 = data_V_9_fu_1519_p1[30:0];

assign p_Result_33_fu_1769_p1 = data_V_10_fu_1765_p1[30:0];

assign p_Result_34_fu_1855_p1 = data_V_11_fu_1851_p1[30:0];

assign p_Result_35_fu_1629_p3 = data_V_12_fu_1626_p1[32'd31];

assign p_Result_36_fu_1964_p3 = data_V_13_fu_1961_p1[32'd31];

assign p_Result_37_fu_2103_p3 = data_V_14_fu_2100_p1[32'd31];

assign p_Result_s_fu_683_p1 = data_V_fu_679_p1[30:0];

assign pwmStreamObj_data_V_fu_2239_p4 = {{{result_V_11_fu_2231_p3}, {result_V_10_fu_2092_p3}}, {result_V_reg_2759}};

assign r_V_10_fu_2183_p2 = zext_ln15_2_fu_2135_p1 >> zext_ln1340_2_fu_2179_p1;

assign r_V_11_fu_2189_p2 = zext_ln15_2_fu_2135_p1 << zext_ln1340_2_fu_2179_p1;

assign r_V_7_fu_1715_p2 = zext_ln15_fu_1661_p1 << zext_ln1340_fu_1705_p1;

assign r_V_8_fu_2044_p2 = zext_ln15_1_fu_1996_p1 >> zext_ln1340_1_fu_2040_p1;

assign r_V_9_fu_2050_p2 = zext_ln15_1_fu_1996_p1 << zext_ln1340_1_fu_2040_p1;

assign r_V_fu_1709_p2 = zext_ln15_fu_1661_p1 >> zext_ln1340_fu_1705_p1;

assign ref_torque_fu_988_p3 = ((and_ln15_fu_984_p2[0:0] == 1'b1) ? grp_fu_356_p1 : control_law_reg_2443);

assign result_V_10_fu_2092_p3 = ((p_Result_36_fu_1964_p3[0:0] == 1'b1) ? result_V_5_fu_2086_p2 : val_1_fu_2078_p3);

assign result_V_11_fu_2231_p3 = ((p_Result_37_fu_2103_p3[0:0] == 1'b1) ? result_V_9_fu_2225_p2 : val_2_fu_2217_p3);

assign result_V_2_fu_1751_p2 = (16'd0 - val_fu_1743_p3);

assign result_V_5_fu_2086_p2 = (16'd0 - val_1_fu_2078_p3);

assign result_V_9_fu_2225_p2 = (16'd0 - val_2_fu_2217_p3);

assign result_V_fu_1757_p3 = ((p_Result_35_fu_1629_p3[0:0] == 1'b1) ? result_V_2_fu_1751_p2 : val_fu_1743_p3);

assign sext_ln12_fu_1599_p1 = $signed(tmp_45_fu_1591_p3);

assign sext_ln1340_1_fu_2036_p1 = $signed(ush_1_fu_2028_p3);

assign sext_ln1340_2_fu_2175_p1 = $signed(ush_2_fu_2167_p3);

assign sext_ln1340_fu_1701_p1 = $signed(ush_fu_1693_p3);

assign sext_ln1364_1_fu_2024_p1 = $signed(sub_ln1364_1_fu_2018_p2);

assign sext_ln1364_2_fu_2163_p1 = $signed(sub_ln1364_2_fu_2157_p2);

assign sext_ln1364_fu_1689_p1 = $signed(sub_ln1364_fu_1683_p2);

assign sext_ln16_1_fu_1208_p1 = $signed(tmp_25_fu_1200_p3);

assign sext_ln16_2_fu_1294_p1 = $signed(tmp_30_fu_1286_p3);

assign sext_ln16_fu_967_p1 = $signed(tmp_20_fu_959_p3);

assign sext_ln20_fu_1846_p1 = $signed(tmp_50_fu_1838_p3);

assign sext_ln22_1_fu_1490_p1 = $signed(tmp_35_fu_1482_p3);

assign sext_ln22_fu_1090_p1 = $signed(tmp_10_fu_1082_p3);

assign sext_ln24_fu_1932_p1 = $signed(tmp_55_fu_1924_p3);

assign sext_ln26_1_fu_1404_p1 = $signed(tmp_40_fu_1396_p3);

assign sext_ln26_fu_882_p1 = $signed(tmp_15_fu_874_p3);

assign sext_ln27_fu_491_p1 = $signed(trunc_ln1691_1_fu_481_p4);

assign sub_ln12_fu_1585_p2 = (zext_ln10_7_fu_1572_p1 - zext_ln12_fu_1581_p1);

assign sub_ln1364_1_fu_2018_p2 = (8'd127 - tmp_73_fu_1972_p4);

assign sub_ln1364_2_fu_2157_p2 = (8'd127 - tmp_75_fu_2111_p4);

assign sub_ln1364_fu_1683_p2 = (8'd127 - tmp_71_fu_1637_p4);

assign sub_ln16_1_fu_1194_p2 = (zext_ln10_3_fu_1181_p1 - zext_ln16_1_fu_1190_p1);

assign sub_ln16_2_fu_1280_p2 = (zext_ln10_4_fu_1267_p1 - zext_ln16_2_fu_1276_p1);

assign sub_ln16_fu_953_p2 = (zext_ln10_2_fu_940_p1 - zext_ln16_fu_949_p1);

assign sub_ln20_fu_1832_p2 = (zext_ln10_8_fu_1819_p1 - zext_ln20_fu_1828_p1);

assign sub_ln22_1_fu_1476_p2 = (zext_ln10_5_fu_1463_p1 - zext_ln22_1_fu_1472_p1);

assign sub_ln22_fu_1076_p2 = (zext_ln10_fu_1063_p1 - zext_ln22_fu_1072_p1);

assign sub_ln24_fu_1918_p2 = (zext_ln10_9_fu_1905_p1 - zext_ln24_fu_1914_p1);

assign sub_ln26_1_fu_1390_p2 = (zext_ln10_6_fu_1377_p1 - zext_ln26_2_fu_1386_p1);

assign sub_ln26_fu_868_p2 = (zext_ln10_1_fu_855_p1 - zext_ln26_1_fu_864_p1);

assign tmp_10_fu_1082_p3 = {{sub_ln22_fu_1076_p2}, {15'd0}};

assign tmp_11_fu_818_p4 = {{data_V_3_fu_801_p1[30:23]}};

assign tmp_15_fu_874_p3 = {{sub_ln26_fu_868_p2}, {15'd0}};

assign tmp_16_fu_903_p4 = {{data_V_4_fu_887_p1[30:23]}};

assign tmp_20_fu_959_p3 = {{sub_ln16_fu_953_p2}, {15'd0}};

assign tmp_21_fu_1144_p4 = {{data_V_5_fu_1127_p1[30:23]}};

assign tmp_25_fu_1200_p3 = {{sub_ln16_1_fu_1194_p2}, {15'd0}};

assign tmp_26_fu_1230_p4 = {{data_V_6_fu_1213_p1[30:23]}};

assign tmp_2_fu_696_p4 = {{data_V_fu_679_p1[30:23]}};

assign tmp_30_fu_1286_p3 = {{sub_ln16_2_fu_1280_p2}, {15'd0}};

assign tmp_31_fu_1426_p4 = {{data_V_7_fu_1409_p1[30:23]}};

assign tmp_35_fu_1482_p3 = {{sub_ln22_1_fu_1476_p2}, {15'd0}};

assign tmp_36_fu_1340_p4 = {{data_V_8_fu_1323_p1[30:23]}};

assign tmp_40_fu_1396_p3 = {{sub_ln26_1_fu_1390_p2}, {15'd0}};

assign tmp_41_fu_1535_p4 = {{data_V_9_fu_1519_p1[30:23]}};

assign tmp_45_fu_1591_p3 = {{sub_ln12_fu_1585_p2}, {15'd0}};

assign tmp_46_fu_1782_p4 = {{data_V_10_fu_1765_p1[30:23]}};

assign tmp_50_fu_1838_p3 = {{sub_ln20_fu_1832_p2}, {15'd0}};

assign tmp_51_fu_1868_p4 = {{data_V_11_fu_1851_p1[30:23]}};

assign tmp_55_fu_1924_p3 = {{sub_ln24_fu_1918_p2}, {15'd0}};

assign tmp_57_fu_1733_p4 = {{r_V_7_fu_1715_p2[39:24]}};

assign tmp_59_fu_2068_p4 = {{r_V_9_fu_2050_p2[39:24]}};

assign tmp_5_fu_739_p4 = {{data_V_1_fu_722_p1[30:23]}};

assign tmp_60_fu_1721_p3 = r_V_fu_1709_p2[32'd24];

assign tmp_62_fu_2207_p4 = {{r_V_11_fu_2189_p2[39:24]}};

assign tmp_65_fu_2056_p3 = r_V_8_fu_2044_p2[32'd24];

assign tmp_70_fu_2195_p3 = r_V_10_fu_2183_p2[32'd24];

assign tmp_71_fu_1637_p4 = {{data_V_12_fu_1626_p1[30:23]}};

assign tmp_72_fu_1647_p1 = data_V_12_fu_1626_p1[22:0];

assign tmp_73_fu_1972_p4 = {{data_V_13_fu_1961_p1[30:23]}};

assign tmp_74_fu_1982_p1 = data_V_13_fu_1961_p1[22:0];

assign tmp_75_fu_2111_p4 = {{data_V_14_fu_2100_p1[30:23]}};

assign tmp_76_fu_2121_p1 = data_V_14_fu_2100_p1[22:0];

assign tmp_8_fu_1026_p4 = {{data_V_2_fu_1009_p1[30:23]}};

assign tmp_s_fu_523_p4 = {{bitcast_ln30_fu_520_p1[30:23]}};

assign trunc_ln11_fu_706_p1 = data_V_fu_679_p1[22:0];

assign trunc_ln15_1_fu_1154_p1 = data_V_5_fu_1127_p1[22:0];

assign trunc_ln15_2_fu_1240_p1 = data_V_6_fu_1213_p1[22:0];

assign trunc_ln15_fu_913_p1 = data_V_4_fu_887_p1[22:0];

assign trunc_ln1691_1_fu_481_p4 = {{A_TDATA_int_regslice[79:64]}};

assign trunc_ln19_fu_1792_p1 = data_V_10_fu_1765_p1[22:0];

assign trunc_ln20_fu_749_p1 = data_V_1_fu_722_p1[22:0];

assign trunc_ln21_1_fu_1436_p1 = data_V_7_fu_1409_p1[22:0];

assign trunc_ln21_fu_1036_p1 = data_V_2_fu_1009_p1[22:0];

assign trunc_ln23_fu_1878_p1 = data_V_11_fu_1851_p1[22:0];

assign trunc_ln25_1_fu_1350_p1 = data_V_8_fu_1323_p1[22:0];

assign trunc_ln25_fu_828_p1 = data_V_3_fu_801_p1[22:0];

assign trunc_ln30_fu_533_p1 = bitcast_ln30_fu_520_p1[22:0];

assign trunc_ln9_fu_1545_p1 = data_V_9_fu_1519_p1[22:0];

assign ush_1_fu_2028_p3 = ((isNeg_1_fu_2010_p3[0:0] == 1'b1) ? sext_ln1364_1_fu_2024_p1 : add_ln344_1_fu_2004_p2);

assign ush_2_fu_2167_p3 = ((isNeg_2_fu_2149_p3[0:0] == 1'b1) ? sext_ln1364_2_fu_2163_p1 : add_ln344_2_fu_2143_p2);

assign ush_fu_1693_p3 = ((isNeg_fu_1675_p3[0:0] == 1'b1) ? sext_ln1364_fu_1689_p1 : add_ln344_fu_1669_p2);

assign val_1_fu_2078_p3 = ((isNeg_1_fu_2010_p3[0:0] == 1'b1) ? zext_ln671_1_fu_2064_p1 : tmp_59_fu_2068_p4);

assign val_2_fu_2217_p3 = ((isNeg_2_fu_2149_p3[0:0] == 1'b1) ? zext_ln671_2_fu_2203_p1 : tmp_62_fu_2207_p4);

assign val_fu_1743_p3 = ((isNeg_fu_1675_p3[0:0] == 1'b1) ? zext_ln671_fu_1729_p1 : tmp_57_fu_1733_p4);

assign vel_corr_fu_651_p1 = xor_ln70_fu_645_p2;

assign xor_ln10_fu_1110_p2 = (bitcast_ln10_fu_1107_p1 ^ 32'd2147483648);

assign xor_ln11_1_fu_999_p2 = (bitcast_ln11_2_fu_995_p1 ^ 32'd2147483648);

assign xor_ln11_fu_669_p2 = (bitcast_ln11_fu_665_p1 ^ 32'd2147483648);

assign xor_ln17_fu_1604_p2 = (data_V_9_fu_1519_p1 ^ 32'd2147483648);

assign xor_ln70_fu_645_p2 = (bitcast_ln70_fu_641_p1 ^ 32'd2147483648);

assign zext_ln10_1_fu_855_p1 = and_ln10_2_fu_850_p2;

assign zext_ln10_2_fu_940_p1 = and_ln10_4_fu_935_p2;

assign zext_ln10_3_fu_1181_p1 = and_ln10_6_fu_1176_p2;

assign zext_ln10_4_fu_1267_p1 = and_ln10_8_fu_1262_p2;

assign zext_ln10_5_fu_1463_p1 = and_ln10_10_fu_1458_p2;

assign zext_ln10_6_fu_1377_p1 = and_ln10_12_fu_1372_p2;

assign zext_ln10_7_fu_1572_p1 = and_ln10_14_fu_1567_p2;

assign zext_ln10_8_fu_1819_p1 = and_ln10_16_fu_1814_p2;

assign zext_ln10_9_fu_1905_p1 = and_ln10_18_fu_1900_p2;

assign zext_ln10_fu_1063_p1 = and_ln10_fu_1058_p2;

assign zext_ln12_fu_1581_p1 = and_ln10_15_fu_1576_p2;

assign zext_ln1340_1_fu_2040_p1 = $unsigned(sext_ln1340_1_fu_2036_p1);

assign zext_ln1340_2_fu_2179_p1 = $unsigned(sext_ln1340_2_fu_2175_p1);

assign zext_ln1340_fu_1705_p1 = $unsigned(sext_ln1340_fu_1701_p1);

assign zext_ln15_1_fu_1996_p1 = mantissa_1_fu_1986_p4;

assign zext_ln15_2_fu_2135_p1 = mantissa_2_fu_2125_p4;

assign zext_ln15_fu_1661_p1 = mantissa_fu_1651_p4;

assign zext_ln16_1_fu_1190_p1 = and_ln10_7_fu_1185_p2;

assign zext_ln16_2_fu_1276_p1 = and_ln10_9_fu_1271_p2;

assign zext_ln16_fu_949_p1 = and_ln10_5_fu_944_p2;

assign zext_ln20_fu_1828_p1 = and_ln10_17_fu_1823_p2;

assign zext_ln22_1_fu_1472_p1 = and_ln10_11_fu_1467_p2;

assign zext_ln22_fu_1072_p1 = and_ln10_1_fu_1067_p2;

assign zext_ln24_fu_1914_p1 = and_ln10_19_fu_1909_p2;

assign zext_ln26_1_fu_864_p1 = and_ln10_3_fu_859_p2;

assign zext_ln26_2_fu_1386_p1 = and_ln10_13_fu_1381_p2;

assign zext_ln26_fu_511_p1 = trunc_ln_reg_2254;

assign zext_ln344_1_fu_2000_p1 = tmp_73_fu_1972_p4;

assign zext_ln344_2_fu_2139_p1 = tmp_75_fu_2111_p4;

assign zext_ln344_fu_1665_p1 = tmp_71_fu_1637_p4;

assign zext_ln368_10_fu_1773_p1 = p_Result_33_fu_1769_p1;

assign zext_ln368_11_fu_1859_p1 = p_Result_34_fu_1855_p1;

assign zext_ln368_1_fu_730_p1 = p_Result_24_fu_726_p1;

assign zext_ln368_2_fu_1017_p1 = p_Result_25_fu_1013_p1;

assign zext_ln368_3_fu_809_p1 = p_Result_26_fu_805_p1;

assign zext_ln368_4_fu_894_p1 = p_Result_27_fu_890_p1;

assign zext_ln368_5_fu_1135_p1 = p_Result_28_fu_1131_p1;

assign zext_ln368_6_fu_1221_p1 = p_Result_29_fu_1217_p1;

assign zext_ln368_7_fu_1417_p1 = p_Result_30_fu_1413_p1;

assign zext_ln368_8_fu_1331_p1 = p_Result_31_fu_1327_p1;

assign zext_ln368_9_fu_1526_p1 = p_Result_32_fu_1522_p1;

assign zext_ln368_fu_687_p1 = p_Result_s_fu_683_p1;

assign zext_ln671_1_fu_2064_p1 = tmp_65_fu_2056_p3;

assign zext_ln671_2_fu_2203_p1 = tmp_70_fu_2195_p3;

assign zext_ln671_fu_1729_p1 = tmp_60_fu_1721_p3;

assign zext_ln78_fu_2248_p1 = pwmStreamObj_data_V_fu_2239_p4;


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "foc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //foc






































































