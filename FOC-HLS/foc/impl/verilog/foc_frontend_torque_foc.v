// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module foc_frontend_torque_foc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        A_TDATA,
        A_TVALID,
        A_TREADY,
        A_TKEEP,
        A_TSTRB,
        A_TLAST,
        B_TDATA,
        B_TVALID,
        B_TREADY,
        B_TKEEP,
        B_TSTRB,
        B_TLAST,
        C_TDATA,
        C_TVALID,
        C_TREADY,
        C_TKEEP,
        C_TSTRB,
        C_TLAST,
        control_address0,
        control_ce0,
        control_q0,
        logger_address0,
        logger_ce0,
        logger_we0,
        logger_d0,
        velocity_accum_i,
        velocity_accum_o,
        velocity_accum_o_ap_vld,
        buffer_velocity_address0,
        buffer_velocity_ce0,
        buffer_velocity_we0,
        buffer_velocity_d0,
        buffer_velocity_q0,
        Y1a_prev_i,
        Y1a_prev_o,
        Y1a_prev_o_ap_vld,
        Y1b_prev_i,
        Y1b_prev_o,
        Y1b_prev_o_ap_vld,
        Y2a_prev_i,
        Y2a_prev_o,
        Y2a_prev_o_ap_vld,
        Y2b_prev_i,
        Y2b_prev_o,
        Y2b_prev_o_ap_vld,
        ierr_i,
        ierr_o,
        ierr_o_ap_vld,
        grp_PI_control_float_s_fu_498_p_din1,
        grp_PI_control_float_s_fu_498_p_din2,
        grp_PI_control_float_s_fu_498_p_din3,
        grp_PI_control_float_s_fu_498_p_din4,
        grp_PI_control_float_s_fu_498_p_din5,
        grp_PI_control_float_s_fu_498_p_din5_o,
        grp_PI_control_float_s_fu_498_p_din5_o_ap_vld,
        grp_PI_control_float_s_fu_498_p_dout0,
        grp_PI_control_float_s_fu_498_p_start,
        grp_PI_control_float_s_fu_498_p_ready,
        grp_PI_control_float_s_fu_498_p_done,
        grp_PI_control_float_s_fu_498_p_idle,
        grp_SVPWM_float_s_fu_506_p_din1,
        grp_SVPWM_float_s_fu_506_p_din2,
        grp_SVPWM_float_s_fu_506_p_din3,
        grp_SVPWM_float_s_fu_506_p_dout0_0,
        grp_SVPWM_float_s_fu_506_p_dout0_1,
        grp_SVPWM_float_s_fu_506_p_dout0_2,
        grp_SVPWM_float_s_fu_506_p_start,
        grp_SVPWM_float_s_fu_506_p_ready,
        grp_SVPWM_float_s_fu_506_p_done,
        grp_SVPWM_float_s_fu_506_p_idle,
        grp_clarke_direct_float_s_fu_512_p_din1,
        grp_clarke_direct_float_s_fu_512_p_din2,
        grp_clarke_direct_float_s_fu_512_p_dout0_0,
        grp_clarke_direct_float_s_fu_512_p_dout0_1,
        grp_clarke_direct_float_s_fu_512_p_start,
        grp_clarke_direct_float_s_fu_512_p_ready,
        grp_clarke_direct_float_s_fu_512_p_done,
        grp_clarke_direct_float_s_fu_512_p_idle,
        grp_clarke_inverse_float_s_fu_517_p_din1,
        grp_clarke_inverse_float_s_fu_517_p_din2,
        grp_clarke_inverse_float_s_fu_517_p_dout0_0,
        grp_clarke_inverse_float_s_fu_517_p_dout0_1,
        grp_clarke_inverse_float_s_fu_517_p_dout0_2,
        grp_clarke_inverse_float_s_fu_517_p_start,
        grp_clarke_inverse_float_s_fu_517_p_ready,
        grp_clarke_inverse_float_s_fu_517_p_done,
        grp_clarke_inverse_float_s_fu_517_p_idle,
        grp_fu_522_p_din0,
        grp_fu_522_p_din1,
        grp_fu_522_p_opcode,
        grp_fu_522_p_dout0,
        grp_fu_522_p_ce,
        grp_fu_526_p_din0,
        grp_fu_526_p_dout0,
        grp_fu_526_p_ce,
        grp_fu_529_p_din0,
        grp_fu_529_p_dout0,
        grp_fu_529_p_ce,
        grp_fu_532_p_din0,
        grp_fu_532_p_dout0,
        grp_fu_532_p_ce,
        grp_fu_535_p_din0,
        grp_fu_535_p_dout0,
        grp_fu_535_p_ce,
        grp_park_direct_float_s_fu_538_p_din1,
        grp_park_direct_float_s_fu_538_p_din2,
        grp_park_direct_float_s_fu_538_p_din3,
        grp_park_direct_float_s_fu_538_p_dout0_0,
        grp_park_direct_float_s_fu_538_p_dout0_1,
        grp_park_direct_float_s_fu_538_p_start,
        grp_park_direct_float_s_fu_538_p_ready,
        grp_park_direct_float_s_fu_538_p_done,
        grp_park_direct_float_s_fu_538_p_idle,
        grp_park_inverse_float_s_fu_546_p_din1,
        grp_park_inverse_float_s_fu_546_p_din2,
        grp_park_inverse_float_s_fu_546_p_din3,
        grp_park_inverse_float_s_fu_546_p_dout0_0,
        grp_park_inverse_float_s_fu_546_p_dout0_1,
        grp_park_inverse_float_s_fu_546_p_start,
        grp_park_inverse_float_s_fu_546_p_ready,
        grp_park_inverse_float_s_fu_546_p_done,
        grp_park_inverse_float_s_fu_546_p_idle
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [79:0] A_TDATA;
input   A_TVALID;
output   A_TREADY;
input  [9:0] A_TKEEP;
input  [9:0] A_TSTRB;
input  [0:0] A_TLAST;
output  [63:0] B_TDATA;
output   B_TVALID;
input   B_TREADY;
output  [7:0] B_TKEEP;
output  [7:0] B_TSTRB;
output  [0:0] B_TLAST;
output  [63:0] C_TDATA;
output   C_TVALID;
input   C_TREADY;
output  [7:0] C_TKEEP;
output  [7:0] C_TSTRB;
output  [0:0] C_TLAST;
output  [2:0] control_address0;
output   control_ce0;
input  [31:0] control_q0;
output  [3:0] logger_address0;
output   logger_ce0;
output   logger_we0;
output  [31:0] logger_d0;
input  [31:0] velocity_accum_i;
output  [31:0] velocity_accum_o;
output   velocity_accum_o_ap_vld;
output  [4:0] buffer_velocity_address0;
output   buffer_velocity_ce0;
output   buffer_velocity_we0;
output  [31:0] buffer_velocity_d0;
input  [31:0] buffer_velocity_q0;
input  [31:0] Y1a_prev_i;
output  [31:0] Y1a_prev_o;
output   Y1a_prev_o_ap_vld;
input  [31:0] Y1b_prev_i;
output  [31:0] Y1b_prev_o;
output   Y1b_prev_o_ap_vld;
input  [31:0] Y2a_prev_i;
output  [31:0] Y2a_prev_o;
output   Y2a_prev_o_ap_vld;
input  [31:0] Y2b_prev_i;
output  [31:0] Y2b_prev_o;
output   Y2b_prev_o_ap_vld;
input  [31:0] ierr_i;
output  [31:0] ierr_o;
output   ierr_o_ap_vld;
output  [31:0] grp_PI_control_float_s_fu_498_p_din1;
output  [31:0] grp_PI_control_float_s_fu_498_p_din2;
output  [31:0] grp_PI_control_float_s_fu_498_p_din3;
output  [31:0] grp_PI_control_float_s_fu_498_p_din4;
output  [31:0] grp_PI_control_float_s_fu_498_p_din5;
input  [31:0] grp_PI_control_float_s_fu_498_p_din5_o;
input   grp_PI_control_float_s_fu_498_p_din5_o_ap_vld;
input  [31:0] grp_PI_control_float_s_fu_498_p_dout0;
output   grp_PI_control_float_s_fu_498_p_start;
input   grp_PI_control_float_s_fu_498_p_ready;
input   grp_PI_control_float_s_fu_498_p_done;
input   grp_PI_control_float_s_fu_498_p_idle;
output  [31:0] grp_SVPWM_float_s_fu_506_p_din1;
output  [31:0] grp_SVPWM_float_s_fu_506_p_din2;
output  [31:0] grp_SVPWM_float_s_fu_506_p_din3;
input  [15:0] grp_SVPWM_float_s_fu_506_p_dout0_0;
input  [15:0] grp_SVPWM_float_s_fu_506_p_dout0_1;
input  [15:0] grp_SVPWM_float_s_fu_506_p_dout0_2;
output   grp_SVPWM_float_s_fu_506_p_start;
input   grp_SVPWM_float_s_fu_506_p_ready;
input   grp_SVPWM_float_s_fu_506_p_done;
input   grp_SVPWM_float_s_fu_506_p_idle;
output  [31:0] grp_clarke_direct_float_s_fu_512_p_din1;
output  [31:0] grp_clarke_direct_float_s_fu_512_p_din2;
input  [31:0] grp_clarke_direct_float_s_fu_512_p_dout0_0;
input  [31:0] grp_clarke_direct_float_s_fu_512_p_dout0_1;
output   grp_clarke_direct_float_s_fu_512_p_start;
input   grp_clarke_direct_float_s_fu_512_p_ready;
input   grp_clarke_direct_float_s_fu_512_p_done;
input   grp_clarke_direct_float_s_fu_512_p_idle;
output  [31:0] grp_clarke_inverse_float_s_fu_517_p_din1;
output  [31:0] grp_clarke_inverse_float_s_fu_517_p_din2;
input  [31:0] grp_clarke_inverse_float_s_fu_517_p_dout0_0;
input  [31:0] grp_clarke_inverse_float_s_fu_517_p_dout0_1;
input  [31:0] grp_clarke_inverse_float_s_fu_517_p_dout0_2;
output   grp_clarke_inverse_float_s_fu_517_p_start;
input   grp_clarke_inverse_float_s_fu_517_p_ready;
input   grp_clarke_inverse_float_s_fu_517_p_done;
input   grp_clarke_inverse_float_s_fu_517_p_idle;
output  [31:0] grp_fu_522_p_din0;
output  [31:0] grp_fu_522_p_din1;
output  [1:0] grp_fu_522_p_opcode;
input  [31:0] grp_fu_522_p_dout0;
output   grp_fu_522_p_ce;
output  [31:0] grp_fu_526_p_din0;
input  [31:0] grp_fu_526_p_dout0;
output   grp_fu_526_p_ce;
output  [31:0] grp_fu_529_p_din0;
input  [31:0] grp_fu_529_p_dout0;
output   grp_fu_529_p_ce;
output  [31:0] grp_fu_532_p_din0;
input  [31:0] grp_fu_532_p_dout0;
output   grp_fu_532_p_ce;
output  [31:0] grp_fu_535_p_din0;
input  [31:0] grp_fu_535_p_dout0;
output   grp_fu_535_p_ce;
output  [31:0] grp_park_direct_float_s_fu_538_p_din1;
output  [31:0] grp_park_direct_float_s_fu_538_p_din2;
output  [9:0] grp_park_direct_float_s_fu_538_p_din3;
input  [31:0] grp_park_direct_float_s_fu_538_p_dout0_0;
input  [31:0] grp_park_direct_float_s_fu_538_p_dout0_1;
output   grp_park_direct_float_s_fu_538_p_start;
input   grp_park_direct_float_s_fu_538_p_ready;
input   grp_park_direct_float_s_fu_538_p_done;
input   grp_park_direct_float_s_fu_538_p_idle;
output  [31:0] grp_park_inverse_float_s_fu_546_p_din1;
output  [31:0] grp_park_inverse_float_s_fu_546_p_din2;
output  [9:0] grp_park_inverse_float_s_fu_546_p_din3;
input  [31:0] grp_park_inverse_float_s_fu_546_p_dout0_0;
input  [31:0] grp_park_inverse_float_s_fu_546_p_dout0_1;
output   grp_park_inverse_float_s_fu_546_p_start;
input   grp_park_inverse_float_s_fu_546_p_ready;
input   grp_park_inverse_float_s_fu_546_p_done;
input   grp_park_inverse_float_s_fu_546_p_idle;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg A_TREADY;
reg B_TVALID;
reg C_TVALID;
reg[2:0] control_address0;
reg control_ce0;
reg[3:0] logger_address0;
reg logger_ce0;
reg logger_we0;
reg[31:0] logger_d0;
reg[31:0] velocity_accum_o;
reg[31:0] Y1a_prev_o;
reg[31:0] Y1b_prev_o;
reg[31:0] Y2a_prev_o;
reg[31:0] Y2b_prev_o;
reg[31:0] ierr_o;
reg ierr_o_ap_vld;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    A_TDATA_blk_n;
reg    B_TDATA_blk_n;
wire    ap_CS_fsm_state21;
reg    C_TDATA_blk_n;
wire  signed [31:0] sext_ln292_fu_542_p1;
wire  signed [31:0] sext_ln300_fu_547_p1;
wire  signed [31:0] sext_ln300_1_fu_552_p1;
wire  signed [31:0] sext_ln300_2_fu_557_p1;
wire   [31:0] trunc_ln372_fu_562_p1;
reg   [31:0] trunc_ln372_reg_1208;
reg   [31:0] conv_reg_1213;
wire    ap_CS_fsm_state4;
reg   [31:0] vel_corr_reg_1223;
reg   [31:0] Ia_corr_reg_1228;
reg   [31:0] Ib_corr_reg_1233;
wire   [31:0] bitcast_ln292_fu_566_p1;
wire    ap_CS_fsm_state5;
reg   [31:0] vel_corr_2_reg_1243;
wire    ap_CS_fsm_state6;
reg   [31:0] Ia_corr_1_reg_1248;
reg   [31:0] Ib_corr_1_reg_1254;
wire   [15:0] result_V_11_fu_715_p3;
reg   [15:0] result_V_11_reg_1260;
wire    ap_CS_fsm_state7;
reg   [31:0] dc_reg_1265;
wire    ap_CS_fsm_state8;
wire  signed [15:0] Theta_fu_900_p3;
reg  signed [15:0] Theta_reg_1270;
wire    ap_CS_fsm_state9;
wire   [9:0] trunc_ln271_fu_908_p1;
reg   [9:0] trunc_ln271_reg_1275;
reg   [31:0] Ialpha_reg_1281;
reg   [31:0] Ibeta_reg_1287;
wire    ap_CS_fsm_state10;
wire   [15:0] result_V_10_fu_1056_p3;
reg   [15:0] result_V_10_reg_1298;
reg   [31:0] Id_reg_1303;
wire    ap_CS_fsm_state11;
reg   [31:0] Iq_reg_1309;
wire   [31:0] xor_ln339_fu_1076_p2;
reg   [31:0] xor_ln339_reg_1315;
wire  signed [31:0] sext_ln297_fu_1082_p1;
wire    ap_CS_fsm_state12;
wire   [31:0] bitcast_ln339_fu_1090_p1;
reg   [31:0] bitcast_ln339_reg_1325;
reg   [31:0] Vq_reg_1330;
wire    ap_CS_fsm_state13;
reg   [31:0] Vd_reg_1336;
wire    ap_CS_fsm_state15;
reg   [31:0] Valpha_reg_1342;
wire    ap_CS_fsm_state17;
reg   [31:0] Vbeta_reg_1347;
reg   [31:0] Va_reg_1353;
wire    ap_CS_fsm_state19;
reg   [31:0] Vb_reg_1358;
reg   [31:0] Vc_reg_1364;
wire    grp_low_pass_filter_float_s_fu_409_ap_start;
wire    grp_low_pass_filter_float_s_fu_409_ap_done;
wire    grp_low_pass_filter_float_s_fu_409_ap_idle;
wire    grp_low_pass_filter_float_s_fu_409_ap_ready;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_velocity_accum_o;
wire    grp_low_pass_filter_float_s_fu_409_velocity_accum_o_ap_vld;
wire   [4:0] grp_low_pass_filter_float_s_fu_409_buffer_velocity_address0;
wire    grp_low_pass_filter_float_s_fu_409_buffer_velocity_ce0;
wire    grp_low_pass_filter_float_s_fu_409_buffer_velocity_we0;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_buffer_velocity_d0;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_Y1a_prev_o;
wire    grp_low_pass_filter_float_s_fu_409_Y1a_prev_o_ap_vld;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_Y1b_prev_o;
wire    grp_low_pass_filter_float_s_fu_409_Y1b_prev_o_ap_vld;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_Y2a_prev_o;
wire    grp_low_pass_filter_float_s_fu_409_Y2a_prev_o_ap_vld;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_Y2b_prev_o;
wire    grp_low_pass_filter_float_s_fu_409_Y2b_prev_o_ap_vld;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_ap_return_0;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_ap_return_1;
wire   [31:0] grp_low_pass_filter_float_s_fu_409_ap_return_2;
wire    grp_clarke_direct_float_s_fu_432_ap_done;
wire    grp_clarke_direct_float_s_fu_432_ap_ready;
wire    grp_park_direct_float_s_fu_438_ap_done;
wire    grp_park_direct_float_s_fu_438_ap_ready;
wire    grp_PI_control_float_s_fu_449_ap_done;
wire    grp_PI_control_float_s_fu_449_ap_ready;
reg   [31:0] grp_PI_control_float_s_fu_449_ref;
reg   [31:0] grp_PI_control_float_s_fu_449_val_r;
reg   [31:0] grp_PI_control_float_s_fu_449_KP;
reg   [31:0] grp_PI_control_float_s_fu_449_KI;
wire    grp_PI_control_float_s_fu_449_ierr_o_ap_vld;
wire    grp_park_inverse_float_s_fu_464_ap_done;
wire    grp_park_inverse_float_s_fu_464_ap_ready;
wire    grp_clarke_inverse_float_s_fu_475_ap_done;
wire    grp_clarke_inverse_float_s_fu_475_ap_ready;
wire    grp_SVPWM_float_s_fu_481_ap_done;
wire    grp_SVPWM_float_s_fu_481_ap_ready;
reg    grp_low_pass_filter_float_s_fu_409_ap_start_reg;
reg    grp_clarke_direct_float_s_fu_432_ap_start_reg;
reg    grp_park_direct_float_s_fu_438_ap_start_reg;
reg    grp_PI_control_float_s_fu_449_ap_start_reg;
wire    ap_CS_fsm_state14;
reg    grp_park_inverse_float_s_fu_464_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    grp_clarke_inverse_float_s_fu_475_ap_start_reg;
wire    ap_CS_fsm_state18;
reg    grp_SVPWM_float_s_fu_481_ap_start_reg;
wire    ap_CS_fsm_state20;
reg    ap_block_state1;
reg    ap_block_state21;
reg    ap_block_state21_io;
wire   [31:0] data_V_2_fu_583_p1;
wire   [31:0] bitcast_ln303_fu_723_p1;
wire   [31:0] bitcast_ln304_fu_912_p1;
wire   [31:0] data_V_1_fu_924_p1;
wire   [31:0] bitcast_ln311_fu_1064_p1;
wire   [31:0] bitcast_ln317_fu_1086_p1;
wire   [31:0] bitcast_ln318_fu_1094_p1;
wire   [31:0] bitcast_ln346_fu_1098_p1;
wire   [31:0] bitcast_ln297_fu_1102_p1;
wire   [31:0] bitcast_ln345_fu_1107_p1;
wire   [31:0] bitcast_ln352_fu_1119_p1;
wire   [31:0] bitcast_ln353_fu_1124_p1;
wire   [31:0] bitcast_ln359_fu_1140_p1;
wire   [31:0] bitcast_ln360_fu_1145_p1;
wire   [31:0] bitcast_ln361_fu_1149_p1;
reg  signed [31:0] grp_fu_492_p0;
wire   [15:0] Angle_fu_532_p4;
wire   [15:0] RPM_fu_522_p4;
wire   [15:0] Ia_fu_508_p1;
wire   [15:0] Ib_fu_512_p4;
wire   [22:0] tmp_23_fu_605_p1;
wire   [24:0] mantissa_2_fu_609_p4;
wire   [7:0] tmp_22_fu_595_p4;
wire   [8:0] zext_ln344_2_fu_623_p1;
wire   [8:0] add_ln344_2_fu_627_p2;
wire   [7:0] sub_ln1364_2_fu_641_p2;
wire   [0:0] isNeg_2_fu_633_p3;
wire  signed [8:0] sext_ln1364_2_fu_647_p1;
wire   [8:0] ush_2_fu_651_p3;
wire  signed [31:0] sext_ln1340_2_fu_659_p1;
wire   [62:0] zext_ln15_2_fu_619_p1;
wire   [62:0] zext_ln1340_2_fu_663_p1;
wire   [62:0] r_V_4_fu_667_p2;
wire   [0:0] tmp_17_fu_679_p3;
wire   [62:0] r_V_5_fu_673_p2;
wire   [15:0] zext_ln671_2_fu_687_p1;
wire   [15:0] tmp_s_fu_691_p4;
wire   [15:0] val_2_fu_701_p3;
wire   [0:0] p_Result_2_fu_587_p3;
wire   [15:0] result_V_9_fu_709_p2;
wire   [31:0] data_V_fu_727_p1;
wire   [22:0] tmp_19_fu_748_p1;
wire   [24:0] mantissa_fu_752_p4;
wire   [7:0] tmp_18_fu_738_p4;
wire   [8:0] zext_ln344_fu_766_p1;
wire   [8:0] add_ln344_fu_770_p2;
wire   [7:0] sub_ln1364_fu_784_p2;
wire   [0:0] isNeg_fu_776_p3;
wire  signed [8:0] sext_ln1364_fu_790_p1;
wire   [8:0] ush_fu_794_p3;
wire  signed [31:0] sext_ln1340_fu_802_p1;
wire   [62:0] zext_ln15_fu_762_p1;
wire   [62:0] zext_ln1340_fu_806_p1;
wire   [62:0] r_V_fu_810_p2;
wire   [0:0] tmp_fu_822_p3;
wire   [62:0] r_V_1_fu_816_p2;
wire   [15:0] zext_ln671_fu_830_p1;
wire   [15:0] tmp_2_fu_834_p4;
wire   [15:0] val_fu_844_p3;
wire   [0:0] p_Result_s_fu_730_p3;
wire   [15:0] result_V_2_fu_852_p2;
wire   [15:0] result_V_fu_858_p3;
wire   [0:0] tmp_3_fu_866_p3;
wire   [15:0] add_ln293_fu_874_p2;
wire   [15:0] Theta_2_fu_880_p3;
wire   [0:0] icmp_ln294_fu_888_p2;
wire   [15:0] add_ln294_fu_894_p2;
wire   [22:0] tmp_21_fu_946_p1;
wire   [24:0] mantissa_1_fu_950_p4;
wire   [7:0] tmp_20_fu_936_p4;
wire   [8:0] zext_ln344_1_fu_964_p1;
wire   [8:0] add_ln344_1_fu_968_p2;
wire   [7:0] sub_ln1364_1_fu_982_p2;
wire   [0:0] isNeg_1_fu_974_p3;
wire  signed [8:0] sext_ln1364_1_fu_988_p1;
wire   [8:0] ush_1_fu_992_p3;
wire  signed [31:0] sext_ln1340_1_fu_1000_p1;
wire   [62:0] zext_ln15_1_fu_960_p1;
wire   [62:0] zext_ln1340_1_fu_1004_p1;
wire   [62:0] r_V_2_fu_1008_p2;
wire   [0:0] tmp_10_fu_1020_p3;
wire   [62:0] r_V_3_fu_1014_p2;
wire   [15:0] zext_ln671_1_fu_1028_p1;
wire   [15:0] tmp_7_fu_1032_p4;
wire   [15:0] val_1_fu_1042_p3;
wire   [0:0] p_Result_1_fu_928_p3;
wire   [15:0] result_V_5_fu_1050_p2;
wire   [47:0] pwmStreamObj_data_V_fu_1165_p4;
reg    grp_fu_488_ce;
reg    grp_fu_492_ce;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_fu_495_ce;
reg    grp_fu_498_ce;
reg    grp_fu_501_ce;
wire    ap_CS_fsm_state22;
reg   [21:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 grp_low_pass_filter_float_s_fu_409_ap_start_reg = 1'b0;
#0 grp_clarke_direct_float_s_fu_432_ap_start_reg = 1'b0;
#0 grp_park_direct_float_s_fu_438_ap_start_reg = 1'b0;
#0 grp_PI_control_float_s_fu_449_ap_start_reg = 1'b0;
#0 grp_park_inverse_float_s_fu_464_ap_start_reg = 1'b0;
#0 grp_clarke_inverse_float_s_fu_475_ap_start_reg = 1'b0;
#0 grp_SVPWM_float_s_fu_481_ap_start_reg = 1'b0;
end

foc_frontend_low_pass_filter_float_s grp_low_pass_filter_float_s_fu_409(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_low_pass_filter_float_s_fu_409_ap_start),
    .ap_done(grp_low_pass_filter_float_s_fu_409_ap_done),
    .ap_idle(grp_low_pass_filter_float_s_fu_409_ap_idle),
    .ap_ready(grp_low_pass_filter_float_s_fu_409_ap_ready),
    .velocity(vel_corr_reg_1223),
    .Ia(Ia_corr_reg_1228),
    .Ib(Ib_corr_reg_1233),
    .filt_a(32'd1060320051),
    .filt_b(32'd1050253722),
    .velocity_accum_i(velocity_accum_i),
    .velocity_accum_o(grp_low_pass_filter_float_s_fu_409_velocity_accum_o),
    .velocity_accum_o_ap_vld(grp_low_pass_filter_float_s_fu_409_velocity_accum_o_ap_vld),
    .buffer_velocity_address0(grp_low_pass_filter_float_s_fu_409_buffer_velocity_address0),
    .buffer_velocity_ce0(grp_low_pass_filter_float_s_fu_409_buffer_velocity_ce0),
    .buffer_velocity_we0(grp_low_pass_filter_float_s_fu_409_buffer_velocity_we0),
    .buffer_velocity_d0(grp_low_pass_filter_float_s_fu_409_buffer_velocity_d0),
    .buffer_velocity_q0(buffer_velocity_q0),
    .Y1a_prev_i(Y1a_prev_i),
    .Y1a_prev_o(grp_low_pass_filter_float_s_fu_409_Y1a_prev_o),
    .Y1a_prev_o_ap_vld(grp_low_pass_filter_float_s_fu_409_Y1a_prev_o_ap_vld),
    .Y1b_prev_i(Y1b_prev_i),
    .Y1b_prev_o(grp_low_pass_filter_float_s_fu_409_Y1b_prev_o),
    .Y1b_prev_o_ap_vld(grp_low_pass_filter_float_s_fu_409_Y1b_prev_o_ap_vld),
    .Y2a_prev_i(Y2a_prev_i),
    .Y2a_prev_o(grp_low_pass_filter_float_s_fu_409_Y2a_prev_o),
    .Y2a_prev_o_ap_vld(grp_low_pass_filter_float_s_fu_409_Y2a_prev_o_ap_vld),
    .Y2b_prev_i(Y2b_prev_i),
    .Y2b_prev_o(grp_low_pass_filter_float_s_fu_409_Y2b_prev_o),
    .Y2b_prev_o_ap_vld(grp_low_pass_filter_float_s_fu_409_Y2b_prev_o_ap_vld),
    .ap_return_0(grp_low_pass_filter_float_s_fu_409_ap_return_0),
    .ap_return_1(grp_low_pass_filter_float_s_fu_409_ap_return_1),
    .ap_return_2(grp_low_pass_filter_float_s_fu_409_ap_return_2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_PI_control_float_s_fu_449_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
            grp_PI_control_float_s_fu_449_ap_start_reg <= 1'b1;
        end else if ((grp_PI_control_float_s_fu_449_ap_ready == 1'b1)) begin
            grp_PI_control_float_s_fu_449_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SVPWM_float_s_fu_481_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_SVPWM_float_s_fu_481_ap_start_reg <= 1'b1;
        end else if ((grp_SVPWM_float_s_fu_481_ap_ready == 1'b1)) begin
            grp_SVPWM_float_s_fu_481_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_clarke_direct_float_s_fu_432_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_clarke_direct_float_s_fu_432_ap_start_reg <= 1'b1;
        end else if ((grp_clarke_direct_float_s_fu_432_ap_ready == 1'b1)) begin
            grp_clarke_direct_float_s_fu_432_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_clarke_inverse_float_s_fu_475_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_clarke_inverse_float_s_fu_475_ap_start_reg <= 1'b1;
        end else if ((grp_clarke_inverse_float_s_fu_475_ap_ready == 1'b1)) begin
            grp_clarke_inverse_float_s_fu_475_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_low_pass_filter_float_s_fu_409_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_low_pass_filter_float_s_fu_409_ap_start_reg <= 1'b1;
        end else if ((grp_low_pass_filter_float_s_fu_409_ap_ready == 1'b1)) begin
            grp_low_pass_filter_float_s_fu_409_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_park_direct_float_s_fu_438_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_park_direct_float_s_fu_438_ap_start_reg <= 1'b1;
        end else if ((grp_park_direct_float_s_fu_438_ap_ready == 1'b1)) begin
            grp_park_direct_float_s_fu_438_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_park_inverse_float_s_fu_464_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_park_inverse_float_s_fu_464_ap_start_reg <= 1'b1;
        end else if ((grp_park_inverse_float_s_fu_464_ap_ready == 1'b1)) begin
            grp_park_inverse_float_s_fu_464_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Ia_corr_1_reg_1248 <= grp_low_pass_filter_float_s_fu_409_ap_return_1;
        Ib_corr_1_reg_1254 <= grp_low_pass_filter_float_s_fu_409_ap_return_2;
        vel_corr_2_reg_1243 <= grp_low_pass_filter_float_s_fu_409_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Ia_corr_reg_1228 <= grp_fu_532_p_dout0;
        Ib_corr_reg_1233 <= grp_fu_535_p_dout0;
        conv_reg_1213 <= grp_fu_526_p_dout0;
        vel_corr_reg_1223 <= grp_fu_529_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Ialpha_reg_1281 <= grp_clarke_direct_float_s_fu_512_p_dout0_0;
        Ibeta_reg_1287 <= grp_clarke_direct_float_s_fu_512_p_dout0_1;
        Theta_reg_1270 <= Theta_fu_900_p3;
        trunc_ln271_reg_1275 <= trunc_ln271_fu_908_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Id_reg_1303 <= grp_park_direct_float_s_fu_538_p_dout0_0;
        Iq_reg_1309 <= grp_park_direct_float_s_fu_538_p_dout0_1;
        xor_ln339_reg_1315 <= xor_ln339_fu_1076_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        Va_reg_1353 <= grp_clarke_inverse_float_s_fu_517_p_dout0_0;
        Vb_reg_1358 <= grp_clarke_inverse_float_s_fu_517_p_dout0_1;
        Vc_reg_1364 <= grp_clarke_inverse_float_s_fu_517_p_dout0_2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        Valpha_reg_1342 <= grp_park_inverse_float_s_fu_546_p_dout0_0;
        Vbeta_reg_1347 <= grp_park_inverse_float_s_fu_546_p_dout0_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        Vd_reg_1336 <= grp_PI_control_float_s_fu_498_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Vq_reg_1330 <= grp_PI_control_float_s_fu_498_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bitcast_ln339_reg_1325 <= bitcast_ln339_fu_1090_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dc_reg_1265 <= grp_fu_522_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        result_V_10_reg_1298 <= result_V_10_fu_1056_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        result_V_11_reg_1260 <= result_V_11_fu_715_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln372_reg_1208 <= trunc_ln372_fu_562_p1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        A_TDATA_blk_n = A_TVALID;
    end else begin
        A_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == A_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_TREADY = 1'b1;
    end else begin
        A_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        B_TDATA_blk_n = B_TREADY;
    end else begin
        B_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_SVPWM_float_s_fu_481_ap_done == 1'b0) | (1'b1 == ap_block_state21_io) | (1'b0 == C_TREADY) | (1'b0 == B_TREADY)) & (1'b1 == ap_CS_fsm_state21))) begin
        B_TVALID = 1'b1;
    end else begin
        B_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        C_TDATA_blk_n = C_TREADY;
    end else begin
        C_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_SVPWM_float_s_fu_481_ap_done == 1'b0) | (1'b1 == ap_block_state21_io) | (1'b0 == C_TREADY) | (1'b0 == B_TREADY)) & (1'b1 == ap_CS_fsm_state21))) begin
        C_TVALID = 1'b1;
    end else begin
        C_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((grp_low_pass_filter_float_s_fu_409_Y1a_prev_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        Y1a_prev_o = grp_low_pass_filter_float_s_fu_409_Y1a_prev_o;
    end else begin
        Y1a_prev_o = Y1a_prev_i;
    end
end

always @ (*) begin
    if (((grp_low_pass_filter_float_s_fu_409_Y1b_prev_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        Y1b_prev_o = grp_low_pass_filter_float_s_fu_409_Y1b_prev_o;
    end else begin
        Y1b_prev_o = Y1b_prev_i;
    end
end

always @ (*) begin
    if (((grp_low_pass_filter_float_s_fu_409_Y2a_prev_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        Y2a_prev_o = grp_low_pass_filter_float_s_fu_409_Y2a_prev_o;
    end else begin
        Y2a_prev_o = Y2a_prev_i;
    end
end

always @ (*) begin
    if (((grp_low_pass_filter_float_s_fu_409_Y2b_prev_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        Y2b_prev_o = grp_low_pass_filter_float_s_fu_409_Y2b_prev_o;
    end else begin
        Y2b_prev_o = Y2b_prev_i;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_park_direct_float_s_fu_438_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_PI_control_float_s_fu_449_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_PI_control_float_s_fu_449_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((grp_park_inverse_float_s_fu_464_ap_done == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((grp_clarke_inverse_float_s_fu_475_ap_done == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == A_TVALID) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if (((grp_SVPWM_float_s_fu_481_ap_done == 1'b0) | (1'b1 == ap_block_state21_io) | (1'b0 == C_TREADY) | (1'b0 == B_TREADY))) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_low_pass_filter_float_s_fu_409_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_clarke_direct_float_s_fu_432_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        control_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        control_address0 = 64'd1;
    end else begin
        control_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4))) begin
        control_ce0 = 1'b1;
    end else begin
        control_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_PI_control_float_s_fu_449_KI = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_PI_control_float_s_fu_449_KI = 32'd3231711232;
    end else begin
        grp_PI_control_float_s_fu_449_KI = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_PI_control_float_s_fu_449_KP = 32'd3313500160;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_PI_control_float_s_fu_449_KP = 32'd3276275712;
    end else begin
        grp_PI_control_float_s_fu_449_KP = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_PI_control_float_s_fu_449_ref = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_PI_control_float_s_fu_449_ref = bitcast_ln339_reg_1325;
    end else begin
        grp_PI_control_float_s_fu_449_ref = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_PI_control_float_s_fu_449_val_r = Id_reg_1303;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_PI_control_float_s_fu_449_val_r = Iq_reg_1309;
    end else begin
        grp_PI_control_float_s_fu_449_val_r = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | ((grp_low_pass_filter_float_s_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_488_ce = 1'b1;
    end else begin
        grp_fu_488_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4) | ((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | (~((1'b0 == A_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_492_ce = 1'b1;
    end else begin
        grp_fu_492_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_492_p0 = sext_ln297_fu_1082_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_492_p0 = sext_ln292_fu_542_p1;
    end else begin
        grp_fu_492_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (~((1'b0 == A_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_495_ce = 1'b1;
    end else begin
        grp_fu_495_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (~((1'b0 == A_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_498_ce = 1'b1;
    end else begin
        grp_fu_498_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4) | (~((1'b0 == A_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        grp_fu_501_ce = 1'b1;
    end else begin
        grp_fu_501_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_PI_control_float_s_fu_449_ierr_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_PI_control_float_s_fu_449_ierr_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13)))) begin
        ierr_o = grp_PI_control_float_s_fu_498_p_din5_o;
    end else begin
        ierr_o = ierr_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13))) begin
        ierr_o_ap_vld = grp_PI_control_float_s_fu_498_p_din5_o_ap_vld;
    end else begin
        ierr_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        logger_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        logger_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        logger_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        logger_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        logger_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        logger_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        logger_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        logger_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        logger_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        logger_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        logger_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        logger_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        logger_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        logger_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        logger_address0 = 64'd0;
    end else begin
        logger_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((grp_clarke_inverse_float_s_fu_475_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_park_inverse_float_s_fu_464_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_park_direct_float_s_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_clarke_direct_float_s_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | (~((grp_SVPWM_float_s_fu_481_ap_done == 1'b0) | (1'b1 == ap_block_state21_io) | (1'b0 == C_TREADY) | (1'b0 == B_TREADY)) & (1'b1 == ap_CS_fsm_state21)))) begin
        logger_ce0 = 1'b1;
    end else begin
        logger_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        logger_d0 = bitcast_ln361_fu_1149_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        logger_d0 = bitcast_ln360_fu_1145_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        logger_d0 = bitcast_ln359_fu_1140_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        logger_d0 = bitcast_ln353_fu_1124_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        logger_d0 = bitcast_ln352_fu_1119_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        logger_d0 = bitcast_ln345_fu_1107_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        logger_d0 = bitcast_ln297_fu_1102_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        logger_d0 = bitcast_ln346_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        logger_d0 = bitcast_ln318_fu_1094_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        logger_d0 = bitcast_ln317_fu_1086_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        logger_d0 = bitcast_ln311_fu_1064_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        logger_d0 = data_V_1_fu_924_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        logger_d0 = bitcast_ln304_fu_912_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        logger_d0 = bitcast_ln303_fu_723_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        logger_d0 = data_V_2_fu_583_p1;
    end else begin
        logger_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((grp_clarke_inverse_float_s_fu_475_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_park_inverse_float_s_fu_464_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_park_direct_float_s_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_clarke_direct_float_s_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | (~((grp_SVPWM_float_s_fu_481_ap_done == 1'b0) | (1'b1 == ap_block_state21_io) | (1'b0 == C_TREADY) | (1'b0 == B_TREADY)) & (1'b1 == ap_CS_fsm_state21)))) begin
        logger_we0 = 1'b1;
    end else begin
        logger_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_low_pass_filter_float_s_fu_409_velocity_accum_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        velocity_accum_o = grp_low_pass_filter_float_s_fu_409_velocity_accum_o;
    end else begin
        velocity_accum_o = velocity_accum_i;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == A_TVALID) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_low_pass_filter_float_s_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_clarke_direct_float_s_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_park_direct_float_s_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_PI_control_float_s_fu_449_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_park_inverse_float_s_fu_464_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_clarke_inverse_float_s_fu_475_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if ((~((grp_SVPWM_float_s_fu_481_ap_done == 1'b0) | (1'b1 == ap_block_state21_io) | (1'b0 == C_TREADY) | (1'b0 == B_TREADY)) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Angle_fu_532_p4 = {{A_TDATA[79:64]}};

assign B_TDATA = pwmStreamObj_data_V_fu_1165_p4;

assign B_TKEEP = 8'd0;

assign B_TLAST = 1'd0;

assign B_TSTRB = 8'd0;

assign C_TDATA = {{{result_V_10_reg_1298}, {trunc_ln372_reg_1208}}, {result_V_11_reg_1260}};

assign C_TKEEP = 8'd0;

assign C_TLAST = 1'd0;

assign C_TSTRB = 8'd0;

assign Ia_fu_508_p1 = A_TDATA[15:0];

assign Ib_fu_512_p4 = {{A_TDATA[31:16]}};

assign RPM_fu_522_p4 = {{A_TDATA[63:48]}};

assign Theta_2_fu_880_p3 = ((tmp_3_fu_866_p3[0:0] == 1'b1) ? add_ln293_fu_874_p2 : result_V_fu_858_p3);

assign Theta_fu_900_p3 = ((icmp_ln294_fu_888_p2[0:0] == 1'b1) ? add_ln294_fu_894_p2 : Theta_2_fu_880_p3);

assign Y1a_prev_o_ap_vld = grp_low_pass_filter_float_s_fu_409_Y1a_prev_o_ap_vld;

assign Y1b_prev_o_ap_vld = grp_low_pass_filter_float_s_fu_409_Y1b_prev_o_ap_vld;

assign Y2a_prev_o_ap_vld = grp_low_pass_filter_float_s_fu_409_Y2a_prev_o_ap_vld;

assign Y2b_prev_o_ap_vld = grp_low_pass_filter_float_s_fu_409_Y2b_prev_o_ap_vld;

assign add_ln293_fu_874_p2 = (result_V_fu_858_p3 + 16'd1000);

assign add_ln294_fu_894_p2 = ($signed(Theta_2_fu_880_p3) + $signed(16'd64536));

assign add_ln344_1_fu_968_p2 = ($signed(zext_ln344_1_fu_964_p1) + $signed(9'd385));

assign add_ln344_2_fu_627_p2 = ($signed(zext_ln344_2_fu_623_p1) + $signed(9'd385));

assign add_ln344_fu_770_p2 = ($signed(zext_ln344_fu_766_p1) + $signed(9'd385));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == A_TVALID) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state21 = ((1'b0 == C_TREADY) | (1'b0 == B_TREADY));
end

always @ (*) begin
    ap_block_state21_io = ((1'b0 == C_TREADY) | (1'b0 == B_TREADY));
end

assign bitcast_ln292_fu_566_p1 = control_q0;

assign bitcast_ln297_fu_1102_p1 = grp_fu_526_p_dout0;

assign bitcast_ln303_fu_723_p1 = Ia_corr_1_reg_1248;

assign bitcast_ln304_fu_912_p1 = Ib_corr_1_reg_1254;

assign bitcast_ln311_fu_1064_p1 = Ibeta_reg_1287;

assign bitcast_ln317_fu_1086_p1 = Id_reg_1303;

assign bitcast_ln318_fu_1094_p1 = Iq_reg_1309;

assign bitcast_ln339_fu_1090_p1 = xor_ln339_reg_1315;

assign bitcast_ln345_fu_1107_p1 = Vd_reg_1336;

assign bitcast_ln346_fu_1098_p1 = Vq_reg_1330;

assign bitcast_ln352_fu_1119_p1 = grp_park_inverse_float_s_fu_546_p_dout0_0;

assign bitcast_ln353_fu_1124_p1 = Vbeta_reg_1347;

assign bitcast_ln359_fu_1140_p1 = grp_clarke_inverse_float_s_fu_517_p_dout0_0;

assign bitcast_ln360_fu_1145_p1 = Vb_reg_1358;

assign bitcast_ln361_fu_1149_p1 = Vc_reg_1364;

assign buffer_velocity_address0 = grp_low_pass_filter_float_s_fu_409_buffer_velocity_address0;

assign buffer_velocity_ce0 = grp_low_pass_filter_float_s_fu_409_buffer_velocity_ce0;

assign buffer_velocity_d0 = grp_low_pass_filter_float_s_fu_409_buffer_velocity_d0;

assign buffer_velocity_we0 = grp_low_pass_filter_float_s_fu_409_buffer_velocity_we0;

assign data_V_1_fu_924_p1 = Ialpha_reg_1281;

assign data_V_2_fu_583_p1 = vel_corr_2_reg_1243;

assign data_V_fu_727_p1 = dc_reg_1265;

assign grp_PI_control_float_s_fu_449_ap_done = grp_PI_control_float_s_fu_498_p_done;

assign grp_PI_control_float_s_fu_449_ap_ready = grp_PI_control_float_s_fu_498_p_ready;

assign grp_PI_control_float_s_fu_449_ierr_o_ap_vld = grp_PI_control_float_s_fu_498_p_din5_o_ap_vld;

assign grp_PI_control_float_s_fu_498_p_din1 = grp_PI_control_float_s_fu_449_ref;

assign grp_PI_control_float_s_fu_498_p_din2 = grp_PI_control_float_s_fu_449_val_r;

assign grp_PI_control_float_s_fu_498_p_din3 = grp_PI_control_float_s_fu_449_KP;

assign grp_PI_control_float_s_fu_498_p_din4 = grp_PI_control_float_s_fu_449_KI;

assign grp_PI_control_float_s_fu_498_p_din5 = ierr_i;

assign grp_PI_control_float_s_fu_498_p_start = grp_PI_control_float_s_fu_449_ap_start_reg;

assign grp_SVPWM_float_s_fu_481_ap_done = grp_SVPWM_float_s_fu_506_p_done;

assign grp_SVPWM_float_s_fu_481_ap_ready = grp_SVPWM_float_s_fu_506_p_ready;

assign grp_SVPWM_float_s_fu_506_p_din1 = Va_reg_1353;

assign grp_SVPWM_float_s_fu_506_p_din2 = Vb_reg_1358;

assign grp_SVPWM_float_s_fu_506_p_din3 = Vc_reg_1364;

assign grp_SVPWM_float_s_fu_506_p_start = grp_SVPWM_float_s_fu_481_ap_start_reg;

assign grp_clarke_direct_float_s_fu_432_ap_done = grp_clarke_direct_float_s_fu_512_p_done;

assign grp_clarke_direct_float_s_fu_432_ap_ready = grp_clarke_direct_float_s_fu_512_p_ready;

assign grp_clarke_direct_float_s_fu_512_p_din1 = Ia_corr_1_reg_1248;

assign grp_clarke_direct_float_s_fu_512_p_din2 = Ib_corr_1_reg_1254;

assign grp_clarke_direct_float_s_fu_512_p_start = grp_clarke_direct_float_s_fu_432_ap_start_reg;

assign grp_clarke_inverse_float_s_fu_475_ap_done = grp_clarke_inverse_float_s_fu_517_p_done;

assign grp_clarke_inverse_float_s_fu_475_ap_ready = grp_clarke_inverse_float_s_fu_517_p_ready;

assign grp_clarke_inverse_float_s_fu_517_p_din1 = Valpha_reg_1342;

assign grp_clarke_inverse_float_s_fu_517_p_din2 = Vbeta_reg_1347;

assign grp_clarke_inverse_float_s_fu_517_p_start = grp_clarke_inverse_float_s_fu_475_ap_start_reg;

assign grp_fu_522_p_ce = grp_fu_488_ce;

assign grp_fu_522_p_din0 = conv_reg_1213;

assign grp_fu_522_p_din1 = bitcast_ln292_fu_566_p1;

assign grp_fu_522_p_opcode = 2'd1;

assign grp_fu_526_p_ce = grp_fu_492_ce;

assign grp_fu_526_p_din0 = grp_fu_492_p0;

assign grp_fu_529_p_ce = grp_fu_495_ce;

assign grp_fu_529_p_din0 = sext_ln300_fu_547_p1;

assign grp_fu_532_p_ce = grp_fu_498_ce;

assign grp_fu_532_p_din0 = sext_ln300_1_fu_552_p1;

assign grp_fu_535_p_ce = grp_fu_501_ce;

assign grp_fu_535_p_din0 = sext_ln300_2_fu_557_p1;

assign grp_low_pass_filter_float_s_fu_409_ap_start = grp_low_pass_filter_float_s_fu_409_ap_start_reg;

assign grp_park_direct_float_s_fu_438_ap_done = grp_park_direct_float_s_fu_538_p_done;

assign grp_park_direct_float_s_fu_438_ap_ready = grp_park_direct_float_s_fu_538_p_ready;

assign grp_park_direct_float_s_fu_538_p_din1 = Ialpha_reg_1281;

assign grp_park_direct_float_s_fu_538_p_din2 = Ibeta_reg_1287;

assign grp_park_direct_float_s_fu_538_p_din3 = trunc_ln271_reg_1275;

assign grp_park_direct_float_s_fu_538_p_start = grp_park_direct_float_s_fu_438_ap_start_reg;

assign grp_park_inverse_float_s_fu_464_ap_done = grp_park_inverse_float_s_fu_546_p_done;

assign grp_park_inverse_float_s_fu_464_ap_ready = grp_park_inverse_float_s_fu_546_p_ready;

assign grp_park_inverse_float_s_fu_546_p_din1 = Vd_reg_1336;

assign grp_park_inverse_float_s_fu_546_p_din2 = Vq_reg_1330;

assign grp_park_inverse_float_s_fu_546_p_din3 = trunc_ln271_reg_1275;

assign grp_park_inverse_float_s_fu_546_p_start = grp_park_inverse_float_s_fu_464_ap_start_reg;

assign icmp_ln294_fu_888_p2 = (($signed(Theta_2_fu_880_p3) > $signed(16'd999)) ? 1'b1 : 1'b0);

assign isNeg_1_fu_974_p3 = add_ln344_1_fu_968_p2[32'd8];

assign isNeg_2_fu_633_p3 = add_ln344_2_fu_627_p2[32'd8];

assign isNeg_fu_776_p3 = add_ln344_fu_770_p2[32'd8];

assign mantissa_1_fu_950_p4 = {{{{1'd1}, {tmp_21_fu_946_p1}}}, {1'd0}};

assign mantissa_2_fu_609_p4 = {{{{1'd1}, {tmp_23_fu_605_p1}}}, {1'd0}};

assign mantissa_fu_752_p4 = {{{{1'd1}, {tmp_19_fu_748_p1}}}, {1'd0}};

assign p_Result_1_fu_928_p3 = data_V_1_fu_924_p1[32'd31];

assign p_Result_2_fu_587_p3 = data_V_2_fu_583_p1[32'd31];

assign p_Result_s_fu_730_p3 = data_V_fu_727_p1[32'd31];

assign pwmStreamObj_data_V_fu_1165_p4 = {{{grp_SVPWM_float_s_fu_506_p_dout0_2}, {grp_SVPWM_float_s_fu_506_p_dout0_1}}, {grp_SVPWM_float_s_fu_506_p_dout0_0}};

assign r_V_1_fu_816_p2 = zext_ln15_fu_762_p1 << zext_ln1340_fu_806_p1;

assign r_V_2_fu_1008_p2 = zext_ln15_1_fu_960_p1 >> zext_ln1340_1_fu_1004_p1;

assign r_V_3_fu_1014_p2 = zext_ln15_1_fu_960_p1 << zext_ln1340_1_fu_1004_p1;

assign r_V_4_fu_667_p2 = zext_ln15_2_fu_619_p1 >> zext_ln1340_2_fu_663_p1;

assign r_V_5_fu_673_p2 = zext_ln15_2_fu_619_p1 << zext_ln1340_2_fu_663_p1;

assign r_V_fu_810_p2 = zext_ln15_fu_762_p1 >> zext_ln1340_fu_806_p1;

assign result_V_10_fu_1056_p3 = ((p_Result_1_fu_928_p3[0:0] == 1'b1) ? result_V_5_fu_1050_p2 : val_1_fu_1042_p3);

assign result_V_11_fu_715_p3 = ((p_Result_2_fu_587_p3[0:0] == 1'b1) ? result_V_9_fu_709_p2 : val_2_fu_701_p3);

assign result_V_2_fu_852_p2 = (16'd0 - val_fu_844_p3);

assign result_V_5_fu_1050_p2 = (16'd0 - val_1_fu_1042_p3);

assign result_V_9_fu_709_p2 = (16'd0 - val_2_fu_701_p3);

assign result_V_fu_858_p3 = ((p_Result_s_fu_730_p3[0:0] == 1'b1) ? result_V_2_fu_852_p2 : val_fu_844_p3);

assign sext_ln1340_1_fu_1000_p1 = $signed(ush_1_fu_992_p3);

assign sext_ln1340_2_fu_659_p1 = $signed(ush_2_fu_651_p3);

assign sext_ln1340_fu_802_p1 = $signed(ush_fu_794_p3);

assign sext_ln1364_1_fu_988_p1 = $signed(sub_ln1364_1_fu_982_p2);

assign sext_ln1364_2_fu_647_p1 = $signed(sub_ln1364_2_fu_641_p2);

assign sext_ln1364_fu_790_p1 = $signed(sub_ln1364_fu_784_p2);

assign sext_ln292_fu_542_p1 = $signed(Angle_fu_532_p4);

assign sext_ln297_fu_1082_p1 = Theta_reg_1270;

assign sext_ln300_1_fu_552_p1 = $signed(Ia_fu_508_p1);

assign sext_ln300_2_fu_557_p1 = $signed(Ib_fu_512_p4);

assign sext_ln300_fu_547_p1 = $signed(RPM_fu_522_p4);

assign sub_ln1364_1_fu_982_p2 = (8'd127 - tmp_20_fu_936_p4);

assign sub_ln1364_2_fu_641_p2 = (8'd127 - tmp_22_fu_595_p4);

assign sub_ln1364_fu_784_p2 = (8'd127 - tmp_18_fu_738_p4);

assign tmp_10_fu_1020_p3 = r_V_2_fu_1008_p2[32'd24];

assign tmp_17_fu_679_p3 = r_V_4_fu_667_p2[32'd24];

assign tmp_18_fu_738_p4 = {{data_V_fu_727_p1[30:23]}};

assign tmp_19_fu_748_p1 = data_V_fu_727_p1[22:0];

assign tmp_20_fu_936_p4 = {{data_V_1_fu_924_p1[30:23]}};

assign tmp_21_fu_946_p1 = data_V_1_fu_924_p1[22:0];

assign tmp_22_fu_595_p4 = {{data_V_2_fu_583_p1[30:23]}};

assign tmp_23_fu_605_p1 = data_V_2_fu_583_p1[22:0];

assign tmp_2_fu_834_p4 = {{r_V_1_fu_816_p2[39:24]}};

assign tmp_3_fu_866_p3 = result_V_fu_858_p3[32'd15];

assign tmp_7_fu_1032_p4 = {{r_V_3_fu_1014_p2[39:24]}};

assign tmp_fu_822_p3 = r_V_fu_810_p2[32'd24];

assign tmp_s_fu_691_p4 = {{r_V_5_fu_673_p2[39:24]}};

assign trunc_ln271_fu_908_p1 = Theta_fu_900_p3[9:0];

assign trunc_ln372_fu_562_p1 = A_TDATA[31:0];

assign ush_1_fu_992_p3 = ((isNeg_1_fu_974_p3[0:0] == 1'b1) ? sext_ln1364_1_fu_988_p1 : add_ln344_1_fu_968_p2);

assign ush_2_fu_651_p3 = ((isNeg_2_fu_633_p3[0:0] == 1'b1) ? sext_ln1364_2_fu_647_p1 : add_ln344_2_fu_627_p2);

assign ush_fu_794_p3 = ((isNeg_fu_776_p3[0:0] == 1'b1) ? sext_ln1364_fu_790_p1 : add_ln344_fu_770_p2);

assign val_1_fu_1042_p3 = ((isNeg_1_fu_974_p3[0:0] == 1'b1) ? zext_ln671_1_fu_1028_p1 : tmp_7_fu_1032_p4);

assign val_2_fu_701_p3 = ((isNeg_2_fu_633_p3[0:0] == 1'b1) ? zext_ln671_2_fu_687_p1 : tmp_s_fu_691_p4);

assign val_fu_844_p3 = ((isNeg_fu_776_p3[0:0] == 1'b1) ? zext_ln671_fu_830_p1 : tmp_2_fu_834_p4);

assign velocity_accum_o_ap_vld = grp_low_pass_filter_float_s_fu_409_velocity_accum_o_ap_vld;

assign xor_ln339_fu_1076_p2 = (control_q0 ^ 32'd2147483648);

assign zext_ln1340_1_fu_1004_p1 = $unsigned(sext_ln1340_1_fu_1000_p1);

assign zext_ln1340_2_fu_663_p1 = $unsigned(sext_ln1340_2_fu_659_p1);

assign zext_ln1340_fu_806_p1 = $unsigned(sext_ln1340_fu_802_p1);

assign zext_ln15_1_fu_960_p1 = mantissa_1_fu_950_p4;

assign zext_ln15_2_fu_619_p1 = mantissa_2_fu_609_p4;

assign zext_ln15_fu_762_p1 = mantissa_fu_752_p4;

assign zext_ln344_1_fu_964_p1 = tmp_20_fu_936_p4;

assign zext_ln344_2_fu_623_p1 = tmp_22_fu_595_p4;

assign zext_ln344_fu_766_p1 = tmp_18_fu_738_p4;

assign zext_ln671_1_fu_1028_p1 = tmp_10_fu_1020_p3;

assign zext_ln671_2_fu_687_p1 = tmp_17_fu_679_p3;

assign zext_ln671_fu_830_p1 = tmp_fu_822_p3;

endmodule //foc_frontend_torque_foc
