-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity foc_frontend is
generic (
    C_S_AXI_CONTROL_R_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CONTROL_R_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_TDATA : IN STD_LOGIC_VECTOR (79 downto 0);
    A_TVALID : IN STD_LOGIC;
    A_TREADY : OUT STD_LOGIC;
    A_TKEEP : IN STD_LOGIC_VECTOR (9 downto 0);
    A_TSTRB : IN STD_LOGIC_VECTOR (9 downto 0);
    A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    B_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    B_TVALID : OUT STD_LOGIC;
    B_TREADY : IN STD_LOGIC;
    B_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    C_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    C_TVALID : OUT STD_LOGIC;
    C_TREADY : IN STD_LOGIC;
    C_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_r_AWVALID : IN STD_LOGIC;
    s_axi_control_r_AWREADY : OUT STD_LOGIC;
    s_axi_control_r_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_WVALID : IN STD_LOGIC;
    s_axi_control_r_WREADY : OUT STD_LOGIC;
    s_axi_control_r_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH/8-1 downto 0);
    s_axi_control_r_ARVALID : IN STD_LOGIC;
    s_axi_control_r_ARREADY : OUT STD_LOGIC;
    s_axi_control_r_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_RVALID : OUT STD_LOGIC;
    s_axi_control_r_RREADY : IN STD_LOGIC;
    s_axi_control_r_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_r_BVALID : OUT STD_LOGIC;
    s_axi_control_r_BREADY : IN STD_LOGIC;
    s_axi_control_r_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of foc_frontend is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "foc_frontend_foc_frontend,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=88,HLS_SYN_TPT=none,HLS_SYN_MEM=13,HLS_SYN_DSP=0,HLS_SYN_FF=15184,HLS_SYN_LUT=23054,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv32_40800000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000100000000000000000000000";
    constant ap_const_lv32_40A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000101000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal control_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal control_ce0 : STD_LOGIC;
    signal control_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal logger_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal logger_ce0 : STD_LOGIC;
    signal logger_we0 : STD_LOGIC;
    signal logger_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal velocity_accum : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal buffer_velocity_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buffer_velocity_ce0 : STD_LOGIC;
    signal buffer_velocity_we0 : STD_LOGIC;
    signal buffer_velocity_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_velocity_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Y1a_prev : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Y1b_prev : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Y2a_prev : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Y2b_prev : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ierr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal A_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal control_addr_reg_418 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal bitcast_ln13_fu_318_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_reg_428 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_1_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_1_reg_433 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln18_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln18_reg_446 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_451 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_reg_456 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal bitcast_ln20_fu_368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln20_reg_465 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_1_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_1_reg_470 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln20_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln20_reg_475 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal bitcast_ln22_fu_393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln22_reg_484 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_1_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln22_1_reg_489 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_reg_494 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_calibration_fu_146_ap_start : STD_LOGIC;
    signal grp_calibration_fu_146_ap_done : STD_LOGIC;
    signal grp_calibration_fu_146_ap_idle : STD_LOGIC;
    signal grp_calibration_fu_146_ap_ready : STD_LOGIC;
    signal grp_calibration_fu_146_B_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_calibration_fu_146_B_TVALID : STD_LOGIC;
    signal grp_calibration_fu_146_B_TREADY : STD_LOGIC;
    signal grp_calibration_fu_146_B_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_calibration_fu_146_B_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_calibration_fu_146_B_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_manual_control_fu_158_ap_start : STD_LOGIC;
    signal grp_manual_control_fu_158_ap_done : STD_LOGIC;
    signal grp_manual_control_fu_158_ap_idle : STD_LOGIC;
    signal grp_manual_control_fu_158_ap_ready : STD_LOGIC;
    signal grp_manual_control_fu_158_A_TREADY : STD_LOGIC;
    signal grp_manual_control_fu_158_B_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_manual_control_fu_158_B_TVALID : STD_LOGIC;
    signal grp_manual_control_fu_158_B_TREADY : STD_LOGIC;
    signal grp_manual_control_fu_158_B_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_manual_control_fu_158_B_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_manual_control_fu_158_B_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_manual_control_fu_158_control_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_manual_control_fu_158_control_ce0 : STD_LOGIC;
    signal grp_manual_control_fu_158_logger_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_manual_control_fu_158_logger_ce0 : STD_LOGIC;
    signal grp_manual_control_fu_158_logger_we0 : STD_LOGIC;
    signal grp_manual_control_fu_158_logger_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_ap_start : STD_LOGIC;
    signal grp_torque_foc_fu_186_ap_done : STD_LOGIC;
    signal grp_torque_foc_fu_186_ap_idle : STD_LOGIC;
    signal grp_torque_foc_fu_186_ap_ready : STD_LOGIC;
    signal grp_torque_foc_fu_186_A_TREADY : STD_LOGIC;
    signal grp_torque_foc_fu_186_B_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_torque_foc_fu_186_B_TVALID : STD_LOGIC;
    signal grp_torque_foc_fu_186_B_TREADY : STD_LOGIC;
    signal grp_torque_foc_fu_186_B_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_torque_foc_fu_186_B_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_torque_foc_fu_186_B_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_torque_foc_fu_186_C_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_torque_foc_fu_186_C_TVALID : STD_LOGIC;
    signal grp_torque_foc_fu_186_C_TREADY : STD_LOGIC;
    signal grp_torque_foc_fu_186_C_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_torque_foc_fu_186_C_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_torque_foc_fu_186_C_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_torque_foc_fu_186_control_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_torque_foc_fu_186_control_ce0 : STD_LOGIC;
    signal grp_torque_foc_fu_186_logger_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_torque_foc_fu_186_logger_ce0 : STD_LOGIC;
    signal grp_torque_foc_fu_186_logger_we0 : STD_LOGIC;
    signal grp_torque_foc_fu_186_logger_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_velocity_accum_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_velocity_accum_o_ap_vld : STD_LOGIC;
    signal grp_torque_foc_fu_186_buffer_velocity_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_torque_foc_fu_186_buffer_velocity_ce0 : STD_LOGIC;
    signal grp_torque_foc_fu_186_buffer_velocity_we0 : STD_LOGIC;
    signal grp_torque_foc_fu_186_buffer_velocity_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_Y1a_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_Y1a_prev_o_ap_vld : STD_LOGIC;
    signal grp_torque_foc_fu_186_Y1b_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_Y1b_prev_o_ap_vld : STD_LOGIC;
    signal grp_torque_foc_fu_186_Y2a_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_Y2a_prev_o_ap_vld : STD_LOGIC;
    signal grp_torque_foc_fu_186_Y2b_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_Y2b_prev_o_ap_vld : STD_LOGIC;
    signal grp_torque_foc_fu_186_ierr_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_ierr_o_ap_vld : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_start : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_start : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_start : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_start : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_fu_522_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_fu_522_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_fu_522_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_torque_foc_fu_186_grp_fu_522_p_ce : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_fu_526_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_fu_526_p_ce : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_fu_529_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_fu_529_p_ce : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_fu_532_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_fu_532_p_ce : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_fu_535_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_fu_535_p_ce : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_start : STD_LOGIC;
    signal grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_start : STD_LOGIC;
    signal grp_foc_fu_240_ap_start : STD_LOGIC;
    signal grp_foc_fu_240_ap_done : STD_LOGIC;
    signal grp_foc_fu_240_ap_idle : STD_LOGIC;
    signal grp_foc_fu_240_ap_ready : STD_LOGIC;
    signal grp_foc_fu_240_A_TREADY : STD_LOGIC;
    signal grp_foc_fu_240_B_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_foc_fu_240_B_TVALID : STD_LOGIC;
    signal grp_foc_fu_240_B_TREADY : STD_LOGIC;
    signal grp_foc_fu_240_B_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_foc_fu_240_B_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_foc_fu_240_B_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_foc_fu_240_C_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_foc_fu_240_C_TVALID : STD_LOGIC;
    signal grp_foc_fu_240_C_TREADY : STD_LOGIC;
    signal grp_foc_fu_240_C_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_foc_fu_240_C_TSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_foc_fu_240_C_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_foc_fu_240_control_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_foc_fu_240_control_ce0 : STD_LOGIC;
    signal grp_foc_fu_240_logger_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_foc_fu_240_logger_ce0 : STD_LOGIC;
    signal grp_foc_fu_240_logger_we0 : STD_LOGIC;
    signal grp_foc_fu_240_logger_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_velocity_accum_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_velocity_accum_o_ap_vld : STD_LOGIC;
    signal grp_foc_fu_240_buffer_velocity_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_foc_fu_240_buffer_velocity_ce0 : STD_LOGIC;
    signal grp_foc_fu_240_buffer_velocity_we0 : STD_LOGIC;
    signal grp_foc_fu_240_buffer_velocity_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_Y1a_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_Y1a_prev_o_ap_vld : STD_LOGIC;
    signal grp_foc_fu_240_Y1b_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_Y1b_prev_o_ap_vld : STD_LOGIC;
    signal grp_foc_fu_240_Y2a_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_Y2a_prev_o_ap_vld : STD_LOGIC;
    signal grp_foc_fu_240_Y2b_prev_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_Y2b_prev_o_ap_vld : STD_LOGIC;
    signal grp_foc_fu_240_ierr_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_ierr_o_ap_vld : STD_LOGIC;
    signal grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_start : STD_LOGIC;
    signal grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_start : STD_LOGIC;
    signal grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_start : STD_LOGIC;
    signal grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_start : STD_LOGIC;
    signal grp_foc_fu_240_grp_fu_522_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_fu_522_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_fu_522_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_foc_fu_240_grp_fu_522_p_ce : STD_LOGIC;
    signal grp_foc_fu_240_grp_fu_526_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_fu_526_p_ce : STD_LOGIC;
    signal grp_foc_fu_240_grp_fu_529_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_fu_529_p_ce : STD_LOGIC;
    signal grp_foc_fu_240_grp_fu_532_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_fu_532_p_ce : STD_LOGIC;
    signal grp_foc_fu_240_grp_fu_535_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_fu_535_p_ce : STD_LOGIC;
    signal grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_start : STD_LOGIC;
    signal grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_start : STD_LOGIC;
    signal grp_PI_control_float_s_fu_498_ap_start : STD_LOGIC;
    signal grp_PI_control_float_s_fu_498_ap_done : STD_LOGIC;
    signal grp_PI_control_float_s_fu_498_ap_idle : STD_LOGIC;
    signal grp_PI_control_float_s_fu_498_ap_ready : STD_LOGIC;
    signal grp_PI_control_float_s_fu_498_ref : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PI_control_float_s_fu_498_val_r : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PI_control_float_s_fu_498_KP : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PI_control_float_s_fu_498_KI : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PI_control_float_s_fu_498_ierr_i : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PI_control_float_s_fu_498_ierr_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PI_control_float_s_fu_498_ierr_o_ap_vld : STD_LOGIC;
    signal grp_PI_control_float_s_fu_498_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SVPWM_float_s_fu_506_ap_start : STD_LOGIC;
    signal grp_SVPWM_float_s_fu_506_ap_done : STD_LOGIC;
    signal grp_SVPWM_float_s_fu_506_ap_idle : STD_LOGIC;
    signal grp_SVPWM_float_s_fu_506_ap_ready : STD_LOGIC;
    signal grp_SVPWM_float_s_fu_506_Va : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SVPWM_float_s_fu_506_Vb : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SVPWM_float_s_fu_506_Vc : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_SVPWM_float_s_fu_506_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_SVPWM_float_s_fu_506_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_SVPWM_float_s_fu_506_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_clarke_direct_float_s_fu_512_ap_start : STD_LOGIC;
    signal grp_clarke_direct_float_s_fu_512_ap_done : STD_LOGIC;
    signal grp_clarke_direct_float_s_fu_512_ap_idle : STD_LOGIC;
    signal grp_clarke_direct_float_s_fu_512_ap_ready : STD_LOGIC;
    signal grp_clarke_direct_float_s_fu_512_Ia : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_direct_float_s_fu_512_Ib : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_direct_float_s_fu_512_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_direct_float_s_fu_512_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_inverse_float_s_fu_517_ap_start : STD_LOGIC;
    signal grp_clarke_inverse_float_s_fu_517_ap_done : STD_LOGIC;
    signal grp_clarke_inverse_float_s_fu_517_ap_idle : STD_LOGIC;
    signal grp_clarke_inverse_float_s_fu_517_ap_ready : STD_LOGIC;
    signal grp_clarke_inverse_float_s_fu_517_Valpha : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_inverse_float_s_fu_517_Vbeta : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_inverse_float_s_fu_517_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_inverse_float_s_fu_517_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_clarke_inverse_float_s_fu_517_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_direct_float_s_fu_538_ap_start : STD_LOGIC;
    signal grp_park_direct_float_s_fu_538_ap_done : STD_LOGIC;
    signal grp_park_direct_float_s_fu_538_ap_idle : STD_LOGIC;
    signal grp_park_direct_float_s_fu_538_ap_ready : STD_LOGIC;
    signal grp_park_direct_float_s_fu_538_Ialpha : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_direct_float_s_fu_538_Ibeta : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_direct_float_s_fu_538_angle : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_park_direct_float_s_fu_538_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_direct_float_s_fu_538_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_inverse_float_s_fu_546_ap_start : STD_LOGIC;
    signal grp_park_inverse_float_s_fu_546_ap_done : STD_LOGIC;
    signal grp_park_inverse_float_s_fu_546_ap_idle : STD_LOGIC;
    signal grp_park_inverse_float_s_fu_546_ap_ready : STD_LOGIC;
    signal grp_park_inverse_float_s_fu_546_Vd : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_inverse_float_s_fu_546_Vq : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_inverse_float_s_fu_546_angle : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_park_inverse_float_s_fu_546_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_park_inverse_float_s_fu_546_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calibration_fu_146_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal and_ln13_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_manual_control_fu_158_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_torque_foc_fu_186_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_foc_fu_240_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_fu_294_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_302_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln13_fu_323_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln13_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln18_fu_348_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln18_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln20_fu_373_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln20_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln22_fu_398_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln22_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_522_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_522_ce : STD_LOGIC;
    signal grp_fu_526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_526_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_526_ce : STD_LOGIC;
    signal grp_fu_529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_529_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_529_ce : STD_LOGIC;
    signal grp_fu_532_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_532_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_532_ce : STD_LOGIC;
    signal grp_fu_535_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_535_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_535_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_predicate_op95_call_state11 : BOOLEAN;
    signal ap_predicate_op97_call_state11 : BOOLEAN;
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal regslice_both_B_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_C_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state18 : BOOLEAN;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal regslice_both_A_V_data_V_U_apdone_blk : STD_LOGIC;
    signal A_TDATA_int_regslice : STD_LOGIC_VECTOR (79 downto 0);
    signal A_TVALID_int_regslice : STD_LOGIC;
    signal A_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_A_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal A_TKEEP_int_regslice : STD_LOGIC_VECTOR (9 downto 0);
    signal regslice_both_A_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal A_TSTRB_int_regslice : STD_LOGIC_VECTOR (9 downto 0);
    signal regslice_both_A_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_last_V_U_apdone_blk : STD_LOGIC;
    signal A_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_A_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_last_V_U_ack_in : STD_LOGIC;
    signal B_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal B_TVALID_int_regslice : STD_LOGIC;
    signal B_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_B_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal B_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_B_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal B_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_B_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_apdone_blk : STD_LOGIC;
    signal B_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_B_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_vld_out : STD_LOGIC;
    signal C_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal C_TVALID_int_regslice : STD_LOGIC;
    signal C_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_C_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_C_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal C_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_C_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_C_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_C_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal C_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_C_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_C_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_C_V_last_V_U_apdone_blk : STD_LOGIC;
    signal C_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_C_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_C_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component foc_frontend_calibration IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        B_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        B_TVALID : OUT STD_LOGIC;
        B_TREADY : IN STD_LOGIC;
        B_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component foc_frontend_manual_control IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_TDATA : IN STD_LOGIC_VECTOR (79 downto 0);
        A_TVALID : IN STD_LOGIC;
        A_TREADY : OUT STD_LOGIC;
        A_TKEEP : IN STD_LOGIC_VECTOR (9 downto 0);
        A_TSTRB : IN STD_LOGIC_VECTOR (9 downto 0);
        A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        B_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        B_TVALID : OUT STD_LOGIC;
        B_TREADY : IN STD_LOGIC;
        B_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        control_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        control_ce0 : OUT STD_LOGIC;
        control_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        logger_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        logger_ce0 : OUT STD_LOGIC;
        logger_we0 : OUT STD_LOGIC;
        logger_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_torque_foc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_TDATA : IN STD_LOGIC_VECTOR (79 downto 0);
        A_TVALID : IN STD_LOGIC;
        A_TREADY : OUT STD_LOGIC;
        A_TKEEP : IN STD_LOGIC_VECTOR (9 downto 0);
        A_TSTRB : IN STD_LOGIC_VECTOR (9 downto 0);
        A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        B_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        B_TVALID : OUT STD_LOGIC;
        B_TREADY : IN STD_LOGIC;
        B_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        C_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        C_TVALID : OUT STD_LOGIC;
        C_TREADY : IN STD_LOGIC;
        C_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        control_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        control_ce0 : OUT STD_LOGIC;
        control_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        logger_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        logger_ce0 : OUT STD_LOGIC;
        logger_we0 : OUT STD_LOGIC;
        logger_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        velocity_accum_i : IN STD_LOGIC_VECTOR (31 downto 0);
        velocity_accum_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        velocity_accum_o_ap_vld : OUT STD_LOGIC;
        buffer_velocity_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buffer_velocity_ce0 : OUT STD_LOGIC;
        buffer_velocity_we0 : OUT STD_LOGIC;
        buffer_velocity_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_velocity_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Y1a_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y1a_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y1a_prev_o_ap_vld : OUT STD_LOGIC;
        Y1b_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y1b_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y1b_prev_o_ap_vld : OUT STD_LOGIC;
        Y2a_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y2a_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y2a_prev_o_ap_vld : OUT STD_LOGIC;
        Y2b_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y2b_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y2b_prev_o_ap_vld : OUT STD_LOGIC;
        ierr_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ierr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ierr_o_ap_vld : OUT STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din5_o : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din5_o_ap_vld : IN STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_start : OUT STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_ready : IN STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_done : IN STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_idle : IN STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SVPWM_float_s_fu_506_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SVPWM_float_s_fu_506_p_din3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SVPWM_float_s_fu_506_p_dout0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
        grp_SVPWM_float_s_fu_506_p_dout0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        grp_SVPWM_float_s_fu_506_p_dout0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        grp_SVPWM_float_s_fu_506_p_start : OUT STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_ready : IN STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_done : IN STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_idle : IN STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_start : OUT STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_ready : IN STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_done : IN STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_idle : IN STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_dout0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_start : OUT STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_ready : IN STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_done : IN STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_idle : IN STD_LOGIC;
        grp_fu_522_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_522_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_522_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_522_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_522_p_ce : OUT STD_LOGIC;
        grp_fu_526_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_526_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_526_p_ce : OUT STD_LOGIC;
        grp_fu_529_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_529_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_529_p_ce : OUT STD_LOGIC;
        grp_fu_532_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_532_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_532_p_ce : OUT STD_LOGIC;
        grp_fu_535_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_535_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_535_p_ce : OUT STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_din3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_park_direct_float_s_fu_538_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_start : OUT STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_ready : IN STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_done : IN STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_idle : IN STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_din3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_park_inverse_float_s_fu_546_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_start : OUT STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_ready : IN STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_done : IN STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_idle : IN STD_LOGIC );
    end component;


    component foc_frontend_foc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_TDATA : IN STD_LOGIC_VECTOR (79 downto 0);
        A_TVALID : IN STD_LOGIC;
        A_TREADY : OUT STD_LOGIC;
        A_TKEEP : IN STD_LOGIC_VECTOR (9 downto 0);
        A_TSTRB : IN STD_LOGIC_VECTOR (9 downto 0);
        A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        B_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        B_TVALID : OUT STD_LOGIC;
        B_TREADY : IN STD_LOGIC;
        B_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        C_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        C_TVALID : OUT STD_LOGIC;
        C_TREADY : IN STD_LOGIC;
        C_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        C_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        control_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        control_ce0 : OUT STD_LOGIC;
        control_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        logger_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        logger_ce0 : OUT STD_LOGIC;
        logger_we0 : OUT STD_LOGIC;
        logger_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        velocity_accum_i : IN STD_LOGIC_VECTOR (31 downto 0);
        velocity_accum_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        velocity_accum_o_ap_vld : OUT STD_LOGIC;
        buffer_velocity_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buffer_velocity_ce0 : OUT STD_LOGIC;
        buffer_velocity_we0 : OUT STD_LOGIC;
        buffer_velocity_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_velocity_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Y1a_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y1a_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y1a_prev_o_ap_vld : OUT STD_LOGIC;
        Y1b_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y1b_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y1b_prev_o_ap_vld : OUT STD_LOGIC;
        Y2a_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y2a_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y2a_prev_o_ap_vld : OUT STD_LOGIC;
        Y2b_prev_i : IN STD_LOGIC_VECTOR (31 downto 0);
        Y2b_prev_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        Y2b_prev_o_ap_vld : OUT STD_LOGIC;
        ierr_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ierr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ierr_o_ap_vld : OUT STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din5_o : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_din5_o_ap_vld : IN STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_PI_control_float_s_fu_498_p_start : OUT STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_ready : IN STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_done : IN STD_LOGIC;
        grp_PI_control_float_s_fu_498_p_idle : IN STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SVPWM_float_s_fu_506_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SVPWM_float_s_fu_506_p_din3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_SVPWM_float_s_fu_506_p_dout0_0 : IN STD_LOGIC_VECTOR (15 downto 0);
        grp_SVPWM_float_s_fu_506_p_dout0_1 : IN STD_LOGIC_VECTOR (15 downto 0);
        grp_SVPWM_float_s_fu_506_p_dout0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        grp_SVPWM_float_s_fu_506_p_start : OUT STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_ready : IN STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_done : IN STD_LOGIC;
        grp_SVPWM_float_s_fu_506_p_idle : IN STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_direct_float_s_fu_512_p_start : OUT STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_ready : IN STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_done : IN STD_LOGIC;
        grp_clarke_direct_float_s_fu_512_p_idle : IN STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_dout0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_clarke_inverse_float_s_fu_517_p_start : OUT STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_ready : IN STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_done : IN STD_LOGIC;
        grp_clarke_inverse_float_s_fu_517_p_idle : IN STD_LOGIC;
        grp_fu_522_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_522_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_522_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_522_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_522_p_ce : OUT STD_LOGIC;
        grp_fu_526_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_526_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_526_p_ce : OUT STD_LOGIC;
        grp_fu_529_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_529_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_529_p_ce : OUT STD_LOGIC;
        grp_fu_532_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_532_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_532_p_ce : OUT STD_LOGIC;
        grp_fu_535_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_535_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_535_p_ce : OUT STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_din3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_park_direct_float_s_fu_538_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_direct_float_s_fu_538_p_start : OUT STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_ready : IN STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_done : IN STD_LOGIC;
        grp_park_direct_float_s_fu_538_p_idle : IN STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_din2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_din3 : OUT STD_LOGIC_VECTOR (9 downto 0);
        grp_park_inverse_float_s_fu_546_p_dout0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_dout0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_park_inverse_float_s_fu_546_p_start : OUT STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_ready : IN STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_done : IN STD_LOGIC;
        grp_park_inverse_float_s_fu_546_p_idle : IN STD_LOGIC );
    end component;


    component foc_frontend_PI_control_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ref : IN STD_LOGIC_VECTOR (31 downto 0);
        val_r : IN STD_LOGIC_VECTOR (31 downto 0);
        KP : IN STD_LOGIC_VECTOR (31 downto 0);
        KI : IN STD_LOGIC_VECTOR (31 downto 0);
        ierr_i : IN STD_LOGIC_VECTOR (31 downto 0);
        ierr_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        ierr_o_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_SVPWM_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Va : IN STD_LOGIC_VECTOR (31 downto 0);
        Vb : IN STD_LOGIC_VECTOR (31 downto 0);
        Vc : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component foc_frontend_clarke_direct_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Ia : IN STD_LOGIC_VECTOR (31 downto 0);
        Ib : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_clarke_inverse_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Valpha : IN STD_LOGIC_VECTOR (31 downto 0);
        Vbeta : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_park_direct_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Ialpha : IN STD_LOGIC_VECTOR (31 downto 0);
        Ibeta : IN STD_LOGIC_VECTOR (31 downto 0);
        angle : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_park_inverse_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Vd : IN STD_LOGIC_VECTOR (31 downto 0);
        Vq : IN STD_LOGIC_VECTOR (31 downto 0);
        angle : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component foc_frontend_fsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_sitofp_32s_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_buffer_velocity_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_frontend_control_r_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        control_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        control_ce0 : IN STD_LOGIC;
        control_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        logger_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        logger_ce0 : IN STD_LOGIC;
        logger_we0 : IN STD_LOGIC;
        logger_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component foc_frontend_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    buffer_velocity_U : component foc_frontend_buffer_velocity_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buffer_velocity_address0,
        ce0 => buffer_velocity_ce0,
        we0 => buffer_velocity_we0,
        d0 => buffer_velocity_d0,
        q0 => buffer_velocity_q0);

    grp_calibration_fu_146 : component foc_frontend_calibration
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_calibration_fu_146_ap_start,
        ap_done => grp_calibration_fu_146_ap_done,
        ap_idle => grp_calibration_fu_146_ap_idle,
        ap_ready => grp_calibration_fu_146_ap_ready,
        B_TDATA => grp_calibration_fu_146_B_TDATA,
        B_TVALID => grp_calibration_fu_146_B_TVALID,
        B_TREADY => grp_calibration_fu_146_B_TREADY,
        B_TKEEP => grp_calibration_fu_146_B_TKEEP,
        B_TSTRB => grp_calibration_fu_146_B_TSTRB,
        B_TLAST => grp_calibration_fu_146_B_TLAST);

    grp_manual_control_fu_158 : component foc_frontend_manual_control
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_manual_control_fu_158_ap_start,
        ap_done => grp_manual_control_fu_158_ap_done,
        ap_idle => grp_manual_control_fu_158_ap_idle,
        ap_ready => grp_manual_control_fu_158_ap_ready,
        A_TDATA => A_TDATA_int_regslice,
        A_TVALID => A_TVALID_int_regslice,
        A_TREADY => grp_manual_control_fu_158_A_TREADY,
        A_TKEEP => A_TKEEP_int_regslice,
        A_TSTRB => A_TSTRB_int_regslice,
        A_TLAST => A_TLAST_int_regslice,
        B_TDATA => grp_manual_control_fu_158_B_TDATA,
        B_TVALID => grp_manual_control_fu_158_B_TVALID,
        B_TREADY => grp_manual_control_fu_158_B_TREADY,
        B_TKEEP => grp_manual_control_fu_158_B_TKEEP,
        B_TSTRB => grp_manual_control_fu_158_B_TSTRB,
        B_TLAST => grp_manual_control_fu_158_B_TLAST,
        control_address0 => grp_manual_control_fu_158_control_address0,
        control_ce0 => grp_manual_control_fu_158_control_ce0,
        control_q0 => control_q0,
        logger_address0 => grp_manual_control_fu_158_logger_address0,
        logger_ce0 => grp_manual_control_fu_158_logger_ce0,
        logger_we0 => grp_manual_control_fu_158_logger_we0,
        logger_d0 => grp_manual_control_fu_158_logger_d0);

    grp_torque_foc_fu_186 : component foc_frontend_torque_foc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_torque_foc_fu_186_ap_start,
        ap_done => grp_torque_foc_fu_186_ap_done,
        ap_idle => grp_torque_foc_fu_186_ap_idle,
        ap_ready => grp_torque_foc_fu_186_ap_ready,
        A_TDATA => A_TDATA_int_regslice,
        A_TVALID => A_TVALID_int_regslice,
        A_TREADY => grp_torque_foc_fu_186_A_TREADY,
        A_TKEEP => A_TKEEP_int_regslice,
        A_TSTRB => A_TSTRB_int_regslice,
        A_TLAST => A_TLAST_int_regslice,
        B_TDATA => grp_torque_foc_fu_186_B_TDATA,
        B_TVALID => grp_torque_foc_fu_186_B_TVALID,
        B_TREADY => grp_torque_foc_fu_186_B_TREADY,
        B_TKEEP => grp_torque_foc_fu_186_B_TKEEP,
        B_TSTRB => grp_torque_foc_fu_186_B_TSTRB,
        B_TLAST => grp_torque_foc_fu_186_B_TLAST,
        C_TDATA => grp_torque_foc_fu_186_C_TDATA,
        C_TVALID => grp_torque_foc_fu_186_C_TVALID,
        C_TREADY => grp_torque_foc_fu_186_C_TREADY,
        C_TKEEP => grp_torque_foc_fu_186_C_TKEEP,
        C_TSTRB => grp_torque_foc_fu_186_C_TSTRB,
        C_TLAST => grp_torque_foc_fu_186_C_TLAST,
        control_address0 => grp_torque_foc_fu_186_control_address0,
        control_ce0 => grp_torque_foc_fu_186_control_ce0,
        control_q0 => control_q0,
        logger_address0 => grp_torque_foc_fu_186_logger_address0,
        logger_ce0 => grp_torque_foc_fu_186_logger_ce0,
        logger_we0 => grp_torque_foc_fu_186_logger_we0,
        logger_d0 => grp_torque_foc_fu_186_logger_d0,
        velocity_accum_i => velocity_accum,
        velocity_accum_o => grp_torque_foc_fu_186_velocity_accum_o,
        velocity_accum_o_ap_vld => grp_torque_foc_fu_186_velocity_accum_o_ap_vld,
        buffer_velocity_address0 => grp_torque_foc_fu_186_buffer_velocity_address0,
        buffer_velocity_ce0 => grp_torque_foc_fu_186_buffer_velocity_ce0,
        buffer_velocity_we0 => grp_torque_foc_fu_186_buffer_velocity_we0,
        buffer_velocity_d0 => grp_torque_foc_fu_186_buffer_velocity_d0,
        buffer_velocity_q0 => buffer_velocity_q0,
        Y1a_prev_i => Y1a_prev,
        Y1a_prev_o => grp_torque_foc_fu_186_Y1a_prev_o,
        Y1a_prev_o_ap_vld => grp_torque_foc_fu_186_Y1a_prev_o_ap_vld,
        Y1b_prev_i => Y1b_prev,
        Y1b_prev_o => grp_torque_foc_fu_186_Y1b_prev_o,
        Y1b_prev_o_ap_vld => grp_torque_foc_fu_186_Y1b_prev_o_ap_vld,
        Y2a_prev_i => Y2a_prev,
        Y2a_prev_o => grp_torque_foc_fu_186_Y2a_prev_o,
        Y2a_prev_o_ap_vld => grp_torque_foc_fu_186_Y2a_prev_o_ap_vld,
        Y2b_prev_i => Y2b_prev,
        Y2b_prev_o => grp_torque_foc_fu_186_Y2b_prev_o,
        Y2b_prev_o_ap_vld => grp_torque_foc_fu_186_Y2b_prev_o_ap_vld,
        ierr_i => ierr,
        ierr_o => grp_torque_foc_fu_186_ierr_o,
        ierr_o_ap_vld => grp_torque_foc_fu_186_ierr_o_ap_vld,
        grp_PI_control_float_s_fu_498_p_din1 => grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din1,
        grp_PI_control_float_s_fu_498_p_din2 => grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din2,
        grp_PI_control_float_s_fu_498_p_din3 => grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din3,
        grp_PI_control_float_s_fu_498_p_din4 => grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din4,
        grp_PI_control_float_s_fu_498_p_din5 => grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din5,
        grp_PI_control_float_s_fu_498_p_din5_o => grp_PI_control_float_s_fu_498_ierr_o,
        grp_PI_control_float_s_fu_498_p_din5_o_ap_vld => grp_PI_control_float_s_fu_498_ierr_o_ap_vld,
        grp_PI_control_float_s_fu_498_p_dout0 => grp_PI_control_float_s_fu_498_ap_return,
        grp_PI_control_float_s_fu_498_p_start => grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_start,
        grp_PI_control_float_s_fu_498_p_ready => grp_PI_control_float_s_fu_498_ap_ready,
        grp_PI_control_float_s_fu_498_p_done => grp_PI_control_float_s_fu_498_ap_done,
        grp_PI_control_float_s_fu_498_p_idle => grp_PI_control_float_s_fu_498_ap_idle,
        grp_SVPWM_float_s_fu_506_p_din1 => grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din1,
        grp_SVPWM_float_s_fu_506_p_din2 => grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din2,
        grp_SVPWM_float_s_fu_506_p_din3 => grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din3,
        grp_SVPWM_float_s_fu_506_p_dout0_0 => grp_SVPWM_float_s_fu_506_ap_return_0,
        grp_SVPWM_float_s_fu_506_p_dout0_1 => grp_SVPWM_float_s_fu_506_ap_return_1,
        grp_SVPWM_float_s_fu_506_p_dout0_2 => grp_SVPWM_float_s_fu_506_ap_return_2,
        grp_SVPWM_float_s_fu_506_p_start => grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_start,
        grp_SVPWM_float_s_fu_506_p_ready => grp_SVPWM_float_s_fu_506_ap_ready,
        grp_SVPWM_float_s_fu_506_p_done => grp_SVPWM_float_s_fu_506_ap_done,
        grp_SVPWM_float_s_fu_506_p_idle => grp_SVPWM_float_s_fu_506_ap_idle,
        grp_clarke_direct_float_s_fu_512_p_din1 => grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din1,
        grp_clarke_direct_float_s_fu_512_p_din2 => grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din2,
        grp_clarke_direct_float_s_fu_512_p_dout0_0 => grp_clarke_direct_float_s_fu_512_ap_return_0,
        grp_clarke_direct_float_s_fu_512_p_dout0_1 => grp_clarke_direct_float_s_fu_512_ap_return_1,
        grp_clarke_direct_float_s_fu_512_p_start => grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_start,
        grp_clarke_direct_float_s_fu_512_p_ready => grp_clarke_direct_float_s_fu_512_ap_ready,
        grp_clarke_direct_float_s_fu_512_p_done => grp_clarke_direct_float_s_fu_512_ap_done,
        grp_clarke_direct_float_s_fu_512_p_idle => grp_clarke_direct_float_s_fu_512_ap_idle,
        grp_clarke_inverse_float_s_fu_517_p_din1 => grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din1,
        grp_clarke_inverse_float_s_fu_517_p_din2 => grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din2,
        grp_clarke_inverse_float_s_fu_517_p_dout0_0 => grp_clarke_inverse_float_s_fu_517_ap_return_0,
        grp_clarke_inverse_float_s_fu_517_p_dout0_1 => grp_clarke_inverse_float_s_fu_517_ap_return_1,
        grp_clarke_inverse_float_s_fu_517_p_dout0_2 => grp_clarke_inverse_float_s_fu_517_ap_return_2,
        grp_clarke_inverse_float_s_fu_517_p_start => grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_start,
        grp_clarke_inverse_float_s_fu_517_p_ready => grp_clarke_inverse_float_s_fu_517_ap_ready,
        grp_clarke_inverse_float_s_fu_517_p_done => grp_clarke_inverse_float_s_fu_517_ap_done,
        grp_clarke_inverse_float_s_fu_517_p_idle => grp_clarke_inverse_float_s_fu_517_ap_idle,
        grp_fu_522_p_din0 => grp_torque_foc_fu_186_grp_fu_522_p_din0,
        grp_fu_522_p_din1 => grp_torque_foc_fu_186_grp_fu_522_p_din1,
        grp_fu_522_p_opcode => grp_torque_foc_fu_186_grp_fu_522_p_opcode,
        grp_fu_522_p_dout0 => grp_fu_522_p2,
        grp_fu_522_p_ce => grp_torque_foc_fu_186_grp_fu_522_p_ce,
        grp_fu_526_p_din0 => grp_torque_foc_fu_186_grp_fu_526_p_din0,
        grp_fu_526_p_dout0 => grp_fu_526_p1,
        grp_fu_526_p_ce => grp_torque_foc_fu_186_grp_fu_526_p_ce,
        grp_fu_529_p_din0 => grp_torque_foc_fu_186_grp_fu_529_p_din0,
        grp_fu_529_p_dout0 => grp_fu_529_p1,
        grp_fu_529_p_ce => grp_torque_foc_fu_186_grp_fu_529_p_ce,
        grp_fu_532_p_din0 => grp_torque_foc_fu_186_grp_fu_532_p_din0,
        grp_fu_532_p_dout0 => grp_fu_532_p1,
        grp_fu_532_p_ce => grp_torque_foc_fu_186_grp_fu_532_p_ce,
        grp_fu_535_p_din0 => grp_torque_foc_fu_186_grp_fu_535_p_din0,
        grp_fu_535_p_dout0 => grp_fu_535_p1,
        grp_fu_535_p_ce => grp_torque_foc_fu_186_grp_fu_535_p_ce,
        grp_park_direct_float_s_fu_538_p_din1 => grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din1,
        grp_park_direct_float_s_fu_538_p_din2 => grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din2,
        grp_park_direct_float_s_fu_538_p_din3 => grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din3,
        grp_park_direct_float_s_fu_538_p_dout0_0 => grp_park_direct_float_s_fu_538_ap_return_0,
        grp_park_direct_float_s_fu_538_p_dout0_1 => grp_park_direct_float_s_fu_538_ap_return_1,
        grp_park_direct_float_s_fu_538_p_start => grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_start,
        grp_park_direct_float_s_fu_538_p_ready => grp_park_direct_float_s_fu_538_ap_ready,
        grp_park_direct_float_s_fu_538_p_done => grp_park_direct_float_s_fu_538_ap_done,
        grp_park_direct_float_s_fu_538_p_idle => grp_park_direct_float_s_fu_538_ap_idle,
        grp_park_inverse_float_s_fu_546_p_din1 => grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din1,
        grp_park_inverse_float_s_fu_546_p_din2 => grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din2,
        grp_park_inverse_float_s_fu_546_p_din3 => grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din3,
        grp_park_inverse_float_s_fu_546_p_dout0_0 => grp_park_inverse_float_s_fu_546_ap_return_0,
        grp_park_inverse_float_s_fu_546_p_dout0_1 => grp_park_inverse_float_s_fu_546_ap_return_1,
        grp_park_inverse_float_s_fu_546_p_start => grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_start,
        grp_park_inverse_float_s_fu_546_p_ready => grp_park_inverse_float_s_fu_546_ap_ready,
        grp_park_inverse_float_s_fu_546_p_done => grp_park_inverse_float_s_fu_546_ap_done,
        grp_park_inverse_float_s_fu_546_p_idle => grp_park_inverse_float_s_fu_546_ap_idle);

    grp_foc_fu_240 : component foc_frontend_foc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_foc_fu_240_ap_start,
        ap_done => grp_foc_fu_240_ap_done,
        ap_idle => grp_foc_fu_240_ap_idle,
        ap_ready => grp_foc_fu_240_ap_ready,
        A_TDATA => A_TDATA_int_regslice,
        A_TVALID => A_TVALID_int_regslice,
        A_TREADY => grp_foc_fu_240_A_TREADY,
        A_TKEEP => A_TKEEP_int_regslice,
        A_TSTRB => A_TSTRB_int_regslice,
        A_TLAST => A_TLAST_int_regslice,
        B_TDATA => grp_foc_fu_240_B_TDATA,
        B_TVALID => grp_foc_fu_240_B_TVALID,
        B_TREADY => grp_foc_fu_240_B_TREADY,
        B_TKEEP => grp_foc_fu_240_B_TKEEP,
        B_TSTRB => grp_foc_fu_240_B_TSTRB,
        B_TLAST => grp_foc_fu_240_B_TLAST,
        C_TDATA => grp_foc_fu_240_C_TDATA,
        C_TVALID => grp_foc_fu_240_C_TVALID,
        C_TREADY => grp_foc_fu_240_C_TREADY,
        C_TKEEP => grp_foc_fu_240_C_TKEEP,
        C_TSTRB => grp_foc_fu_240_C_TSTRB,
        C_TLAST => grp_foc_fu_240_C_TLAST,
        control_address0 => grp_foc_fu_240_control_address0,
        control_ce0 => grp_foc_fu_240_control_ce0,
        control_q0 => control_q0,
        logger_address0 => grp_foc_fu_240_logger_address0,
        logger_ce0 => grp_foc_fu_240_logger_ce0,
        logger_we0 => grp_foc_fu_240_logger_we0,
        logger_d0 => grp_foc_fu_240_logger_d0,
        velocity_accum_i => velocity_accum,
        velocity_accum_o => grp_foc_fu_240_velocity_accum_o,
        velocity_accum_o_ap_vld => grp_foc_fu_240_velocity_accum_o_ap_vld,
        buffer_velocity_address0 => grp_foc_fu_240_buffer_velocity_address0,
        buffer_velocity_ce0 => grp_foc_fu_240_buffer_velocity_ce0,
        buffer_velocity_we0 => grp_foc_fu_240_buffer_velocity_we0,
        buffer_velocity_d0 => grp_foc_fu_240_buffer_velocity_d0,
        buffer_velocity_q0 => buffer_velocity_q0,
        Y1a_prev_i => Y1a_prev,
        Y1a_prev_o => grp_foc_fu_240_Y1a_prev_o,
        Y1a_prev_o_ap_vld => grp_foc_fu_240_Y1a_prev_o_ap_vld,
        Y1b_prev_i => Y1b_prev,
        Y1b_prev_o => grp_foc_fu_240_Y1b_prev_o,
        Y1b_prev_o_ap_vld => grp_foc_fu_240_Y1b_prev_o_ap_vld,
        Y2a_prev_i => Y2a_prev,
        Y2a_prev_o => grp_foc_fu_240_Y2a_prev_o,
        Y2a_prev_o_ap_vld => grp_foc_fu_240_Y2a_prev_o_ap_vld,
        Y2b_prev_i => Y2b_prev,
        Y2b_prev_o => grp_foc_fu_240_Y2b_prev_o,
        Y2b_prev_o_ap_vld => grp_foc_fu_240_Y2b_prev_o_ap_vld,
        ierr_i => ierr,
        ierr_o => grp_foc_fu_240_ierr_o,
        ierr_o_ap_vld => grp_foc_fu_240_ierr_o_ap_vld,
        grp_PI_control_float_s_fu_498_p_din1 => grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din1,
        grp_PI_control_float_s_fu_498_p_din2 => grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din2,
        grp_PI_control_float_s_fu_498_p_din3 => grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din3,
        grp_PI_control_float_s_fu_498_p_din4 => grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din4,
        grp_PI_control_float_s_fu_498_p_din5 => grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din5,
        grp_PI_control_float_s_fu_498_p_din5_o => grp_PI_control_float_s_fu_498_ierr_o,
        grp_PI_control_float_s_fu_498_p_din5_o_ap_vld => grp_PI_control_float_s_fu_498_ierr_o_ap_vld,
        grp_PI_control_float_s_fu_498_p_dout0 => grp_PI_control_float_s_fu_498_ap_return,
        grp_PI_control_float_s_fu_498_p_start => grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_start,
        grp_PI_control_float_s_fu_498_p_ready => grp_PI_control_float_s_fu_498_ap_ready,
        grp_PI_control_float_s_fu_498_p_done => grp_PI_control_float_s_fu_498_ap_done,
        grp_PI_control_float_s_fu_498_p_idle => grp_PI_control_float_s_fu_498_ap_idle,
        grp_SVPWM_float_s_fu_506_p_din1 => grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din1,
        grp_SVPWM_float_s_fu_506_p_din2 => grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din2,
        grp_SVPWM_float_s_fu_506_p_din3 => grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din3,
        grp_SVPWM_float_s_fu_506_p_dout0_0 => grp_SVPWM_float_s_fu_506_ap_return_0,
        grp_SVPWM_float_s_fu_506_p_dout0_1 => grp_SVPWM_float_s_fu_506_ap_return_1,
        grp_SVPWM_float_s_fu_506_p_dout0_2 => grp_SVPWM_float_s_fu_506_ap_return_2,
        grp_SVPWM_float_s_fu_506_p_start => grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_start,
        grp_SVPWM_float_s_fu_506_p_ready => grp_SVPWM_float_s_fu_506_ap_ready,
        grp_SVPWM_float_s_fu_506_p_done => grp_SVPWM_float_s_fu_506_ap_done,
        grp_SVPWM_float_s_fu_506_p_idle => grp_SVPWM_float_s_fu_506_ap_idle,
        grp_clarke_direct_float_s_fu_512_p_din1 => grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din1,
        grp_clarke_direct_float_s_fu_512_p_din2 => grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din2,
        grp_clarke_direct_float_s_fu_512_p_dout0_0 => grp_clarke_direct_float_s_fu_512_ap_return_0,
        grp_clarke_direct_float_s_fu_512_p_dout0_1 => grp_clarke_direct_float_s_fu_512_ap_return_1,
        grp_clarke_direct_float_s_fu_512_p_start => grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_start,
        grp_clarke_direct_float_s_fu_512_p_ready => grp_clarke_direct_float_s_fu_512_ap_ready,
        grp_clarke_direct_float_s_fu_512_p_done => grp_clarke_direct_float_s_fu_512_ap_done,
        grp_clarke_direct_float_s_fu_512_p_idle => grp_clarke_direct_float_s_fu_512_ap_idle,
        grp_clarke_inverse_float_s_fu_517_p_din1 => grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din1,
        grp_clarke_inverse_float_s_fu_517_p_din2 => grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din2,
        grp_clarke_inverse_float_s_fu_517_p_dout0_0 => grp_clarke_inverse_float_s_fu_517_ap_return_0,
        grp_clarke_inverse_float_s_fu_517_p_dout0_1 => grp_clarke_inverse_float_s_fu_517_ap_return_1,
        grp_clarke_inverse_float_s_fu_517_p_dout0_2 => grp_clarke_inverse_float_s_fu_517_ap_return_2,
        grp_clarke_inverse_float_s_fu_517_p_start => grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_start,
        grp_clarke_inverse_float_s_fu_517_p_ready => grp_clarke_inverse_float_s_fu_517_ap_ready,
        grp_clarke_inverse_float_s_fu_517_p_done => grp_clarke_inverse_float_s_fu_517_ap_done,
        grp_clarke_inverse_float_s_fu_517_p_idle => grp_clarke_inverse_float_s_fu_517_ap_idle,
        grp_fu_522_p_din0 => grp_foc_fu_240_grp_fu_522_p_din0,
        grp_fu_522_p_din1 => grp_foc_fu_240_grp_fu_522_p_din1,
        grp_fu_522_p_opcode => grp_foc_fu_240_grp_fu_522_p_opcode,
        grp_fu_522_p_dout0 => grp_fu_522_p2,
        grp_fu_522_p_ce => grp_foc_fu_240_grp_fu_522_p_ce,
        grp_fu_526_p_din0 => grp_foc_fu_240_grp_fu_526_p_din0,
        grp_fu_526_p_dout0 => grp_fu_526_p1,
        grp_fu_526_p_ce => grp_foc_fu_240_grp_fu_526_p_ce,
        grp_fu_529_p_din0 => grp_foc_fu_240_grp_fu_529_p_din0,
        grp_fu_529_p_dout0 => grp_fu_529_p1,
        grp_fu_529_p_ce => grp_foc_fu_240_grp_fu_529_p_ce,
        grp_fu_532_p_din0 => grp_foc_fu_240_grp_fu_532_p_din0,
        grp_fu_532_p_dout0 => grp_fu_532_p1,
        grp_fu_532_p_ce => grp_foc_fu_240_grp_fu_532_p_ce,
        grp_fu_535_p_din0 => grp_foc_fu_240_grp_fu_535_p_din0,
        grp_fu_535_p_dout0 => grp_fu_535_p1,
        grp_fu_535_p_ce => grp_foc_fu_240_grp_fu_535_p_ce,
        grp_park_direct_float_s_fu_538_p_din1 => grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din1,
        grp_park_direct_float_s_fu_538_p_din2 => grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din2,
        grp_park_direct_float_s_fu_538_p_din3 => grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din3,
        grp_park_direct_float_s_fu_538_p_dout0_0 => grp_park_direct_float_s_fu_538_ap_return_0,
        grp_park_direct_float_s_fu_538_p_dout0_1 => grp_park_direct_float_s_fu_538_ap_return_1,
        grp_park_direct_float_s_fu_538_p_start => grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_start,
        grp_park_direct_float_s_fu_538_p_ready => grp_park_direct_float_s_fu_538_ap_ready,
        grp_park_direct_float_s_fu_538_p_done => grp_park_direct_float_s_fu_538_ap_done,
        grp_park_direct_float_s_fu_538_p_idle => grp_park_direct_float_s_fu_538_ap_idle,
        grp_park_inverse_float_s_fu_546_p_din1 => grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din1,
        grp_park_inverse_float_s_fu_546_p_din2 => grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din2,
        grp_park_inverse_float_s_fu_546_p_din3 => grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din3,
        grp_park_inverse_float_s_fu_546_p_dout0_0 => grp_park_inverse_float_s_fu_546_ap_return_0,
        grp_park_inverse_float_s_fu_546_p_dout0_1 => grp_park_inverse_float_s_fu_546_ap_return_1,
        grp_park_inverse_float_s_fu_546_p_start => grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_start,
        grp_park_inverse_float_s_fu_546_p_ready => grp_park_inverse_float_s_fu_546_ap_ready,
        grp_park_inverse_float_s_fu_546_p_done => grp_park_inverse_float_s_fu_546_ap_done,
        grp_park_inverse_float_s_fu_546_p_idle => grp_park_inverse_float_s_fu_546_ap_idle);

    grp_PI_control_float_s_fu_498 : component foc_frontend_PI_control_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_PI_control_float_s_fu_498_ap_start,
        ap_done => grp_PI_control_float_s_fu_498_ap_done,
        ap_idle => grp_PI_control_float_s_fu_498_ap_idle,
        ap_ready => grp_PI_control_float_s_fu_498_ap_ready,
        ref => grp_PI_control_float_s_fu_498_ref,
        val_r => grp_PI_control_float_s_fu_498_val_r,
        KP => grp_PI_control_float_s_fu_498_KP,
        KI => grp_PI_control_float_s_fu_498_KI,
        ierr_i => grp_PI_control_float_s_fu_498_ierr_i,
        ierr_o => grp_PI_control_float_s_fu_498_ierr_o,
        ierr_o_ap_vld => grp_PI_control_float_s_fu_498_ierr_o_ap_vld,
        ap_return => grp_PI_control_float_s_fu_498_ap_return);

    grp_SVPWM_float_s_fu_506 : component foc_frontend_SVPWM_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_SVPWM_float_s_fu_506_ap_start,
        ap_done => grp_SVPWM_float_s_fu_506_ap_done,
        ap_idle => grp_SVPWM_float_s_fu_506_ap_idle,
        ap_ready => grp_SVPWM_float_s_fu_506_ap_ready,
        Va => grp_SVPWM_float_s_fu_506_Va,
        Vb => grp_SVPWM_float_s_fu_506_Vb,
        Vc => grp_SVPWM_float_s_fu_506_Vc,
        ap_return_0 => grp_SVPWM_float_s_fu_506_ap_return_0,
        ap_return_1 => grp_SVPWM_float_s_fu_506_ap_return_1,
        ap_return_2 => grp_SVPWM_float_s_fu_506_ap_return_2);

    grp_clarke_direct_float_s_fu_512 : component foc_frontend_clarke_direct_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_clarke_direct_float_s_fu_512_ap_start,
        ap_done => grp_clarke_direct_float_s_fu_512_ap_done,
        ap_idle => grp_clarke_direct_float_s_fu_512_ap_idle,
        ap_ready => grp_clarke_direct_float_s_fu_512_ap_ready,
        Ia => grp_clarke_direct_float_s_fu_512_Ia,
        Ib => grp_clarke_direct_float_s_fu_512_Ib,
        ap_return_0 => grp_clarke_direct_float_s_fu_512_ap_return_0,
        ap_return_1 => grp_clarke_direct_float_s_fu_512_ap_return_1);

    grp_clarke_inverse_float_s_fu_517 : component foc_frontend_clarke_inverse_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_clarke_inverse_float_s_fu_517_ap_start,
        ap_done => grp_clarke_inverse_float_s_fu_517_ap_done,
        ap_idle => grp_clarke_inverse_float_s_fu_517_ap_idle,
        ap_ready => grp_clarke_inverse_float_s_fu_517_ap_ready,
        Valpha => grp_clarke_inverse_float_s_fu_517_Valpha,
        Vbeta => grp_clarke_inverse_float_s_fu_517_Vbeta,
        ap_return_0 => grp_clarke_inverse_float_s_fu_517_ap_return_0,
        ap_return_1 => grp_clarke_inverse_float_s_fu_517_ap_return_1,
        ap_return_2 => grp_clarke_inverse_float_s_fu_517_ap_return_2);

    grp_park_direct_float_s_fu_538 : component foc_frontend_park_direct_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_park_direct_float_s_fu_538_ap_start,
        ap_done => grp_park_direct_float_s_fu_538_ap_done,
        ap_idle => grp_park_direct_float_s_fu_538_ap_idle,
        ap_ready => grp_park_direct_float_s_fu_538_ap_ready,
        Ialpha => grp_park_direct_float_s_fu_538_Ialpha,
        Ibeta => grp_park_direct_float_s_fu_538_Ibeta,
        angle => grp_park_direct_float_s_fu_538_angle,
        ap_return_0 => grp_park_direct_float_s_fu_538_ap_return_0,
        ap_return_1 => grp_park_direct_float_s_fu_538_ap_return_1);

    grp_park_inverse_float_s_fu_546 : component foc_frontend_park_inverse_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_park_inverse_float_s_fu_546_ap_start,
        ap_done => grp_park_inverse_float_s_fu_546_ap_done,
        ap_idle => grp_park_inverse_float_s_fu_546_ap_idle,
        ap_ready => grp_park_inverse_float_s_fu_546_ap_ready,
        Vd => grp_park_inverse_float_s_fu_546_Vd,
        Vq => grp_park_inverse_float_s_fu_546_Vq,
        angle => grp_park_inverse_float_s_fu_546_angle,
        ap_return_0 => grp_park_inverse_float_s_fu_546_ap_return_0,
        ap_return_1 => grp_park_inverse_float_s_fu_546_ap_return_1);

    control_r_s_axi_U : component foc_frontend_control_r_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_R_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_R_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_r_AWVALID,
        AWREADY => s_axi_control_r_AWREADY,
        AWADDR => s_axi_control_r_AWADDR,
        WVALID => s_axi_control_r_WVALID,
        WREADY => s_axi_control_r_WREADY,
        WDATA => s_axi_control_r_WDATA,
        WSTRB => s_axi_control_r_WSTRB,
        ARVALID => s_axi_control_r_ARVALID,
        ARREADY => s_axi_control_r_ARREADY,
        ARADDR => s_axi_control_r_ARADDR,
        RVALID => s_axi_control_r_RVALID,
        RREADY => s_axi_control_r_RREADY,
        RDATA => s_axi_control_r_RDATA,
        RRESP => s_axi_control_r_RRESP,
        BVALID => s_axi_control_r_BVALID,
        BREADY => s_axi_control_r_BREADY,
        BRESP => s_axi_control_r_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        control_address0 => control_address0,
        control_ce0 => control_ce0,
        control_q0 => control_q0,
        logger_address0 => logger_address0,
        logger_ce0 => logger_ce0,
        logger_we0 => logger_we0,
        logger_d0 => logger_d0,
        ap_local_deadlock => ap_local_deadlock);

    fcmp_32ns_32ns_1_2_no_dsp_1_U168 : component foc_frontend_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_294_p0,
        din1 => grp_fu_294_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_1,
        dout => grp_fu_294_p2);

    fsub_32ns_32ns_32_4_full_dsp_1_U169 : component foc_frontend_fsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_522_p0,
        din1 => grp_fu_522_p1,
        ce => grp_fu_522_ce,
        dout => grp_fu_522_p2);

    sitofp_32s_32_4_no_dsp_1_U170 : component foc_frontend_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_526_p0,
        ce => grp_fu_526_ce,
        dout => grp_fu_526_p1);

    sitofp_32s_32_4_no_dsp_1_U171 : component foc_frontend_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_529_p0,
        ce => grp_fu_529_ce,
        dout => grp_fu_529_p1);

    sitofp_32s_32_4_no_dsp_1_U172 : component foc_frontend_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_532_p0,
        ce => grp_fu_532_ce,
        dout => grp_fu_532_p1);

    sitofp_32s_32_4_no_dsp_1_U173 : component foc_frontend_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_535_p0,
        ce => grp_fu_535_ce,
        dout => grp_fu_535_p1);

    regslice_both_A_V_data_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 80)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TDATA,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_data_V_U_ack_in,
        data_out => A_TDATA_int_regslice,
        vld_out => A_TVALID_int_regslice,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_data_V_U_apdone_blk);

    regslice_both_A_V_keep_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 10)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TKEEP,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_keep_V_U_ack_in,
        data_out => A_TKEEP_int_regslice,
        vld_out => regslice_both_A_V_keep_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_keep_V_U_apdone_blk);

    regslice_both_A_V_strb_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 10)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TSTRB,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_strb_V_U_ack_in,
        data_out => A_TSTRB_int_regslice,
        vld_out => regslice_both_A_V_strb_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_strb_V_U_apdone_blk);

    regslice_both_A_V_last_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TLAST,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_last_V_U_ack_in,
        data_out => A_TLAST_int_regslice,
        vld_out => regslice_both_A_V_last_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_last_V_U_apdone_blk);

    regslice_both_B_V_data_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => B_TDATA_int_regslice,
        vld_in => B_TVALID_int_regslice,
        ack_in => B_TREADY_int_regslice,
        data_out => B_TDATA,
        vld_out => regslice_both_B_V_data_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_data_V_U_apdone_blk);

    regslice_both_B_V_keep_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => B_TKEEP_int_regslice,
        vld_in => B_TVALID_int_regslice,
        ack_in => regslice_both_B_V_keep_V_U_ack_in_dummy,
        data_out => B_TKEEP,
        vld_out => regslice_both_B_V_keep_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_keep_V_U_apdone_blk);

    regslice_both_B_V_strb_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => B_TSTRB_int_regslice,
        vld_in => B_TVALID_int_regslice,
        ack_in => regslice_both_B_V_strb_V_U_ack_in_dummy,
        data_out => B_TSTRB,
        vld_out => regslice_both_B_V_strb_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_strb_V_U_apdone_blk);

    regslice_both_B_V_last_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => B_TLAST_int_regslice,
        vld_in => B_TVALID_int_regslice,
        ack_in => regslice_both_B_V_last_V_U_ack_in_dummy,
        data_out => B_TLAST,
        vld_out => regslice_both_B_V_last_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_last_V_U_apdone_blk);

    regslice_both_C_V_data_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => C_TDATA_int_regslice,
        vld_in => C_TVALID_int_regslice,
        ack_in => C_TREADY_int_regslice,
        data_out => C_TDATA,
        vld_out => regslice_both_C_V_data_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_data_V_U_apdone_blk);

    regslice_both_C_V_keep_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => C_TKEEP_int_regslice,
        vld_in => C_TVALID_int_regslice,
        ack_in => regslice_both_C_V_keep_V_U_ack_in_dummy,
        data_out => C_TKEEP,
        vld_out => regslice_both_C_V_keep_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_keep_V_U_apdone_blk);

    regslice_both_C_V_strb_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => C_TSTRB_int_regslice,
        vld_in => C_TVALID_int_regslice,
        ack_in => regslice_both_C_V_strb_V_U_ack_in_dummy,
        data_out => C_TSTRB,
        vld_out => regslice_both_C_V_strb_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_strb_V_U_apdone_blk);

    regslice_both_C_V_last_V_U : component foc_frontend_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => C_TLAST_int_regslice,
        vld_in => C_TVALID_int_regslice,
        ack_in => regslice_both_C_V_last_V_U_ack_in_dummy,
        data_out => C_TLAST,
        vld_out => regslice_both_C_V_last_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_calibration_fu_146_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_calibration_fu_146_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln13_fu_337_p2))) then 
                    grp_calibration_fu_146_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_calibration_fu_146_ap_ready = ap_const_logic_1)) then 
                    grp_calibration_fu_146_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_foc_fu_240_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_foc_fu_240_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_foc_fu_240_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_foc_fu_240_ap_ready = ap_const_logic_1)) then 
                    grp_foc_fu_240_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_manual_control_fu_158_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_manual_control_fu_158_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_manual_control_fu_158_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_manual_control_fu_158_ap_ready = ap_const_logic_1)) then 
                    grp_manual_control_fu_158_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_torque_foc_fu_186_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_torque_foc_fu_186_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_torque_foc_fu_186_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_torque_foc_fu_186_ap_ready = ap_const_logic_1)) then 
                    grp_torque_foc_fu_186_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    Y1a_prev_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_Y1a_prev_o_ap_vld = ap_const_logic_1))) then 
                Y1a_prev <= grp_foc_fu_240_Y1a_prev_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_Y1a_prev_o_ap_vld = ap_const_logic_1))) then 
                Y1a_prev <= grp_torque_foc_fu_186_Y1a_prev_o;
            end if; 
        end if;
    end process;

    Y1b_prev_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_Y1b_prev_o_ap_vld = ap_const_logic_1))) then 
                Y1b_prev <= grp_foc_fu_240_Y1b_prev_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_Y1b_prev_o_ap_vld = ap_const_logic_1))) then 
                Y1b_prev <= grp_torque_foc_fu_186_Y1b_prev_o;
            end if; 
        end if;
    end process;

    Y2a_prev_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_Y2a_prev_o_ap_vld = ap_const_logic_1))) then 
                Y2a_prev <= grp_foc_fu_240_Y2a_prev_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_Y2a_prev_o_ap_vld = ap_const_logic_1))) then 
                Y2a_prev <= grp_torque_foc_fu_186_Y2a_prev_o;
            end if; 
        end if;
    end process;

    Y2b_prev_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_Y2b_prev_o_ap_vld = ap_const_logic_1))) then 
                Y2b_prev <= grp_foc_fu_240_Y2b_prev_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_Y2b_prev_o_ap_vld = ap_const_logic_1))) then 
                Y2b_prev <= grp_torque_foc_fu_186_Y2b_prev_o;
            end if; 
        end if;
    end process;

    ierr_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_ierr_o_ap_vld = ap_const_logic_1))) then 
                ierr <= grp_foc_fu_240_ierr_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_ierr_o_ap_vld = ap_const_logic_1))) then 
                ierr <= grp_torque_foc_fu_186_ierr_o;
            end if; 
        end if;
    end process;

    velocity_accum_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_velocity_accum_o_ap_vld = ap_const_logic_1))) then 
                velocity_accum <= grp_foc_fu_240_velocity_accum_o;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_velocity_accum_o_ap_vld = ap_const_logic_1))) then 
                velocity_accum <= grp_torque_foc_fu_186_velocity_accum_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                and_ln18_reg_456 <= and_ln18_fu_362_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                and_ln20_reg_475 <= and_ln20_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                and_ln22_reg_494 <= and_ln22_fu_412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln13_1_reg_433 <= icmp_ln13_1_fu_327_p2;
                icmp_ln13_reg_428 <= grp_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln18_1_reg_451 <= icmp_ln18_1_fu_352_p2;
                icmp_ln18_reg_446 <= grp_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                icmp_ln20_1_reg_470 <= icmp_ln20_1_fu_377_p2;
                icmp_ln20_reg_465 <= grp_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                icmp_ln22_1_reg_489 <= icmp_ln22_1_fu_402_p2;
                icmp_ln22_reg_484 <= grp_fu_312_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state17, and_ln18_fu_362_p2, ap_CS_fsm_state5, and_ln20_fu_387_p2, ap_CS_fsm_state7, and_ln22_fu_412_p2, ap_CS_fsm_state9, grp_calibration_fu_146_ap_done, grp_manual_control_fu_158_ap_done, grp_foc_fu_240_ap_done, ap_CS_fsm_state3, and_ln13_fu_337_p2, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_block_state11_on_subcall_done, regslice_both_B_V_data_V_U_apdone_blk, regslice_both_C_V_data_V_U_apdone_blk, ap_CS_fsm_state18, A_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_1 = and_ln13_fu_337_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_lv1_1 = and_ln18_fu_362_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_lv1_1 = and_ln20_fu_387_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_lv1_1 = and_ln22_fu_412_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_manual_control_fu_158_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if ((not(((ap_const_logic_0 = A_TVALID_int_regslice) or (grp_calibration_fu_146_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if ((not(((regslice_both_C_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state17, A_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            A_TDATA_blk_n <= A_TVALID_int_regslice;
        else 
            A_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    A_TREADY <= regslice_both_A_V_data_V_U_ack_in;

    A_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state17, and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_calibration_fu_146_ap_done, grp_manual_control_fu_158_A_TREADY, grp_torque_foc_fu_186_A_TREADY, grp_foc_fu_240_A_TREADY, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16, A_TVALID_int_regslice)
    begin
        if ((not(((ap_const_logic_0 = A_TVALID_int_regslice) or (grp_calibration_fu_146_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            A_TREADY_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            A_TREADY_int_regslice <= grp_foc_fu_240_A_TREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            A_TREADY_int_regslice <= grp_torque_foc_fu_186_A_TREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            A_TREADY_int_regslice <= grp_manual_control_fu_158_A_TREADY;
        else 
            A_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    B_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_state17, and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_calibration_fu_146_B_TDATA, grp_calibration_fu_146_B_TVALID, grp_manual_control_fu_158_B_TDATA, grp_manual_control_fu_158_B_TVALID, grp_torque_foc_fu_186_B_TDATA, grp_torque_foc_fu_186_B_TVALID, grp_foc_fu_240_B_TDATA, grp_foc_fu_240_B_TVALID, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_B_TVALID = ap_const_logic_1))) then 
            B_TDATA_int_regslice <= grp_foc_fu_240_B_TDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_B_TVALID = ap_const_logic_1))) then 
            B_TDATA_int_regslice <= grp_torque_foc_fu_186_B_TDATA;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)))) then 
            B_TDATA_int_regslice <= grp_manual_control_fu_158_B_TDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_calibration_fu_146_B_TVALID = ap_const_logic_1))) then 
            B_TDATA_int_regslice <= grp_calibration_fu_146_B_TDATA;
        else 
            B_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    B_TKEEP_int_regslice_assign_proc : process(ap_CS_fsm_state17, and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_calibration_fu_146_B_TVALID, grp_calibration_fu_146_B_TKEEP, grp_manual_control_fu_158_B_TVALID, grp_manual_control_fu_158_B_TKEEP, grp_torque_foc_fu_186_B_TVALID, grp_torque_foc_fu_186_B_TKEEP, grp_foc_fu_240_B_TVALID, grp_foc_fu_240_B_TKEEP, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_B_TVALID = ap_const_logic_1))) then 
            B_TKEEP_int_regslice <= grp_foc_fu_240_B_TKEEP;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_B_TVALID = ap_const_logic_1))) then 
            B_TKEEP_int_regslice <= grp_torque_foc_fu_186_B_TKEEP;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)))) then 
            B_TKEEP_int_regslice <= grp_manual_control_fu_158_B_TKEEP;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_calibration_fu_146_B_TVALID = ap_const_logic_1))) then 
            B_TKEEP_int_regslice <= grp_calibration_fu_146_B_TKEEP;
        else 
            B_TKEEP_int_regslice <= "XXXXXXXX";
        end if; 
    end process;


    B_TLAST_int_regslice_assign_proc : process(ap_CS_fsm_state17, and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_calibration_fu_146_B_TVALID, grp_calibration_fu_146_B_TLAST, grp_manual_control_fu_158_B_TVALID, grp_manual_control_fu_158_B_TLAST, grp_torque_foc_fu_186_B_TVALID, grp_torque_foc_fu_186_B_TLAST, grp_foc_fu_240_B_TVALID, grp_foc_fu_240_B_TLAST, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_B_TVALID = ap_const_logic_1))) then 
            B_TLAST_int_regslice <= grp_foc_fu_240_B_TLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_B_TVALID = ap_const_logic_1))) then 
            B_TLAST_int_regslice <= grp_torque_foc_fu_186_B_TLAST;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)))) then 
            B_TLAST_int_regslice <= grp_manual_control_fu_158_B_TLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_calibration_fu_146_B_TVALID = ap_const_logic_1))) then 
            B_TLAST_int_regslice <= grp_calibration_fu_146_B_TLAST;
        else 
            B_TLAST_int_regslice <= "X";
        end if; 
    end process;


    B_TSTRB_int_regslice_assign_proc : process(ap_CS_fsm_state17, and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_calibration_fu_146_B_TVALID, grp_calibration_fu_146_B_TSTRB, grp_manual_control_fu_158_B_TVALID, grp_manual_control_fu_158_B_TSTRB, grp_torque_foc_fu_186_B_TVALID, grp_torque_foc_fu_186_B_TSTRB, grp_foc_fu_240_B_TVALID, grp_foc_fu_240_B_TSTRB, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_B_TVALID = ap_const_logic_1))) then 
            B_TSTRB_int_regslice <= grp_foc_fu_240_B_TSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_B_TVALID = ap_const_logic_1))) then 
            B_TSTRB_int_regslice <= grp_torque_foc_fu_186_B_TSTRB;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_manual_control_fu_158_B_TVALID = ap_const_logic_1)))) then 
            B_TSTRB_int_regslice <= grp_manual_control_fu_158_B_TSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_calibration_fu_146_B_TVALID = ap_const_logic_1))) then 
            B_TSTRB_int_regslice <= grp_calibration_fu_146_B_TSTRB;
        else 
            B_TSTRB_int_regslice <= "XXXXXXXX";
        end if; 
    end process;

    B_TVALID <= regslice_both_B_V_data_V_U_vld_out;

    B_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state17, and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_calibration_fu_146_B_TVALID, grp_manual_control_fu_158_B_TVALID, grp_torque_foc_fu_186_B_TVALID, grp_foc_fu_240_B_TVALID, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            B_TVALID_int_regslice <= grp_foc_fu_240_B_TVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            B_TVALID_int_regslice <= grp_torque_foc_fu_186_B_TVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            B_TVALID_int_regslice <= grp_manual_control_fu_158_B_TVALID;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            B_TVALID_int_regslice <= grp_calibration_fu_146_B_TVALID;
        else 
            B_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    C_TDATA_int_regslice_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_C_TDATA, grp_torque_foc_fu_186_C_TVALID, grp_foc_fu_240_C_TDATA, grp_foc_fu_240_C_TVALID, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_C_TVALID = ap_const_logic_1))) then 
            C_TDATA_int_regslice <= grp_foc_fu_240_C_TDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_C_TVALID = ap_const_logic_1))) then 
            C_TDATA_int_regslice <= grp_torque_foc_fu_186_C_TDATA;
        else 
            C_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    C_TKEEP_int_regslice_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_C_TVALID, grp_torque_foc_fu_186_C_TKEEP, grp_foc_fu_240_C_TVALID, grp_foc_fu_240_C_TKEEP, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_C_TVALID = ap_const_logic_1))) then 
            C_TKEEP_int_regslice <= grp_foc_fu_240_C_TKEEP;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_C_TVALID = ap_const_logic_1))) then 
            C_TKEEP_int_regslice <= grp_torque_foc_fu_186_C_TKEEP;
        else 
            C_TKEEP_int_regslice <= "XXXXXXXX";
        end if; 
    end process;


    C_TLAST_int_regslice_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_C_TVALID, grp_torque_foc_fu_186_C_TLAST, grp_foc_fu_240_C_TVALID, grp_foc_fu_240_C_TLAST, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_C_TVALID = ap_const_logic_1))) then 
            C_TLAST_int_regslice <= grp_foc_fu_240_C_TLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_C_TVALID = ap_const_logic_1))) then 
            C_TLAST_int_regslice <= grp_torque_foc_fu_186_C_TLAST;
        else 
            C_TLAST_int_regslice <= "X";
        end if; 
    end process;


    C_TSTRB_int_regslice_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_C_TVALID, grp_torque_foc_fu_186_C_TSTRB, grp_foc_fu_240_C_TVALID, grp_foc_fu_240_C_TSTRB, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_foc_fu_240_C_TVALID = ap_const_logic_1))) then 
            C_TSTRB_int_regslice <= grp_foc_fu_240_C_TSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456) and (grp_torque_foc_fu_186_C_TVALID = ap_const_logic_1))) then 
            C_TSTRB_int_regslice <= grp_torque_foc_fu_186_C_TSTRB;
        else 
            C_TSTRB_int_regslice <= "XXXXXXXX";
        end if; 
    end process;

    C_TVALID <= regslice_both_C_V_data_V_U_vld_out;

    C_TVALID_int_regslice_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_C_TVALID, grp_foc_fu_240_C_TVALID, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            C_TVALID_int_regslice <= grp_foc_fu_240_C_TVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            C_TVALID_int_regslice <= grp_torque_foc_fu_186_C_TVALID;
        else 
            C_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    and_ln13_fu_337_p2 <= (or_ln13_fu_333_p2 and grp_fu_294_p2);
    and_ln18_fu_362_p2 <= (or_ln18_fu_358_p2 and grp_fu_294_p2);
    and_ln20_fu_387_p2 <= (or_ln20_fu_383_p2 and grp_fu_294_p2);
    and_ln22_fu_412_p2 <= (or_ln22_fu_408_p2 and grp_fu_294_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state11_on_subcall_done)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_manual_control_fu_158_ap_done)
    begin
        if ((grp_manual_control_fu_158_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(grp_foc_fu_240_ap_done)
    begin
        if ((grp_foc_fu_240_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state17_blk_assign_proc : process(grp_calibration_fu_146_ap_done, A_TVALID_int_regslice)
    begin
        if (((ap_const_logic_0 = A_TVALID_int_regslice) or (grp_calibration_fu_146_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state18_blk_assign_proc : process(regslice_both_B_V_data_V_U_apdone_blk, regslice_both_C_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_C_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_1))) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state11_on_subcall_done_assign_proc : process(grp_manual_control_fu_158_ap_done, grp_torque_foc_fu_186_ap_done, ap_predicate_op95_call_state11, ap_predicate_op97_call_state11)
    begin
                ap_block_state11_on_subcall_done <= (((ap_predicate_op97_call_state11 = ap_const_boolean_1) and (grp_torque_foc_fu_186_ap_done = ap_const_logic_0)) or ((ap_predicate_op95_call_state11 = ap_const_boolean_1) and (grp_manual_control_fu_158_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state18_assign_proc : process(regslice_both_B_V_data_V_U_apdone_blk, regslice_both_C_V_data_V_U_apdone_blk)
    begin
                ap_block_state18 <= ((regslice_both_C_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_predicate_op95_call_state11_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494)
    begin
                ap_predicate_op95_call_state11 <= ((ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456));
    end process;


    ap_predicate_op97_call_state11_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494)
    begin
                ap_predicate_op97_call_state11 <= ((ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln13_fu_318_p1 <= control_q0;
    bitcast_ln18_fu_343_p1 <= control_q0;
    bitcast_ln20_fu_368_p1 <= control_q0;
    bitcast_ln22_fu_393_p1 <= control_q0;

    buffer_velocity_address0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_buffer_velocity_address0, grp_foc_fu_240_buffer_velocity_address0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buffer_velocity_address0 <= grp_foc_fu_240_buffer_velocity_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            buffer_velocity_address0 <= grp_torque_foc_fu_186_buffer_velocity_address0;
        else 
            buffer_velocity_address0 <= "XXXXX";
        end if; 
    end process;


    buffer_velocity_ce0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_buffer_velocity_ce0, grp_foc_fu_240_buffer_velocity_ce0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buffer_velocity_ce0 <= grp_foc_fu_240_buffer_velocity_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            buffer_velocity_ce0 <= grp_torque_foc_fu_186_buffer_velocity_ce0;
        else 
            buffer_velocity_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_velocity_d0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_buffer_velocity_d0, grp_foc_fu_240_buffer_velocity_d0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buffer_velocity_d0 <= grp_foc_fu_240_buffer_velocity_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            buffer_velocity_d0 <= grp_torque_foc_fu_186_buffer_velocity_d0;
        else 
            buffer_velocity_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_velocity_we0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_torque_foc_fu_186_buffer_velocity_we0, grp_foc_fu_240_buffer_velocity_we0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            buffer_velocity_we0 <= grp_foc_fu_240_buffer_velocity_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            buffer_velocity_we0 <= grp_torque_foc_fu_186_buffer_velocity_we0;
        else 
            buffer_velocity_we0 <= ap_const_logic_0;
        end if; 
    end process;

    control_addr_reg_418 <= ap_const_lv64_5(3 - 1 downto 0);

    control_address0_assign_proc : process(control_addr_reg_418, ap_CS_fsm_state1, and_ln18_reg_456, ap_CS_fsm_state5, and_ln20_reg_475, ap_CS_fsm_state7, and_ln22_reg_494, grp_manual_control_fu_158_control_address0, grp_torque_foc_fu_186_control_address0, grp_foc_fu_240_control_address0, ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            control_address0 <= control_addr_reg_418;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            control_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            control_address0 <= grp_foc_fu_240_control_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            control_address0 <= grp_torque_foc_fu_186_control_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            control_address0 <= grp_manual_control_fu_158_control_address0;
        else 
            control_address0 <= "XXX";
        end if; 
    end process;


    control_ce0_assign_proc : process(ap_CS_fsm_state1, and_ln18_reg_456, ap_CS_fsm_state5, and_ln20_reg_475, ap_CS_fsm_state7, and_ln22_reg_494, grp_manual_control_fu_158_control_ce0, grp_torque_foc_fu_186_control_ce0, grp_foc_fu_240_control_ce0, ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            control_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            control_ce0 <= grp_foc_fu_240_control_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            control_ce0 <= grp_torque_foc_fu_186_control_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            control_ce0 <= grp_manual_control_fu_158_control_ce0;
        else 
            control_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_PI_control_float_s_fu_498_KI_assign_proc : process(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din4, grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din4, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_PI_control_float_s_fu_498_KI <= grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_PI_control_float_s_fu_498_KI <= grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din4;
        else 
            grp_PI_control_float_s_fu_498_KI <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_PI_control_float_s_fu_498_KP_assign_proc : process(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din3, grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din3, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_PI_control_float_s_fu_498_KP <= grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_PI_control_float_s_fu_498_KP <= grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din3;
        else 
            grp_PI_control_float_s_fu_498_KP <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_PI_control_float_s_fu_498_ap_start_assign_proc : process(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_start, grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_start, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_PI_control_float_s_fu_498_ap_start <= grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_PI_control_float_s_fu_498_ap_start <= grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_start;
        else 
            grp_PI_control_float_s_fu_498_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_PI_control_float_s_fu_498_ierr_i_assign_proc : process(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din5, grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din5, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_PI_control_float_s_fu_498_ierr_i <= grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_PI_control_float_s_fu_498_ierr_i <= grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din5;
        else 
            grp_PI_control_float_s_fu_498_ierr_i <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_PI_control_float_s_fu_498_ref_assign_proc : process(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din1, grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din1, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_PI_control_float_s_fu_498_ref <= grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_PI_control_float_s_fu_498_ref <= grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din1;
        else 
            grp_PI_control_float_s_fu_498_ref <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_PI_control_float_s_fu_498_val_r_assign_proc : process(grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din2, grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din2, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_PI_control_float_s_fu_498_val_r <= grp_foc_fu_240_grp_PI_control_float_s_fu_498_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_PI_control_float_s_fu_498_val_r <= grp_torque_foc_fu_186_grp_PI_control_float_s_fu_498_p_din2;
        else 
            grp_PI_control_float_s_fu_498_val_r <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SVPWM_float_s_fu_506_Va_assign_proc : process(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din1, grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din1, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_SVPWM_float_s_fu_506_Va <= grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_SVPWM_float_s_fu_506_Va <= grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din1;
        else 
            grp_SVPWM_float_s_fu_506_Va <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SVPWM_float_s_fu_506_Vb_assign_proc : process(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din2, grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din2, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_SVPWM_float_s_fu_506_Vb <= grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_SVPWM_float_s_fu_506_Vb <= grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din2;
        else 
            grp_SVPWM_float_s_fu_506_Vb <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SVPWM_float_s_fu_506_Vc_assign_proc : process(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din3, grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din3, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_SVPWM_float_s_fu_506_Vc <= grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_din3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_SVPWM_float_s_fu_506_Vc <= grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_din3;
        else 
            grp_SVPWM_float_s_fu_506_Vc <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_SVPWM_float_s_fu_506_ap_start_assign_proc : process(grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_start, grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_start, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_SVPWM_float_s_fu_506_ap_start <= grp_foc_fu_240_grp_SVPWM_float_s_fu_506_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_SVPWM_float_s_fu_506_ap_start <= grp_torque_foc_fu_186_grp_SVPWM_float_s_fu_506_p_start;
        else 
            grp_SVPWM_float_s_fu_506_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_calibration_fu_146_B_TREADY <= (ap_CS_fsm_state17 and B_TREADY_int_regslice);
    grp_calibration_fu_146_ap_start <= grp_calibration_fu_146_ap_start_reg;

    grp_clarke_direct_float_s_fu_512_Ia_assign_proc : process(grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din1, grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din1, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_clarke_direct_float_s_fu_512_Ia <= grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_clarke_direct_float_s_fu_512_Ia <= grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din1;
        else 
            grp_clarke_direct_float_s_fu_512_Ia <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_clarke_direct_float_s_fu_512_Ib_assign_proc : process(grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din2, grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din2, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_clarke_direct_float_s_fu_512_Ib <= grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_clarke_direct_float_s_fu_512_Ib <= grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_din2;
        else 
            grp_clarke_direct_float_s_fu_512_Ib <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_clarke_direct_float_s_fu_512_ap_start_assign_proc : process(grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_start, grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_start, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_clarke_direct_float_s_fu_512_ap_start <= grp_foc_fu_240_grp_clarke_direct_float_s_fu_512_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_clarke_direct_float_s_fu_512_ap_start <= grp_torque_foc_fu_186_grp_clarke_direct_float_s_fu_512_p_start;
        else 
            grp_clarke_direct_float_s_fu_512_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_clarke_inverse_float_s_fu_517_Valpha_assign_proc : process(grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din1, grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din1, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_clarke_inverse_float_s_fu_517_Valpha <= grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_clarke_inverse_float_s_fu_517_Valpha <= grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din1;
        else 
            grp_clarke_inverse_float_s_fu_517_Valpha <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_clarke_inverse_float_s_fu_517_Vbeta_assign_proc : process(grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din2, grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din2, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_clarke_inverse_float_s_fu_517_Vbeta <= grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_clarke_inverse_float_s_fu_517_Vbeta <= grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_din2;
        else 
            grp_clarke_inverse_float_s_fu_517_Vbeta <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_clarke_inverse_float_s_fu_517_ap_start_assign_proc : process(grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_start, grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_start, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_clarke_inverse_float_s_fu_517_ap_start <= grp_foc_fu_240_grp_clarke_inverse_float_s_fu_517_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_clarke_inverse_float_s_fu_517_ap_start <= grp_torque_foc_fu_186_grp_clarke_inverse_float_s_fu_517_p_start;
        else 
            grp_clarke_inverse_float_s_fu_517_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_foc_fu_240_B_TREADY <= (ap_CS_fsm_state16 and B_TREADY_int_regslice);
    grp_foc_fu_240_C_TREADY <= (ap_CS_fsm_state16 and C_TREADY_int_regslice);
    grp_foc_fu_240_ap_start <= grp_foc_fu_240_ap_start_reg;

    grp_fu_294_p0_assign_proc : process(bitcast_ln13_fu_318_p1, ap_CS_fsm_state2, bitcast_ln18_fu_343_p1, ap_CS_fsm_state4, bitcast_ln20_fu_368_p1, ap_CS_fsm_state6, bitcast_ln22_fu_393_p1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_294_p0 <= bitcast_ln22_fu_393_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_294_p0 <= bitcast_ln20_fu_368_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_294_p0 <= bitcast_ln18_fu_343_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_294_p0 <= bitcast_ln13_fu_318_p1;
        else 
            grp_fu_294_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_p1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_294_p1 <= ap_const_lv32_40A00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_294_p1 <= ap_const_lv32_40800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_294_p1 <= ap_const_lv32_40400000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_294_p1 <= ap_const_lv32_40000000;
        else 
            grp_fu_294_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_302_p4 <= control_q0(30 downto 23);
    grp_fu_312_p2 <= "0" when (grp_fu_302_p4 = ap_const_lv8_FF) else "1";

    grp_fu_522_ce_assign_proc : process(grp_torque_foc_fu_186_grp_fu_522_p_ce, grp_foc_fu_240_grp_fu_522_p_ce, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_522_ce <= grp_foc_fu_240_grp_fu_522_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_522_ce <= grp_torque_foc_fu_186_grp_fu_522_p_ce;
        else 
            grp_fu_522_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_522_p0_assign_proc : process(grp_torque_foc_fu_186_grp_fu_522_p_din0, grp_foc_fu_240_grp_fu_522_p_din0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_522_p0 <= grp_foc_fu_240_grp_fu_522_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_522_p0 <= grp_torque_foc_fu_186_grp_fu_522_p_din0;
        else 
            grp_fu_522_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_522_p1_assign_proc : process(grp_torque_foc_fu_186_grp_fu_522_p_din1, grp_foc_fu_240_grp_fu_522_p_din1, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_522_p1 <= grp_foc_fu_240_grp_fu_522_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_522_p1 <= grp_torque_foc_fu_186_grp_fu_522_p_din1;
        else 
            grp_fu_522_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_526_ce_assign_proc : process(grp_torque_foc_fu_186_grp_fu_526_p_ce, grp_foc_fu_240_grp_fu_526_p_ce, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_526_ce <= grp_foc_fu_240_grp_fu_526_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_526_ce <= grp_torque_foc_fu_186_grp_fu_526_p_ce;
        else 
            grp_fu_526_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_526_p0_assign_proc : process(grp_torque_foc_fu_186_grp_fu_526_p_din0, grp_foc_fu_240_grp_fu_526_p_din0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_526_p0 <= grp_foc_fu_240_grp_fu_526_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_526_p0 <= grp_torque_foc_fu_186_grp_fu_526_p_din0;
        else 
            grp_fu_526_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_529_ce_assign_proc : process(grp_torque_foc_fu_186_grp_fu_529_p_ce, grp_foc_fu_240_grp_fu_529_p_ce, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_529_ce <= grp_foc_fu_240_grp_fu_529_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_529_ce <= grp_torque_foc_fu_186_grp_fu_529_p_ce;
        else 
            grp_fu_529_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_529_p0_assign_proc : process(grp_torque_foc_fu_186_grp_fu_529_p_din0, grp_foc_fu_240_grp_fu_529_p_din0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_529_p0 <= grp_foc_fu_240_grp_fu_529_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_529_p0 <= grp_torque_foc_fu_186_grp_fu_529_p_din0;
        else 
            grp_fu_529_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_532_ce_assign_proc : process(grp_torque_foc_fu_186_grp_fu_532_p_ce, grp_foc_fu_240_grp_fu_532_p_ce, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_532_ce <= grp_foc_fu_240_grp_fu_532_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_532_ce <= grp_torque_foc_fu_186_grp_fu_532_p_ce;
        else 
            grp_fu_532_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_532_p0_assign_proc : process(grp_torque_foc_fu_186_grp_fu_532_p_din0, grp_foc_fu_240_grp_fu_532_p_din0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_532_p0 <= grp_foc_fu_240_grp_fu_532_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_532_p0 <= grp_torque_foc_fu_186_grp_fu_532_p_din0;
        else 
            grp_fu_532_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_535_ce_assign_proc : process(grp_torque_foc_fu_186_grp_fu_535_p_ce, grp_foc_fu_240_grp_fu_535_p_ce, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_535_ce <= grp_foc_fu_240_grp_fu_535_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_535_ce <= grp_torque_foc_fu_186_grp_fu_535_p_ce;
        else 
            grp_fu_535_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_535_p0_assign_proc : process(grp_torque_foc_fu_186_grp_fu_535_p_din0, grp_foc_fu_240_grp_fu_535_p_din0, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_535_p0 <= grp_foc_fu_240_grp_fu_535_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_535_p0 <= grp_torque_foc_fu_186_grp_fu_535_p_din0;
        else 
            grp_fu_535_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_manual_control_fu_158_B_TREADY <= ((ap_CS_fsm_state14 and B_TREADY_int_regslice) or (ap_CS_fsm_state11 and B_TREADY_int_regslice));
    grp_manual_control_fu_158_ap_start <= grp_manual_control_fu_158_ap_start_reg;

    grp_park_direct_float_s_fu_538_Ialpha_assign_proc : process(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din1, grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din1, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_direct_float_s_fu_538_Ialpha <= grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_direct_float_s_fu_538_Ialpha <= grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din1;
        else 
            grp_park_direct_float_s_fu_538_Ialpha <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_park_direct_float_s_fu_538_Ibeta_assign_proc : process(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din2, grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din2, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_direct_float_s_fu_538_Ibeta <= grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_direct_float_s_fu_538_Ibeta <= grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din2;
        else 
            grp_park_direct_float_s_fu_538_Ibeta <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_park_direct_float_s_fu_538_angle_assign_proc : process(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din3, grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din3, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_direct_float_s_fu_538_angle <= grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_din3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_direct_float_s_fu_538_angle <= grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_din3;
        else 
            grp_park_direct_float_s_fu_538_angle <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_park_direct_float_s_fu_538_ap_start_assign_proc : process(grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_start, grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_start, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_direct_float_s_fu_538_ap_start <= grp_foc_fu_240_grp_park_direct_float_s_fu_538_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_direct_float_s_fu_538_ap_start <= grp_torque_foc_fu_186_grp_park_direct_float_s_fu_538_p_start;
        else 
            grp_park_direct_float_s_fu_538_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_park_inverse_float_s_fu_546_Vd_assign_proc : process(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din1, grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din1, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_inverse_float_s_fu_546_Vd <= grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_inverse_float_s_fu_546_Vd <= grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din1;
        else 
            grp_park_inverse_float_s_fu_546_Vd <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_park_inverse_float_s_fu_546_Vq_assign_proc : process(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din2, grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din2, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_inverse_float_s_fu_546_Vq <= grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_inverse_float_s_fu_546_Vq <= grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din2;
        else 
            grp_park_inverse_float_s_fu_546_Vq <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_park_inverse_float_s_fu_546_angle_assign_proc : process(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din3, grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din3, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_inverse_float_s_fu_546_angle <= grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_din3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_inverse_float_s_fu_546_angle <= grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_din3;
        else 
            grp_park_inverse_float_s_fu_546_angle <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_park_inverse_float_s_fu_546_ap_start_assign_proc : process(grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_start, grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_start, ap_CS_fsm_state11, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_park_inverse_float_s_fu_546_ap_start <= grp_foc_fu_240_grp_park_inverse_float_s_fu_546_p_start;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_park_inverse_float_s_fu_546_ap_start <= grp_torque_foc_fu_186_grp_park_inverse_float_s_fu_546_p_start;
        else 
            grp_park_inverse_float_s_fu_546_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_torque_foc_fu_186_B_TREADY <= (ap_CS_fsm_state11 and B_TREADY_int_regslice);
    grp_torque_foc_fu_186_C_TREADY <= (ap_CS_fsm_state11 and C_TREADY_int_regslice);
    grp_torque_foc_fu_186_ap_start <= grp_torque_foc_fu_186_ap_start_reg;
    icmp_ln13_1_fu_327_p2 <= "1" when (trunc_ln13_fu_323_p1 = ap_const_lv23_0) else "0";
    icmp_ln18_1_fu_352_p2 <= "1" when (trunc_ln18_fu_348_p1 = ap_const_lv23_0) else "0";
    icmp_ln20_1_fu_377_p2 <= "1" when (trunc_ln20_fu_373_p1 = ap_const_lv23_0) else "0";
    icmp_ln22_1_fu_402_p2 <= "1" when (trunc_ln22_fu_398_p1 = ap_const_lv23_0) else "0";

    logger_address0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_manual_control_fu_158_logger_address0, grp_torque_foc_fu_186_logger_address0, grp_foc_fu_240_logger_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            logger_address0 <= grp_foc_fu_240_logger_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            logger_address0 <= grp_torque_foc_fu_186_logger_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            logger_address0 <= grp_manual_control_fu_158_logger_address0;
        else 
            logger_address0 <= "XXXX";
        end if; 
    end process;


    logger_ce0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_manual_control_fu_158_logger_ce0, grp_torque_foc_fu_186_logger_ce0, grp_foc_fu_240_logger_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            logger_ce0 <= grp_foc_fu_240_logger_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            logger_ce0 <= grp_torque_foc_fu_186_logger_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            logger_ce0 <= grp_manual_control_fu_158_logger_ce0;
        else 
            logger_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    logger_d0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_manual_control_fu_158_logger_d0, grp_torque_foc_fu_186_logger_d0, grp_foc_fu_240_logger_d0, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            logger_d0 <= grp_foc_fu_240_logger_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            logger_d0 <= grp_torque_foc_fu_186_logger_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            logger_d0 <= grp_manual_control_fu_158_logger_d0;
        else 
            logger_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    logger_we0_assign_proc : process(and_ln18_reg_456, and_ln20_reg_475, and_ln22_reg_494, grp_manual_control_fu_158_logger_we0, grp_torque_foc_fu_186_logger_we0, grp_foc_fu_240_logger_we0, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            logger_we0 <= grp_foc_fu_240_logger_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_1 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456))) then 
            logger_we0 <= grp_torque_foc_fu_186_logger_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_lv1_0 = and_ln22_reg_494) and (ap_const_lv1_0 = and_ln20_reg_475) and (ap_const_lv1_0 = and_ln18_reg_456)))) then 
            logger_we0 <= grp_manual_control_fu_158_logger_we0;
        else 
            logger_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln13_fu_333_p2 <= (icmp_ln13_reg_428 or icmp_ln13_1_reg_433);
    or_ln18_fu_358_p2 <= (icmp_ln18_reg_446 or icmp_ln18_1_reg_451);
    or_ln20_fu_383_p2 <= (icmp_ln20_reg_465 or icmp_ln20_1_reg_470);
    or_ln22_fu_408_p2 <= (icmp_ln22_reg_484 or icmp_ln22_1_reg_489);
    trunc_ln13_fu_323_p1 <= control_q0(23 - 1 downto 0);
    trunc_ln18_fu_348_p1 <= control_q0(23 - 1 downto 0);
    trunc_ln20_fu_373_p1 <= control_q0(23 - 1 downto 0);
    trunc_ln22_fu_398_p1 <= control_q0(23 - 1 downto 0);
end behav;
