-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity foc is
generic (
    C_S_AXI_CONTROL_R_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONTROL_R_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_TDATA : IN STD_LOGIC_VECTOR (79 downto 0);
    A_TVALID : IN STD_LOGIC;
    A_TREADY : OUT STD_LOGIC;
    A_TKEEP : IN STD_LOGIC_VECTOR (9 downto 0);
    A_TSTRB : IN STD_LOGIC_VECTOR (9 downto 0);
    A_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    B_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    B_TVALID : OUT STD_LOGIC;
    B_TREADY : IN STD_LOGIC;
    B_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    B_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    C_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    C_TVALID : OUT STD_LOGIC;
    C_TREADY : IN STD_LOGIC;
    C_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    C_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_control_r_AWVALID : IN STD_LOGIC;
    s_axi_control_r_AWREADY : OUT STD_LOGIC;
    s_axi_control_r_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_WVALID : IN STD_LOGIC;
    s_axi_control_r_WREADY : OUT STD_LOGIC;
    s_axi_control_r_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH/8-1 downto 0);
    s_axi_control_r_ARVALID : IN STD_LOGIC;
    s_axi_control_r_ARREADY : OUT STD_LOGIC;
    s_axi_control_r_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_RVALID : OUT STD_LOGIC;
    s_axi_control_r_RREADY : IN STD_LOGIC;
    s_axi_control_r_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_r_BVALID : OUT STD_LOGIC;
    s_axi_control_r_BREADY : IN STD_LOGIC;
    s_axi_control_r_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of foc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "foc_foc,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.389800,HLS_SYN_LAT=168,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=5205,HLS_SYN_LUT=11152,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (117 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (117 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (117 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (117 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (117 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (117 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (117 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (117 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (117 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (117 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (117 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_447A0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000100011110100000000000000000";
    constant ap_const_lv32_C47A0000 : STD_LOGIC_VECTOR (31 downto 0) := "11000100011110100000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_3D000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111101000000000000000000000000";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_3F13CD36 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000100111100110100110110";
    constant ap_const_lv32_40400000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000010000000000000000000000";
    constant ap_const_lv32_40A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000101000000000000000000000";
    constant ap_const_lv32_3FDDB22D : STD_LOGIC_VECTOR (31 downto 0) := "00111111110111011011001000101101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_47000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000111000000000000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv64_400921FB5A7ED197 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000001001001000011111101101011010011111101101000110010111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal control : STD_LOGIC_VECTOR (31 downto 0);
    signal velocity_accum : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal buffer_velocity_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buffer_velocity_ce0 : STD_LOGIC;
    signal buffer_velocity_we0 : STD_LOGIC;
    signal buffer_velocity_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_velocity_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_velocity_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_cnt : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Ia_DC_acc : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Ib_DC_acc : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Ia_corr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Ib_corr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ierr : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal A_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (117 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal B_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal C_TDATA_blk_n : STD_LOGIC;
    signal grp_fu_352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_sin_or_cos_float_s_fu_264_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_264_ap_done : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_279_ap_ready : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_279_ap_done : STD_LOGIC;
    signal ap_block_state41_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state94 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state94 : signal is "none";
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_413 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal reg_423 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal reg_428 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal grp_fu_316_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_450 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_455 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_460 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_2254 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln27_fu_491_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2264 : STD_LOGIC_VECTOR (0 downto 0);
    signal Theta_fu_504_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Theta_reg_2269 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal buffer_velocity_load_reg_2277 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln26_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal Theta_3_fu_561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Theta_3_reg_2290 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_fu_347_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Angle_reg_2295 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln47_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_reg_2303 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln59_fu_608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal control_read_reg_2330 : STD_LOGIC_VECTOR (31 downto 0);
    signal vel_corr_fu_651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal bitcast_ln54_fu_656_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i_reg_2345 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln11_fu_669_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln11_reg_2353 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal bitcast_ln11_1_fu_675_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal add_i1_reg_2363 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_390_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul1_i_reg_2368 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal bitcast_ln354_fu_691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal icmp_ln11_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_reg_2378 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_1_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_1_reg_2383 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln354_1_fu_734_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln20_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_reg_2393 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_1_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_1_reg_2398 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_angle_reg_2403 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ialpha_fu_775_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ialpha_reg_2409 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ibeta_fu_793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Ibeta_reg_2415 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_264_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_2421 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_sin_or_cos_float_s_fu_279_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_34_reg_2427 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_i3_reg_2433 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul3_i_reg_2438 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal control_law_reg_2443 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_2451 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal grp_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_2456 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_2461 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_2466 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln354_3_fu_813_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal or_ln25_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_reg_2476 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln26_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln354_9_fu_898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln15_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln15_reg_2491 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln16_fu_967_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_2501 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal tmp_17_reg_2506 : STD_LOGIC_VECTOR (0 downto 0);
    signal Iq_fu_976_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Iq_reg_2511 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ref_torque_fu_988_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ref_torque_reg_2516 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln11_1_fu_999_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln11_1_reg_2521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal bitcast_ln11_3_fu_1005_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal tmp_6_reg_2531 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_2536 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln354_2_fu_1021_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal or_ln21_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_reg_2546 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln22_fu_1090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_2556 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal Id_fu_1099_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Id_reg_2561 : STD_LOGIC_VECTOR (31 downto 0);
    signal err_2_fu_1116_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal err_2_reg_2567 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal tmp_23_reg_2573 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal tmp_24_reg_2578 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_2583 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_2588 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln354_10_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal or_ln15_1_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln15_1_reg_2598 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln16_1_fu_1208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln354_11_fu_1225_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln15_2_fu_1256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln15_2_reg_2613 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln16_2_fu_1294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_2623 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal tmp_27_reg_2628 : STD_LOGIC_VECTOR (0 downto 0);
    signal Vq_fu_1303_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vq_reg_2633 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal Vd_fu_1315_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vd_reg_2639 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_2645 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal tmp_39_reg_2650 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_2655 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal tmp_34_reg_2660 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln354_5_fu_1335_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln25_1_fu_1366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_1_reg_2670 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln26_1_fu_1404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln354_4_fu_1421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal or_ln21_1_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_1_reg_2685 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln22_1_fu_1490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_reg_2695 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_2700 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal Vbeta_fu_1499_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vbeta_reg_2705 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal dc_9_fu_1511_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_9_reg_2710 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal tmp_43_reg_2719 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_2724 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln354_6_fu_1530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal or_ln9_fu_1561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln9_reg_2734 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln12_fu_1599_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln17_fu_1610_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_reg_2749 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal Va_2_fu_1619_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Va_2_reg_2754 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_fu_1757_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_V_reg_2759 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal tmp_48_reg_2764 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state112 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state112 : signal is "none";
    signal tmp_49_reg_2769 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_2774 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_2779 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln354_7_fu_1777_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal or_ln19_fu_1808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln19_reg_2789 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln20_fu_1846_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln354_8_fu_1863_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln23_fu_1894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln23_reg_2804 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln24_fu_1932_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_2814 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state114 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state114 : signal is "none";
    signal tmp_52_reg_2819 : STD_LOGIC_VECTOR (0 downto 0);
    signal Vb_4_fu_1941_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vb_4_reg_2824 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal Vc_4_fu_1953_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Vc_4_reg_2829 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln78_fu_2248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start : STD_LOGIC;
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done : STD_LOGIC;
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_idle : STD_LOGIC;
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_ready : STD_LOGIC;
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce0 : STD_LOGIC;
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_we0 : STD_LOGIC;
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce1 : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_264_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_264_ap_idle : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_279_ap_start : STD_LOGIC;
    signal grp_sin_or_cos_float_s_fu_279_ap_idle : STD_LOGIC;
    signal storemerge_reg_247 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_264_ap_start_reg : STD_LOGIC := '0';
    signal grp_sin_or_cos_float_s_fu_279_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_block_state117 : BOOLEAN;
    signal ap_block_state117_io : BOOLEAN;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_294_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state91 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state91 : signal is "none";
    signal grp_fu_301_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_301_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_311_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_CS_fsm_state88 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state88 : signal is "none";
    signal grp_fu_316_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_352_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_356_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_367_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal grp_fu_373_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_373_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_380_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_385_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1691_1_fu_481_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln30_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_523_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln30_fu_533_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln30_1_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln30_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln30_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln70_fu_641_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln70_fu_645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln11_fu_665_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_679_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_683_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_fu_687_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_696_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln11_fu_706_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal data_V_1_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_24_fu_726_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_1_fu_730_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_739_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln20_fu_749_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln11_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln11_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln20_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln20_fu_787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_3_fu_801_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_26_fu_805_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_3_fu_809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_818_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln25_fu_828_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln25_1_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_2_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_3_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_1_fu_855_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln26_1_fu_864_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln26_fu_868_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_874_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_V_4_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_27_fu_890_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_4_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_903_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln15_fu_913_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln15_1_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_4_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_5_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_2_fu_940_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln16_fu_949_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln16_fu_953_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_959_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal and_ln25_fu_972_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln15_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln11_2_fu_995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_2_fu_1009_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_25_fu_1013_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_2_fu_1017_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1026_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_fu_1036_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln21_1_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_1_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_fu_1063_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln22_fu_1072_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln22_fu_1076_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_1082_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal and_ln21_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln10_fu_1107_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln10_fu_1110_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_5_fu_1127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_28_fu_1131_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_5_fu_1135_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1144_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln15_1_fu_1154_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln15_3_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_2_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_6_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_7_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_3_fu_1181_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln16_1_fu_1190_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln16_1_fu_1194_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_fu_1200_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_V_6_fu_1213_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_29_fu_1217_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_6_fu_1221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_1230_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln15_2_fu_1240_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln15_5_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_4_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_8_fu_1262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_9_fu_1271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_4_fu_1267_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln16_2_fu_1276_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln16_2_fu_1280_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_1286_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal and_ln15_1_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln15_2_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_8_fu_1323_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_31_fu_1327_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_8_fu_1331_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_1340_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln25_1_fu_1350_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln25_3_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_2_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_12_fu_1372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_13_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_6_fu_1377_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln26_2_fu_1386_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln26_1_fu_1390_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_fu_1396_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_V_7_fu_1409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_30_fu_1413_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_7_fu_1417_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1426_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_1_fu_1436_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln21_3_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_2_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_10_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_11_fu_1467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_5_fu_1463_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln22_1_fu_1472_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln22_1_fu_1476_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_35_fu_1482_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal and_ln25_1_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln21_1_fu_1507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_9_fu_1519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_32_fu_1522_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_9_fu_1526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1535_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln9_fu_1545_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln9_1_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln9_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_14_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_15_fu_1576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_7_fu_1572_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln12_fu_1581_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln12_fu_1585_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_fu_1591_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln17_fu_1604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln9_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_12_fu_1626_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_1647_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_fu_1651_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_71_fu_1637_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln344_fu_1665_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln344_fu_1669_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1364_fu_1683_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_1675_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1364_fu_1689_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_fu_1693_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1340_fu_1701_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_1661_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1340_fu_1705_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_fu_1709_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_60_fu_1721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_7_fu_1715_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln671_fu_1729_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_1733_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_fu_1743_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_35_fu_1629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_2_fu_1751_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_10_fu_1765_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_33_fu_1769_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_10_fu_1773_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1782_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln19_fu_1792_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln19_1_fu_1802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_16_fu_1814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_17_fu_1823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_8_fu_1819_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln20_fu_1828_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln20_fu_1832_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_50_fu_1838_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_V_11_fu_1851_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_34_fu_1855_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln368_11_fu_1859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1868_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln23_fu_1878_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln23_1_fu_1888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_18_fu_1900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln10_19_fu_1909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln10_9_fu_1905_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln24_fu_1914_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln24_fu_1918_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_fu_1924_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal and_ln19_fu_1937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln23_fu_1949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_13_fu_1961_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_1982_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_1_fu_1986_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_73_fu_1972_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln344_1_fu_2000_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln344_1_fu_2004_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1364_1_fu_2018_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_2010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1364_1_fu_2024_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_1_fu_2028_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1340_1_fu_2036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_1996_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1340_1_fu_2040_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_8_fu_2044_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_65_fu_2056_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_9_fu_2050_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln671_1_fu_2064_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_2068_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_1_fu_2078_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_36_fu_1964_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_5_fu_2086_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_V_14_fu_2100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_2121_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal mantissa_2_fu_2125_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_75_fu_2111_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln344_2_fu_2139_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln344_2_fu_2143_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1364_2_fu_2157_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_2_fu_2149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1364_2_fu_2163_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_2_fu_2167_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1340_2_fu_2175_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_2135_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1340_2_fu_2179_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_10_fu_2183_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_70_fu_2195_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_11_fu_2189_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln671_2_fu_2203_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_fu_2207_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_2_fu_2217_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_37_fu_2103_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_9_fu_2225_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_V_11_fu_2231_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_V_10_fu_2092_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pwmStreamObj_data_V_fu_2239_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_294_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_294_ce : STD_LOGIC;
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal grp_fu_301_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_352_ce : STD_LOGIC;
    signal grp_fu_367_ce : STD_LOGIC;
    signal grp_fu_367_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_373_ce : STD_LOGIC;
    signal grp_fu_373_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (117 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal ap_ST_fsm_state107_blk : STD_LOGIC;
    signal ap_ST_fsm_state108_blk : STD_LOGIC;
    signal ap_ST_fsm_state109_blk : STD_LOGIC;
    signal ap_ST_fsm_state110_blk : STD_LOGIC;
    signal ap_ST_fsm_state111_blk : STD_LOGIC;
    signal ap_ST_fsm_state112_blk : STD_LOGIC;
    signal ap_ST_fsm_state113_blk : STD_LOGIC;
    signal ap_ST_fsm_state114_blk : STD_LOGIC;
    signal ap_ST_fsm_state115_blk : STD_LOGIC;
    signal ap_ST_fsm_state116_blk : STD_LOGIC;
    signal ap_ST_fsm_state117_blk : STD_LOGIC;
    signal ap_ST_fsm_state118_blk : STD_LOGIC;
    signal regslice_both_B_V_data_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_C_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state118 : BOOLEAN;
    signal ap_block_state118_io : BOOLEAN;
    signal regslice_both_A_V_data_V_U_apdone_blk : STD_LOGIC;
    signal A_TDATA_int_regslice : STD_LOGIC_VECTOR (79 downto 0);
    signal A_TVALID_int_regslice : STD_LOGIC;
    signal A_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_A_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal A_TKEEP_int_regslice : STD_LOGIC_VECTOR (9 downto 0);
    signal regslice_both_A_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal A_TSTRB_int_regslice : STD_LOGIC_VECTOR (9 downto 0);
    signal regslice_both_A_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_A_V_last_V_U_apdone_blk : STD_LOGIC;
    signal A_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_A_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_A_V_last_V_U_ack_in : STD_LOGIC;
    signal B_TVALID_int_regslice : STD_LOGIC;
    signal B_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_B_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_B_V_last_V_U_vld_out : STD_LOGIC;
    signal C_TVALID_int_regslice : STD_LOGIC;
    signal C_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_C_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_C_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_C_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_C_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_C_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_C_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_C_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_C_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_C_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_C_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component foc_foc_Pipeline_VITIS_LOOP_13_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buffer_velocity_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buffer_velocity_ce0 : OUT STD_LOGIC;
        buffer_velocity_we0 : OUT STD_LOGIC;
        buffer_velocity_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_velocity_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buffer_velocity_ce1 : OUT STD_LOGIC;
        buffer_velocity_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_sin_or_cos_float_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        do_cos : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_fdiv_32ns_32ns_32_9_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_sitofp_64s_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_sitofp_32s_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_fptrunc_64ns_32_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component foc_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component foc_dmul_64ns_64ns_64_5_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component foc_buffer_velocity_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component foc_control_r_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        control : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component foc_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    buffer_velocity_U : component foc_buffer_velocity_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buffer_velocity_address0,
        ce0 => buffer_velocity_ce0,
        we0 => buffer_velocity_we0,
        d0 => buffer_velocity_d0,
        q0 => buffer_velocity_q0,
        address1 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address1,
        ce1 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce1,
        q1 => buffer_velocity_q1);

    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258 : component foc_foc_Pipeline_VITIS_LOOP_13_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start,
        ap_done => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done,
        ap_idle => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_idle,
        ap_ready => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_ready,
        buffer_velocity_address0 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address0,
        buffer_velocity_ce0 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce0,
        buffer_velocity_we0 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_we0,
        buffer_velocity_d0 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_d0,
        buffer_velocity_address1 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address1,
        buffer_velocity_ce1 => grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce1,
        buffer_velocity_q1 => buffer_velocity_q1);

    grp_sin_or_cos_float_s_fu_264 : component foc_sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sin_or_cos_float_s_fu_264_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_264_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_264_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_264_ap_ready,
        t_in => p_angle_reg_2403,
        do_cos => ap_const_lv1_0,
        ap_return => grp_sin_or_cos_float_s_fu_264_ap_return);

    grp_sin_or_cos_float_s_fu_279 : component foc_sin_or_cos_float_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sin_or_cos_float_s_fu_279_ap_start,
        ap_done => grp_sin_or_cos_float_s_fu_279_ap_done,
        ap_idle => grp_sin_or_cos_float_s_fu_279_ap_idle,
        ap_ready => grp_sin_or_cos_float_s_fu_279_ap_ready,
        t_in => p_angle_reg_2403,
        do_cos => ap_const_lv1_1,
        ap_return => grp_sin_or_cos_float_s_fu_279_ap_return);

    control_r_s_axi_U : component foc_control_r_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_R_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_R_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_r_AWVALID,
        AWREADY => s_axi_control_r_AWREADY,
        AWADDR => s_axi_control_r_AWADDR,
        WVALID => s_axi_control_r_WVALID,
        WREADY => s_axi_control_r_WREADY,
        WDATA => s_axi_control_r_WDATA,
        WSTRB => s_axi_control_r_WSTRB,
        ARVALID => s_axi_control_r_ARVALID,
        ARREADY => s_axi_control_r_ARREADY,
        ARADDR => s_axi_control_r_ARADDR,
        RVALID => s_axi_control_r_RVALID,
        RREADY => s_axi_control_r_RREADY,
        RDATA => s_axi_control_r_RDATA,
        RRESP => s_axi_control_r_RRESP,
        BVALID => s_axi_control_r_BVALID,
        BREADY => s_axi_control_r_BREADY,
        BRESP => s_axi_control_r_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        control => control,
        ap_local_deadlock => ap_local_deadlock);

    faddfsub_32ns_32ns_32_4_full_dsp_1_U35 : component foc_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_294_p0,
        din1 => grp_fu_294_p1,
        opcode => grp_fu_294_opcode,
        ce => grp_fu_294_ce,
        dout => grp_fu_294_p2);

    faddfsub_32ns_32ns_32_4_full_dsp_1_U36 : component foc_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_301_p0,
        din1 => grp_fu_301_p1,
        opcode => grp_fu_301_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_301_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U37 : component foc_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mul_i3_reg_2433,
        din1 => mul3_i_reg_2438,
        ce => ap_const_logic_1,
        dout => grp_fu_307_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U38 : component foc_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_311_p0,
        din1 => grp_fu_311_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_311_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U39 : component foc_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_316_p0,
        din1 => grp_fu_316_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_316_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U40 : component foc_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_i_34_reg_2427,
        din1 => grp_fu_324_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_324_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U41 : component foc_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => tmp_i_reg_2421,
        din1 => grp_fu_328_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_328_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U42 : component foc_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_428,
        din1 => ap_const_lv32_40A00000,
        ce => ap_const_logic_1,
        dout => grp_fu_332_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U43 : component foc_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_401,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_337_p2);

    fdiv_32ns_32ns_32_9_no_dsp_1_U44 : component foc_fdiv_32ns_32ns_32_9_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => Theta_3_reg_2290,
        din1 => ap_const_lv32_447A0000,
        ce => ap_const_logic_1,
        dout => grp_fu_347_p2);

    sitofp_64s_32_4_no_dsp_1_U45 : component foc_sitofp_64s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_352_p0,
        ce => grp_fu_352_ce,
        dout => grp_fu_352_p1);

    sitofp_32s_32_4_no_dsp_1_U46 : component foc_sitofp_32s_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_356_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_356_p1);

    fptrunc_64ns_32_2_no_dsp_1_U47 : component foc_fptrunc_64ns_32_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => mul1_i_reg_2368,
        ce => ap_const_logic_1,
        dout => grp_fu_359_p1);

    fpext_32ns_64_2_no_dsp_1_U48 : component foc_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_413,
        ce => ap_const_logic_1,
        dout => grp_fu_364_p1);

    fcmp_32ns_32ns_1_2_no_dsp_1_U49 : component foc_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_367_p0,
        din1 => grp_fu_367_p1,
        ce => grp_fu_367_ce,
        opcode => grp_fu_367_opcode,
        dout => grp_fu_367_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U50 : component foc_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_373_p0,
        din1 => grp_fu_373_p1,
        ce => grp_fu_373_ce,
        opcode => grp_fu_373_opcode,
        dout => grp_fu_373_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U51 : component foc_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_380_p0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_380_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U52 : component foc_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_385_p0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_385_p2);

    dmul_64ns_64ns_64_5_max_dsp_1_U53 : component foc_dmul_64ns_64ns_64_5_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => conv_i_reg_2345,
        din1 => ap_const_lv64_400921FB5A7ED197,
        ce => ap_const_logic_1,
        dout => grp_fu_390_p2);

    regslice_both_A_V_data_V_U : component foc_regslice_both
    generic map (
        DataWidth => 80)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TDATA,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_data_V_U_ack_in,
        data_out => A_TDATA_int_regslice,
        vld_out => A_TVALID_int_regslice,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_data_V_U_apdone_blk);

    regslice_both_A_V_keep_V_U : component foc_regslice_both
    generic map (
        DataWidth => 10)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TKEEP,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_keep_V_U_ack_in,
        data_out => A_TKEEP_int_regslice,
        vld_out => regslice_both_A_V_keep_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_keep_V_U_apdone_blk);

    regslice_both_A_V_strb_V_U : component foc_regslice_both
    generic map (
        DataWidth => 10)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TSTRB,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_strb_V_U_ack_in,
        data_out => A_TSTRB_int_regslice,
        vld_out => regslice_both_A_V_strb_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_strb_V_U_apdone_blk);

    regslice_both_A_V_last_V_U : component foc_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => A_TLAST,
        vld_in => A_TVALID,
        ack_in => regslice_both_A_V_last_V_U_ack_in,
        data_out => A_TLAST_int_regslice,
        vld_out => regslice_both_A_V_last_V_U_vld_out,
        ack_out => A_TREADY_int_regslice,
        apdone_blk => regslice_both_A_V_last_V_U_apdone_blk);

    regslice_both_B_V_data_V_U : component foc_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => zext_ln78_fu_2248_p1,
        vld_in => B_TVALID_int_regslice,
        ack_in => B_TREADY_int_regslice,
        data_out => B_TDATA,
        vld_out => regslice_both_B_V_data_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_data_V_U_apdone_blk);

    regslice_both_B_V_keep_V_U : component foc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => B_TVALID_int_regslice,
        ack_in => regslice_both_B_V_keep_V_U_ack_in_dummy,
        data_out => B_TKEEP,
        vld_out => regslice_both_B_V_keep_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_keep_V_U_apdone_blk);

    regslice_both_B_V_strb_V_U : component foc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => B_TVALID_int_regslice,
        ack_in => regslice_both_B_V_strb_V_U_ack_in_dummy,
        data_out => B_TSTRB,
        vld_out => regslice_both_B_V_strb_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_strb_V_U_apdone_blk);

    regslice_both_B_V_last_V_U : component foc_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv1_0,
        vld_in => B_TVALID_int_regslice,
        ack_in => regslice_both_B_V_last_V_U_ack_in_dummy,
        data_out => B_TLAST,
        vld_out => regslice_both_B_V_last_V_U_vld_out,
        ack_out => B_TREADY,
        apdone_blk => regslice_both_B_V_last_V_U_apdone_blk);

    regslice_both_C_V_data_V_U : component foc_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => zext_ln78_fu_2248_p1,
        vld_in => C_TVALID_int_regslice,
        ack_in => C_TREADY_int_regslice,
        data_out => C_TDATA,
        vld_out => regslice_both_C_V_data_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_data_V_U_apdone_blk);

    regslice_both_C_V_keep_V_U : component foc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => C_TVALID_int_regslice,
        ack_in => regslice_both_C_V_keep_V_U_ack_in_dummy,
        data_out => C_TKEEP,
        vld_out => regslice_both_C_V_keep_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_keep_V_U_apdone_blk);

    regslice_both_C_V_strb_V_U : component foc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_0,
        vld_in => C_TVALID_int_regslice,
        ack_in => regslice_both_C_V_strb_V_U_ack_in_dummy,
        data_out => C_TSTRB,
        vld_out => regslice_both_C_V_strb_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_strb_V_U_apdone_blk);

    regslice_both_C_V_last_V_U : component foc_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv1_0,
        vld_in => C_TVALID_int_regslice,
        ack_in => regslice_both_C_V_last_V_U_ack_in_dummy,
        data_out => C_TLAST,
        vld_out => regslice_both_C_V_last_V_U_vld_out,
        ack_out => C_TREADY,
        apdone_blk => regslice_both_C_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_ready = ap_const_logic_1)) then 
                    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_264_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sin_or_cos_float_s_fu_264_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_sin_or_cos_float_s_fu_264_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_264_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_264_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sin_or_cos_float_s_fu_279_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sin_or_cos_float_s_fu_279_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_sin_or_cos_float_s_fu_279_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sin_or_cos_float_s_fu_279_ap_ready = ap_const_logic_1)) then 
                    grp_sin_or_cos_float_s_fu_279_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    storemerge_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                storemerge_reg_247 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln47_reg_2303 = ap_const_lv1_0))) then 
                storemerge_reg_247 <= add_ln59_fu_608_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                Angle_reg_2295 <= grp_fu_347_p2;
                icmp_ln47_reg_2303 <= icmp_ln47_fu_578_p2;
                velocity_accum <= grp_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln47_reg_2303 = ap_const_lv1_0))) then
                Ia_DC_acc <= grp_fu_294_p2;
                Ib_DC_acc <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                Ia_corr <= grp_fu_311_p2;
                Ib_corr <= grp_fu_316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                Ialpha_reg_2409 <= Ialpha_fu_775_p3;
                Ibeta_reg_2415 <= Ibeta_fu_793_p3;
                tmp_i_34_reg_2427 <= grp_sin_or_cos_float_s_fu_279_ap_return;
                tmp_i_reg_2421 <= grp_sin_or_cos_float_s_fu_264_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                Id_reg_2561 <= Id_fu_1099_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                Iq_reg_2511 <= Iq_fu_976_p3;
                ref_torque_reg_2516 <= ref_torque_fu_988_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                Theta_3_reg_2290 <= Theta_3_fu_561_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                Theta_reg_2269 <= Theta_fu_504_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state107)) then
                Va_2_reg_2754 <= Va_2_fu_1619_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state116)) then
                Vb_4_reg_2824 <= Vb_4_fu_1941_p3;
                Vc_4_reg_2829 <= Vc_4_fu_1953_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state100)) then
                Vbeta_reg_2705 <= Vbeta_fu_1499_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state87)) then
                Vd_reg_2639 <= Vd_fu_1315_p3;
                Vq_reg_2633 <= Vq_fu_1303_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                add_i1_reg_2363 <= grp_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                buffer_velocity_load_reg_2277 <= buffer_velocity_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                control_law_reg_2443 <= grp_fu_307_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                control_read_reg_2330 <= control;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                conv_i_reg_2345 <= grp_fu_364_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then
                dc_9_reg_2710 <= dc_9_fu_1511_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                dc_cnt <= storemerge_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                err_2_reg_2567 <= err_2_fu_1116_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                icmp_ln11_1_reg_2383 <= icmp_ln11_1_fu_716_p2;
                icmp_ln11_reg_2378 <= icmp_ln11_fu_710_p2;
                icmp_ln20_1_reg_2398 <= icmp_ln20_1_fu_759_p2;
                icmp_ln20_reg_2393 <= icmp_ln20_fu_753_p2;
                p_angle_reg_2403 <= grp_fu_359_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                ierr <= grp_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                mul1_i_reg_2368 <= grp_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                mul3_i_reg_2438 <= grp_fu_337_p2;
                mul_i3_reg_2433 <= grp_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state84)) then
                or_ln15_1_reg_2598 <= or_ln15_1_fu_1170_p2;
                or_ln15_2_reg_2613 <= or_ln15_2_fu_1256_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                or_ln15_reg_2491 <= or_ln15_fu_929_p2;
                or_ln25_reg_2476 <= or_ln25_fu_844_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state113)) then
                or_ln19_reg_2789 <= or_ln19_fu_1808_p2;
                or_ln23_reg_2804 <= or_ln23_fu_1894_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                or_ln21_1_reg_2685 <= or_ln21_1_fu_1452_p2;
                tmp_37_reg_2695 <= grp_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                or_ln21_reg_2546 <= or_ln21_fu_1052_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state97)) then
                or_ln25_1_reg_2670 <= or_ln25_1_fu_1366_p2;
                tmp_33_reg_2655 <= grp_fu_367_p2;
                tmp_34_reg_2660 <= grp_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state104)) then
                or_ln9_reg_2734 <= or_ln9_fu_1561_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_395 <= grp_fu_352_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state94) or (ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (ap_const_boolean_0 = ap_block_state41_on_subcall_done)))) then
                reg_401 <= grp_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state62))) then
                reg_413 <= grp_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state32))) then
                reg_423 <= grp_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state33))) then
                reg_428 <= grp_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state36))) then
                reg_436 <= grp_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state44))) then
                reg_442 <= grp_fu_316_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state44))) then
                reg_450 <= grp_fu_324_p2;
                reg_455 <= grp_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state94))) then
                reg_460 <= grp_fu_301_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state108)) then
                result_V_reg_2759 <= result_V_fu_1757_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                tmp_12_reg_2501 <= grp_fu_367_p2;
                tmp_17_reg_2506 <= grp_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                tmp_13_reg_2451 <= grp_fu_367_p2;
                tmp_14_reg_2456 <= grp_fu_373_p2;
                tmp_18_reg_2461 <= grp_fu_380_p2;
                tmp_19_reg_2466 <= grp_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                tmp_22_reg_2623 <= grp_fu_367_p2;
                tmp_27_reg_2628 <= grp_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                tmp_23_reg_2573 <= grp_fu_367_p2;
                tmp_24_reg_2578 <= grp_fu_373_p2;
                tmp_28_reg_2583 <= grp_fu_380_p2;
                tmp_29_reg_2588 <= grp_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then
                tmp_32_reg_2700 <= grp_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then
                tmp_38_reg_2645 <= grp_fu_367_p2;
                tmp_39_reg_2650 <= grp_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                tmp_3_reg_2556 <= grp_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state105)) then
                tmp_42_reg_2749 <= grp_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state103)) then
                tmp_43_reg_2719 <= grp_fu_367_p2;
                tmp_44_reg_2724 <= grp_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state114)) then
                tmp_47_reg_2814 <= grp_fu_367_p2;
                tmp_52_reg_2819 <= grp_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state112)) then
                tmp_48_reg_2764 <= grp_fu_367_p2;
                tmp_49_reg_2769 <= grp_fu_373_p2;
                tmp_53_reg_2774 <= grp_fu_380_p2;
                tmp_54_reg_2779 <= grp_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                tmp_6_reg_2531 <= grp_fu_367_p2;
                tmp_9_reg_2536 <= grp_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                tmp_reg_2264 <= A_TDATA_int_regslice(79 downto 79);
                trunc_ln_reg_2254 <= A_TDATA_int_regslice(63 downto 48);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                xor_ln11_1_reg_2521 <= xor_ln11_1_fu_999_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                xor_ln11_reg_2353 <= xor_ln11_fu_669_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state41, ap_block_state41_on_subcall_done, ap_CS_fsm_state21, ap_CS_fsm_state12, icmp_ln47_fu_578_p2, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done, ap_block_state117_io, regslice_both_B_V_data_V_U_apdone_blk, regslice_both_C_V_data_V_U_apdone_blk, ap_block_state118_io, A_TVALID_int_regslice, B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = A_TVALID_int_regslice) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln47_fu_578_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state41) and (ap_const_boolean_0 = ap_block_state41_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                if ((not(((ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state117_io))) and (ap_const_logic_1 = ap_CS_fsm_state117))) then
                    ap_NS_fsm <= ap_ST_fsm_state118;
                else
                    ap_NS_fsm <= ap_ST_fsm_state117;
                end if;
            when ap_ST_fsm_state118 => 
                if ((not(((regslice_both_C_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state118_io))) and (ap_const_logic_1 = ap_CS_fsm_state118))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state118;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, A_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            A_TDATA_blk_n <= A_TVALID_int_regslice;
        else 
            A_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    A_TREADY <= regslice_both_A_V_data_V_U_ack_in;

    A_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state1, A_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = A_TVALID_int_regslice) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            A_TREADY_int_regslice <= ap_const_logic_1;
        else 
            A_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    B_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state117, ap_CS_fsm_state118, B_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117))) then 
            B_TDATA_blk_n <= B_TREADY_int_regslice;
        else 
            B_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    B_TVALID <= regslice_both_B_V_data_V_U_vld_out;

    B_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state117, ap_block_state117_io, B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
        if ((not(((ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state117_io))) and (ap_const_logic_1 = ap_CS_fsm_state117))) then 
            B_TVALID_int_regslice <= ap_const_logic_1;
        else 
            B_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    C_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state117, ap_CS_fsm_state118, C_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117))) then 
            C_TDATA_blk_n <= C_TREADY_int_regslice;
        else 
            C_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_TVALID <= regslice_both_C_V_data_V_U_vld_out;

    C_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state117, ap_block_state117_io, B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
        if ((not(((ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state117_io))) and (ap_const_logic_1 = ap_CS_fsm_state117))) then 
            C_TVALID_int_regslice <= ap_const_logic_1;
        else 
            C_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    Ialpha_fu_775_p3 <= 
        reg_401 when (and_ln11_fu_769_p2(0) = '1') else 
        ap_const_lv32_0;
    Ibeta_fu_793_p3 <= 
        ap_const_lv32_0 when (and_ln20_fu_787_p2(0) = '1') else 
        reg_423;
    Id_fu_1099_p3 <= 
        grp_fu_352_p1 when (and_ln21_fu_1095_p2(0) = '1') else 
        reg_428;
    Iq_fu_976_p3 <= 
        grp_fu_352_p1 when (and_ln25_fu_972_p2(0) = '1') else 
        reg_460;
    Theta_3_fu_561_p3 <= 
        grp_fu_294_p2 when (and_ln30_fu_555_p2(0) = '1') else 
        Theta_reg_2269;
    Theta_fu_504_p3 <= 
        grp_fu_294_p2 when (tmp_reg_2264(0) = '1') else 
        reg_395;
    Va_2_fu_1619_p3 <= 
        dc_9_reg_2710 when (and_ln9_fu_1615_p2(0) = '1') else 
        grp_fu_352_p1;
    Vb_4_fu_1941_p3 <= 
        grp_fu_352_p1 when (and_ln19_fu_1937_p2(0) = '1') else 
        reg_413;
    Vbeta_fu_1499_p3 <= 
        grp_fu_352_p1 when (and_ln25_1_fu_1495_p2(0) = '1') else 
        reg_460;
    Vc_4_fu_1953_p3 <= 
        grp_fu_356_p1 when (and_ln23_fu_1949_p2(0) = '1') else 
        reg_442;
    Vd_fu_1315_p3 <= 
        grp_fu_356_p1 when (and_ln15_2_fu_1311_p2(0) = '1') else 
        reg_401;
    Vq_fu_1303_p3 <= 
        grp_fu_352_p1 when (and_ln15_1_fu_1299_p2(0) = '1') else 
        reg_428;
    add_ln344_1_fu_2004_p2 <= std_logic_vector(unsigned(zext_ln344_1_fu_2000_p1) + unsigned(ap_const_lv9_181));
    add_ln344_2_fu_2143_p2 <= std_logic_vector(unsigned(zext_ln344_2_fu_2139_p1) + unsigned(ap_const_lv9_181));
    add_ln344_fu_1669_p2 <= std_logic_vector(unsigned(zext_ln344_fu_1665_p1) + unsigned(ap_const_lv9_181));
    add_ln59_fu_608_p2 <= std_logic_vector(unsigned(dc_cnt) + unsigned(ap_const_lv32_1));
    and_ln10_10_fu_1458_p2 <= (tmp_33_reg_2655 and or_ln21_1_fu_1452_p2);
    and_ln10_11_fu_1467_p2 <= (tmp_34_reg_2660 and or_ln21_1_fu_1452_p2);
    and_ln10_12_fu_1372_p2 <= (tmp_38_reg_2645 and or_ln25_1_fu_1366_p2);
    and_ln10_13_fu_1381_p2 <= (tmp_39_reg_2650 and or_ln25_1_fu_1366_p2);
    and_ln10_14_fu_1567_p2 <= (tmp_43_reg_2719 and or_ln9_fu_1561_p2);
    and_ln10_15_fu_1576_p2 <= (tmp_44_reg_2724 and or_ln9_fu_1561_p2);
    and_ln10_16_fu_1814_p2 <= (tmp_48_reg_2764 and or_ln19_fu_1808_p2);
    and_ln10_17_fu_1823_p2 <= (tmp_49_reg_2769 and or_ln19_fu_1808_p2);
    and_ln10_18_fu_1900_p2 <= (tmp_53_reg_2774 and or_ln23_fu_1894_p2);
    and_ln10_19_fu_1909_p2 <= (tmp_54_reg_2779 and or_ln23_fu_1894_p2);
    and_ln10_1_fu_1067_p2 <= (tmp_9_reg_2536 and or_ln21_fu_1052_p2);
    and_ln10_2_fu_850_p2 <= (tmp_13_reg_2451 and or_ln25_fu_844_p2);
    and_ln10_3_fu_859_p2 <= (tmp_14_reg_2456 and or_ln25_fu_844_p2);
    and_ln10_4_fu_935_p2 <= (tmp_18_reg_2461 and or_ln15_fu_929_p2);
    and_ln10_5_fu_944_p2 <= (tmp_19_reg_2466 and or_ln15_fu_929_p2);
    and_ln10_6_fu_1176_p2 <= (tmp_23_reg_2573 and or_ln15_1_fu_1170_p2);
    and_ln10_7_fu_1185_p2 <= (tmp_24_reg_2578 and or_ln15_1_fu_1170_p2);
    and_ln10_8_fu_1262_p2 <= (tmp_28_reg_2583 and or_ln15_2_fu_1256_p2);
    and_ln10_9_fu_1271_p2 <= (tmp_29_reg_2588 and or_ln15_2_fu_1256_p2);
    and_ln10_fu_1058_p2 <= (tmp_6_reg_2531 and or_ln21_fu_1052_p2);
    and_ln11_fu_769_p2 <= (or_ln11_fu_765_p2 and grp_fu_367_p2);
    and_ln15_1_fu_1299_p2 <= (tmp_22_reg_2623 and or_ln15_1_reg_2598);
    and_ln15_2_fu_1311_p2 <= (tmp_27_reg_2628 and or_ln15_2_reg_2613);
    and_ln15_fu_984_p2 <= (tmp_17_reg_2506 and or_ln15_reg_2491);
    and_ln19_fu_1937_p2 <= (tmp_47_reg_2814 and or_ln19_reg_2789);
    and_ln20_fu_787_p2 <= (or_ln20_fu_783_p2 and grp_fu_373_p2);
    and_ln21_1_fu_1507_p2 <= (tmp_32_reg_2700 and or_ln21_1_reg_2685);
    and_ln21_fu_1095_p2 <= (tmp_3_reg_2556 and or_ln21_reg_2546);
    and_ln23_fu_1949_p2 <= (tmp_52_reg_2819 and or_ln23_reg_2804);
    and_ln25_1_fu_1495_p2 <= (tmp_37_reg_2695 and or_ln25_1_reg_2670);
    and_ln25_fu_972_p2 <= (tmp_12_reg_2501 and or_ln25_reg_2476);
    and_ln30_fu_555_p2 <= (or_ln30_fu_549_p2 and grp_fu_367_p2);
    and_ln9_fu_1615_p2 <= (tmp_42_reg_2749 and or_ln9_reg_2734);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state103 <= ap_CS_fsm(102);
    ap_CS_fsm_state104 <= ap_CS_fsm(103);
    ap_CS_fsm_state105 <= ap_CS_fsm(104);
    ap_CS_fsm_state106 <= ap_CS_fsm(105);
    ap_CS_fsm_state107 <= ap_CS_fsm(106);
    ap_CS_fsm_state108 <= ap_CS_fsm(107);
    ap_CS_fsm_state109 <= ap_CS_fsm(108);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(109);
    ap_CS_fsm_state111 <= ap_CS_fsm(110);
    ap_CS_fsm_state112 <= ap_CS_fsm(111);
    ap_CS_fsm_state113 <= ap_CS_fsm(112);
    ap_CS_fsm_state114 <= ap_CS_fsm(113);
    ap_CS_fsm_state115 <= ap_CS_fsm(114);
    ap_CS_fsm_state116 <= ap_CS_fsm(115);
    ap_CS_fsm_state117 <= ap_CS_fsm(116);
    ap_CS_fsm_state118 <= ap_CS_fsm(117);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state88 <= ap_CS_fsm(87);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state91 <= ap_CS_fsm(90);
    ap_CS_fsm_state94 <= ap_CS_fsm(93);
    ap_CS_fsm_state95 <= ap_CS_fsm(94);
    ap_CS_fsm_state96 <= ap_CS_fsm(95);
    ap_CS_fsm_state97 <= ap_CS_fsm(96);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);
    ap_ST_fsm_state100_blk <= ap_const_logic_0;
    ap_ST_fsm_state101_blk <= ap_const_logic_0;
    ap_ST_fsm_state102_blk <= ap_const_logic_0;
    ap_ST_fsm_state103_blk <= ap_const_logic_0;
    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;
    ap_ST_fsm_state106_blk <= ap_const_logic_0;
    ap_ST_fsm_state107_blk <= ap_const_logic_0;
    ap_ST_fsm_state108_blk <= ap_const_logic_0;
    ap_ST_fsm_state109_blk <= ap_const_logic_0;
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state110_blk <= ap_const_logic_0;
    ap_ST_fsm_state111_blk <= ap_const_logic_0;
    ap_ST_fsm_state112_blk <= ap_const_logic_0;
    ap_ST_fsm_state113_blk <= ap_const_logic_0;
    ap_ST_fsm_state114_blk <= ap_const_logic_0;
    ap_ST_fsm_state115_blk <= ap_const_logic_0;
    ap_ST_fsm_state116_blk <= ap_const_logic_0;

    ap_ST_fsm_state117_blk_assign_proc : process(ap_block_state117_io, B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
        if (((ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state117_io))) then 
            ap_ST_fsm_state117_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state117_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state118_blk_assign_proc : process(regslice_both_B_V_data_V_U_apdone_blk, regslice_both_C_V_data_V_U_apdone_blk, ap_block_state118_io, B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
        if (((regslice_both_C_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state118_io))) then 
            ap_ST_fsm_state118_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state118_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done)
    begin
        if ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(A_TVALID_int_regslice)
    begin
        if ((ap_const_logic_0 = A_TVALID_int_regslice)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;

    ap_ST_fsm_state41_blk_assign_proc : process(ap_block_state41_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state41_on_subcall_done)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state88_blk <= ap_const_logic_0;
    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state90_blk <= ap_const_logic_0;
    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;
    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;
    ap_ST_fsm_state97_blk <= ap_const_logic_0;
    ap_ST_fsm_state98_blk <= ap_const_logic_0;
    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state117_assign_proc : process(B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
                ap_block_state117 <= ((ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice));
    end process;


    ap_block_state117_io_assign_proc : process(B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
                ap_block_state117_io <= ((ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice));
    end process;


    ap_block_state118_assign_proc : process(regslice_both_B_V_data_V_U_apdone_blk, regslice_both_C_V_data_V_U_apdone_blk, B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
                ap_block_state118 <= ((regslice_both_C_V_data_V_U_apdone_blk = ap_const_logic_1) or (regslice_both_B_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice));
    end process;


    ap_block_state118_io_assign_proc : process(B_TREADY_int_regslice, C_TREADY_int_regslice)
    begin
                ap_block_state118_io <= ((ap_const_logic_0 = C_TREADY_int_regslice) or (ap_const_logic_0 = B_TREADY_int_regslice));
    end process;


    ap_block_state41_on_subcall_done_assign_proc : process(grp_sin_or_cos_float_s_fu_264_ap_done, grp_sin_or_cos_float_s_fu_279_ap_done)
    begin
                ap_block_state41_on_subcall_done <= ((grp_sin_or_cos_float_s_fu_279_ap_done = ap_const_logic_0) or (grp_sin_or_cos_float_s_fu_264_ap_done = ap_const_logic_0));
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln10_fu_1107_p1 <= Id_reg_2561;
    bitcast_ln11_1_fu_675_p1 <= xor_ln11_reg_2353;
    bitcast_ln11_2_fu_995_p1 <= reg_436;
    bitcast_ln11_3_fu_1005_p1 <= xor_ln11_1_reg_2521;
    bitcast_ln11_fu_665_p1 <= reg_428;
    bitcast_ln17_fu_1610_p1 <= xor_ln17_fu_1604_p2;
    bitcast_ln30_fu_520_p1 <= Theta_reg_2269;
    bitcast_ln354_10_fu_1139_p1 <= zext_ln368_5_fu_1135_p1;
    bitcast_ln354_11_fu_1225_p1 <= zext_ln368_6_fu_1221_p1;
    bitcast_ln354_1_fu_734_p1 <= zext_ln368_1_fu_730_p1;
    bitcast_ln354_2_fu_1021_p1 <= zext_ln368_2_fu_1017_p1;
    bitcast_ln354_3_fu_813_p1 <= zext_ln368_3_fu_809_p1;
    bitcast_ln354_4_fu_1421_p1 <= zext_ln368_7_fu_1417_p1;
    bitcast_ln354_5_fu_1335_p1 <= zext_ln368_8_fu_1331_p1;
    bitcast_ln354_6_fu_1530_p1 <= zext_ln368_9_fu_1526_p1;
    bitcast_ln354_7_fu_1777_p1 <= zext_ln368_10_fu_1773_p1;
    bitcast_ln354_8_fu_1863_p1 <= zext_ln368_11_fu_1859_p1;
    bitcast_ln354_9_fu_898_p1 <= zext_ln368_4_fu_894_p1;
    bitcast_ln354_fu_691_p1 <= zext_ln368_fu_687_p1;
    bitcast_ln54_fu_656_p1 <= control_read_reg_2330;
    bitcast_ln70_fu_641_p1 <= reg_413;

    buffer_velocity_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state12, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buffer_velocity_address0 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buffer_velocity_address0 <= ap_const_lv5_1F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            buffer_velocity_address0 <= grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_address0;
        else 
            buffer_velocity_address0 <= "XXXXX";
        end if; 
    end process;


    buffer_velocity_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state12, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            buffer_velocity_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            buffer_velocity_ce0 <= grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_ce0;
        else 
            buffer_velocity_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_velocity_d0_assign_proc : process(grp_fu_352_p1, ap_CS_fsm_state14, ap_CS_fsm_state12, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buffer_velocity_d0 <= grp_fu_352_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            buffer_velocity_d0 <= grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_d0;
        else 
            buffer_velocity_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_velocity_we0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state12, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            buffer_velocity_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            buffer_velocity_we0 <= grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_buffer_velocity_we0;
        else 
            buffer_velocity_we0 <= ap_const_logic_0;
        end if; 
    end process;

    data_V_10_fu_1765_p1 <= reg_413;
    data_V_11_fu_1851_p1 <= reg_442;
    data_V_12_fu_1626_p1 <= Va_2_reg_2754;
    data_V_13_fu_1961_p1 <= Vb_4_reg_2824;
    data_V_14_fu_2100_p1 <= Vc_4_reg_2829;
    data_V_1_fu_722_p1 <= reg_423;
    data_V_2_fu_1009_p1 <= reg_428;
    data_V_3_fu_801_p1 <= reg_460;
    data_V_4_fu_887_p1 <= control_law_reg_2443;
    data_V_5_fu_1127_p1 <= reg_428;
    data_V_6_fu_1213_p1 <= reg_401;
    data_V_7_fu_1409_p1 <= reg_401;
    data_V_8_fu_1323_p1 <= reg_460;
    data_V_9_fu_1519_p1 <= dc_9_reg_2710;
    data_V_fu_679_p1 <= reg_401;
    dc_9_fu_1511_p3 <= 
        grp_fu_352_p1 when (and_ln21_1_fu_1507_p2(0) = '1') else 
        reg_401;
    err_2_fu_1116_p1 <= xor_ln10_fu_1110_p2;
    grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start <= grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_start_reg;

    grp_fu_294_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state117, ap_CS_fsm_state118, ap_CS_fsm_state4, ap_CS_fsm_state41, ap_block_state41_on_subcall_done, ap_CS_fsm_state44, ap_CS_fsm_state77, ap_CS_fsm_state90, ap_CS_fsm_state103, ap_CS_fsm_state110, ap_CS_fsm_state12, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state87, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state108, ap_CS_fsm_state112, ap_CS_fsm_state113, ap_CS_fsm_state114, ap_CS_fsm_state116, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done, ap_CS_fsm_state26, ap_CS_fsm_state19, ap_CS_fsm_state42, ap_CS_fsm_state75, ap_CS_fsm_state88, ap_CS_fsm_state49, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state20, ap_CS_fsm_state25, ap_CS_fsm_state43, ap_CS_fsm_state53, ap_CS_fsm_state76, ap_CS_fsm_state86, ap_CS_fsm_state89, ap_CS_fsm_state109, ap_CS_fsm_state115)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state89) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state42) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (ap_const_boolean_1 = ap_block_state41_on_subcall_done)) or ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            grp_fu_294_ce <= ap_const_logic_0;
        else 
            grp_fu_294_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_294_opcode_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state70, ap_CS_fsm_state21, ap_CS_fsm_state33, tmp_reg_2264, ap_CS_fsm_state11, icmp_ln47_fu_578_p2, ap_CS_fsm_state24, ap_CS_fsm_state30, ap_CS_fsm_state34, ap_CS_fsm_state38, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state67, ap_CS_fsm_state104, ap_CS_fsm_state9, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state45, ap_CS_fsm_state55, ap_CS_fsm_state71, ap_CS_fsm_state78, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_294_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state70) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (tmp_reg_2264 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln47_fu_578_p2 = ap_const_lv1_0)))) then 
            grp_fu_294_opcode <= ap_const_lv2_0;
        else 
            grp_fu_294_opcode <= "XX";
        end if; 
    end process;


    grp_fu_294_p0_assign_proc : process(velocity_accum, Ia_DC_acc, ierr, reg_395, reg_401, ap_CS_fsm_state29, ap_CS_fsm_state70, reg_413, ap_CS_fsm_state21, ap_CS_fsm_state33, Theta_reg_2269, ap_CS_fsm_state11, ap_CS_fsm_state24, ap_CS_fsm_state30, bitcast_ln54_fu_656_p1, ap_CS_fsm_state34, add_i1_reg_2363, ap_CS_fsm_state38, ref_torque_reg_2516, ap_CS_fsm_state59, ap_CS_fsm_state63, ap_CS_fsm_state67, ap_CS_fsm_state104, ap_CS_fsm_state9, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state45, ap_CS_fsm_state55, ap_CS_fsm_state71, ap_CS_fsm_state78, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_294_p0 <= ref_torque_reg_2516;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            grp_fu_294_p0 <= reg_413;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_294_p0 <= add_i1_reg_2363;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_294_p0 <= ierr;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_294_p0 <= bitcast_ln54_fu_656_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_294_p0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_294_p0 <= Ia_DC_acc;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            grp_fu_294_p0 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_294_p0 <= velocity_accum;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_294_p0 <= Theta_reg_2269;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_294_p0 <= reg_395;
        else 
            grp_fu_294_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_294_p1_assign_proc : process(Ia_corr, Ib_corr, reg_395, ap_CS_fsm_state29, ap_CS_fsm_state70, reg_413, ap_CS_fsm_state21, reg_423, reg_428, ap_CS_fsm_state33, reg_436, reg_442, reg_455, buffer_velocity_load_reg_2277, ap_CS_fsm_state11, ap_CS_fsm_state24, vel_corr_fu_651_p1, ap_CS_fsm_state30, ap_CS_fsm_state34, ap_CS_fsm_state38, Iq_reg_2511, ap_CS_fsm_state59, ap_CS_fsm_state63, err_2_fu_1116_p1, ap_CS_fsm_state67, dc_9_reg_2710, ap_CS_fsm_state104, ap_CS_fsm_state9, ap_CS_fsm_state5, ap_CS_fsm_state15, ap_CS_fsm_state45, ap_CS_fsm_state55, ap_CS_fsm_state71, ap_CS_fsm_state78, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            grp_fu_294_p1 <= dc_9_reg_2710;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            grp_fu_294_p1 <= reg_442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_294_p1 <= err_2_fu_1116_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            grp_fu_294_p1 <= reg_436;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_fu_294_p1 <= Iq_reg_2511;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            grp_fu_294_p1 <= reg_455;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            grp_fu_294_p1 <= reg_413;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            grp_fu_294_p1 <= reg_428;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            grp_fu_294_p1 <= reg_423;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_294_p1 <= vel_corr_fu_651_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_294_p1 <= Ia_corr;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_294_p1 <= Ib_corr;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_294_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_294_p1 <= reg_395;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_294_p1 <= buffer_velocity_load_reg_2277;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_294_p1 <= ap_const_lv32_C47A0000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_294_p1 <= ap_const_lv32_447A0000;
        else 
            grp_fu_294_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_301_opcode_assign_proc : process(ap_CS_fsm_state21, icmp_ln47_fu_578_p2, ap_CS_fsm_state104, ap_CS_fsm_state45, ap_CS_fsm_state91)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state104))) then 
            grp_fu_301_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln47_fu_578_p2 = ap_const_lv1_0)))) then 
            grp_fu_301_opcode <= ap_const_lv2_0;
        else 
            grp_fu_301_opcode <= "XX";
        end if; 
    end process;


    grp_fu_301_p0_assign_proc : process(Ib_DC_acc, ap_CS_fsm_state21, reg_450, ap_CS_fsm_state104, bitcast_ln17_fu_1610_p1, ap_CS_fsm_state45, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            grp_fu_301_p0 <= bitcast_ln17_fu_1610_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            grp_fu_301_p0 <= reg_450;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_301_p0 <= Ib_DC_acc;
        else 
            grp_fu_301_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_301_p1_assign_proc : process(reg_413, ap_CS_fsm_state21, reg_442, ap_CS_fsm_state104, ap_CS_fsm_state45, ap_CS_fsm_state91)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            grp_fu_301_p1 <= reg_413;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state91) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            grp_fu_301_p1 <= reg_442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_301_p1 <= ap_const_lv32_0;
        else 
            grp_fu_301_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_311_p0_assign_proc : process(Ia_DC_acc, reg_401, ap_CS_fsm_state29, ap_CS_fsm_state21, ap_CS_fsm_state37, reg_436, Angle_reg_2295, ap_CS_fsm_state30, bitcast_ln11_1_fu_675_p1, ap_CS_fsm_state35, tmp_i_34_reg_2427, bitcast_ln11_3_fu_1005_p1, ap_CS_fsm_state60, Id_reg_2561, err_2_reg_2567, ap_CS_fsm_state67, Vbeta_reg_2705, ap_CS_fsm_state101, ap_CS_fsm_state108, ap_CS_fsm_state19, ap_CS_fsm_state42, ap_CS_fsm_state68, ap_CS_fsm_state75, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_fu_311_p0 <= Vbeta_reg_2705;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_311_p0 <= err_2_reg_2567;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            grp_fu_311_p0 <= Id_reg_2561;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_311_p0 <= bitcast_ln11_3_fu_1005_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            grp_fu_311_p0 <= tmp_i_34_reg_2427;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            grp_fu_311_p0 <= reg_436;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_311_p0 <= bitcast_ln11_1_fu_675_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_311_p0 <= Angle_reg_2295;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_311_p0 <= Ia_DC_acc;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_311_p0 <= reg_401;
        else 
            grp_fu_311_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_311_p1_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state21, ap_CS_fsm_state37, ap_CS_fsm_state30, ap_CS_fsm_state35, Ialpha_reg_2409, ap_CS_fsm_state60, ap_CS_fsm_state67, Vd_reg_2639, ap_CS_fsm_state101, ap_CS_fsm_state108, ap_CS_fsm_state19, ap_CS_fsm_state42, ap_CS_fsm_state68, ap_CS_fsm_state75, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
            grp_fu_311_p1 <= ap_const_lv32_3FDDB22D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_311_p1 <= Vd_reg_2639;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_311_p1 <= ap_const_lv32_40A00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_311_p1 <= ap_const_lv32_40400000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_311_p1 <= Ialpha_reg_2409;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_311_p1 <= ap_const_lv32_3F13CD36;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            grp_fu_311_p1 <= ap_const_lv32_3F000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_fu_311_p1 <= ap_const_lv32_40000000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            grp_fu_311_p1 <= ap_const_lv32_3D000000;
        else 
            grp_fu_311_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_316_p0_assign_proc : process(Ib_DC_acc, reg_401, ap_CS_fsm_state21, reg_460, tmp_i_reg_2421, ap_CS_fsm_state67, ap_CS_fsm_state108, ap_CS_fsm_state42, ap_CS_fsm_state75, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            grp_fu_316_p0 <= reg_460;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            grp_fu_316_p0 <= reg_401;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state88) or (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            grp_fu_316_p0 <= tmp_i_reg_2421;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_316_p0 <= Ib_DC_acc;
        else 
            grp_fu_316_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_316_p1_assign_proc : process(ap_CS_fsm_state21, Ialpha_reg_2409, ap_CS_fsm_state67, Vd_reg_2639, ap_CS_fsm_state108, ap_CS_fsm_state42, ap_CS_fsm_state75, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_316_p1 <= Vd_reg_2639;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_fu_316_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state67))) then 
            grp_fu_316_p1 <= ap_const_lv32_3F000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_316_p1 <= Ialpha_reg_2409;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_316_p1 <= ap_const_lv32_3D000000;
        else 
            grp_fu_316_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_324_p1_assign_proc : process(Ibeta_reg_2415, Vq_reg_2633, ap_CS_fsm_state42, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_324_p1 <= Vq_reg_2633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_324_p1 <= Ibeta_reg_2415;
        else 
            grp_fu_324_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_328_p1_assign_proc : process(Ibeta_reg_2415, Vq_reg_2633, ap_CS_fsm_state42, ap_CS_fsm_state88)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state88)) then 
            grp_fu_328_p1 <= Vq_reg_2633;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_328_p1 <= Ibeta_reg_2415;
        else 
            grp_fu_328_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_352_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state14, ap_CS_fsm_state66, ap_CS_fsm_state107, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state54, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state87, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state100, ap_CS_fsm_state101, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state113, ap_CS_fsm_state114, ap_CS_fsm_state116, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done, ap_CS_fsm_state13, ap_CS_fsm_state65, ap_CS_fsm_state106, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state53, ap_CS_fsm_state86, ap_CS_fsm_state115, A_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state87) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_logic_1 = A_TVALID_int_regslice) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            grp_fu_352_ce <= ap_const_logic_1;
        else 
            grp_fu_352_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_352_p0_assign_proc : process(ap_CS_fsm_state1, sext_ln27_fu_491_p1, zext_ln26_fu_511_p1, ap_CS_fsm_state11, ap_CS_fsm_state51, sext_ln26_fu_882_p1, ap_CS_fsm_state63, sext_ln22_fu_1090_p1, ap_CS_fsm_state84, sext_ln16_1_fu_1208_p1, ap_CS_fsm_state97, sext_ln26_1_fu_1404_p1, ap_CS_fsm_state98, sext_ln22_1_fu_1490_p1, ap_CS_fsm_state104, sext_ln12_fu_1599_p1, ap_CS_fsm_state113, sext_ln20_fu_1846_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln20_fu_1846_p1),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln12_fu_1599_p1),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln22_1_fu_1490_p1),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln26_1_fu_1404_p1),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln16_1_fu_1208_p1),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln22_fu_1090_p1),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln26_fu_882_p1),64));

        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_352_p0 <= zext_ln26_fu_511_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                        grp_fu_352_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln27_fu_491_p1),64));

        else 
            grp_fu_352_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_356_p0_assign_proc : process(ap_CS_fsm_state51, sext_ln16_fu_967_p1, ap_CS_fsm_state84, sext_ln16_2_fu_1294_p1, ap_CS_fsm_state113, sext_ln24_fu_1932_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_fu_356_p0 <= sext_ln24_fu_1932_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_356_p0 <= sext_ln16_2_fu_1294_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_356_p0 <= sext_ln16_fu_967_p1;
        else 
            grp_fu_356_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_367_ce_assign_proc : process(ap_CS_fsm_state41, ap_block_state41_on_subcall_done, ap_CS_fsm_state62, ap_CS_fsm_state103, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state40, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state63, ap_CS_fsm_state64, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state99, ap_CS_fsm_state104, ap_CS_fsm_state105, ap_CS_fsm_state112, ap_CS_fsm_state113, ap_CS_fsm_state114, grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (ap_const_boolean_0 = ap_block_state41_on_subcall_done)) or ((grp_foc_Pipeline_VITIS_LOOP_13_1_fu_258_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            grp_fu_367_ce <= ap_const_logic_1;
        else 
            grp_fu_367_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_367_opcode_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state40, ap_CS_fsm_state51, ap_CS_fsm_state63, ap_CS_fsm_state84, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state104, ap_CS_fsm_state113, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_367_opcode <= ap_const_lv5_2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            grp_fu_367_opcode <= ap_const_lv5_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_367_opcode <= ap_const_lv5_3;
        else 
            grp_fu_367_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_367_p0_assign_proc : process(reg_401, reg_413, reg_428, reg_460, Theta_reg_2269, ap_CS_fsm_state11, bitcast_ln354_fu_691_p1, ap_CS_fsm_state40, bitcast_ln354_3_fu_813_p1, ap_CS_fsm_state51, bitcast_ln354_2_fu_1021_p1, ap_CS_fsm_state63, bitcast_ln354_10_fu_1139_p1, ap_CS_fsm_state84, ap_CS_fsm_state96, ap_CS_fsm_state97, bitcast_ln354_5_fu_1335_p1, bitcast_ln354_4_fu_1421_p1, ap_CS_fsm_state98, dc_9_reg_2710, bitcast_ln354_6_fu_1530_p1, ap_CS_fsm_state104, bitcast_ln354_7_fu_1777_p1, ap_CS_fsm_state113, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_fu_367_p0 <= bitcast_ln354_7_fu_1777_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_fu_367_p0 <= reg_413;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state104)) then 
            grp_fu_367_p0 <= bitcast_ln354_6_fu_1530_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            grp_fu_367_p0 <= dc_9_reg_2710;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state98)) then 
            grp_fu_367_p0 <= bitcast_ln354_4_fu_1421_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
            grp_fu_367_p0 <= bitcast_ln354_5_fu_1335_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_fu_367_p0 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_367_p0 <= bitcast_ln354_10_fu_1139_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_367_p0 <= bitcast_ln354_2_fu_1021_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            grp_fu_367_p0 <= reg_428;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_367_p0 <= bitcast_ln354_3_fu_813_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_367_p0 <= reg_460;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_367_p0 <= bitcast_ln354_fu_691_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_367_p0 <= Theta_reg_2269;
        else 
            grp_fu_367_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_367_p1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state40, ap_CS_fsm_state51, ap_CS_fsm_state63, ap_CS_fsm_state84, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state98, ap_CS_fsm_state104, ap_CS_fsm_state113, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_367_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            grp_fu_367_p1 <= ap_const_lv32_47000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_367_p1 <= ap_const_lv32_447A0000;
        else 
            grp_fu_367_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_373_ce_assign_proc : process(ap_CS_fsm_state41, ap_block_state41_on_subcall_done, ap_CS_fsm_state62, ap_CS_fsm_state103, ap_CS_fsm_state40, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state96, ap_CS_fsm_state97, ap_CS_fsm_state112, ap_CS_fsm_state113, ap_CS_fsm_state114, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state85) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (ap_const_boolean_0 = ap_block_state41_on_subcall_done)))) then 
            grp_fu_373_ce <= ap_const_logic_1;
        else 
            grp_fu_373_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_373_opcode_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state51, ap_CS_fsm_state84, ap_CS_fsm_state96, ap_CS_fsm_state113, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_373_opcode <= ap_const_lv5_4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            grp_fu_373_opcode <= ap_const_lv5_2;
        else 
            grp_fu_373_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_373_p0_assign_proc : process(reg_401, reg_413, reg_428, reg_460, ap_CS_fsm_state40, bitcast_ln354_1_fu_734_p1, ap_CS_fsm_state51, bitcast_ln354_9_fu_898_p1, ap_CS_fsm_state84, bitcast_ln354_11_fu_1225_p1, ap_CS_fsm_state96, dc_9_reg_2710, ap_CS_fsm_state113, bitcast_ln354_8_fu_1863_p1, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state113)) then 
            grp_fu_373_p0 <= bitcast_ln354_8_fu_1863_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_fu_373_p0 <= reg_413;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            grp_fu_373_p0 <= dc_9_reg_2710;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state96)) then 
            grp_fu_373_p0 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            grp_fu_373_p0 <= bitcast_ln354_11_fu_1225_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            grp_fu_373_p0 <= reg_428;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_373_p0 <= bitcast_ln354_9_fu_898_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_373_p0 <= reg_460;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            grp_fu_373_p0 <= bitcast_ln354_1_fu_734_p1;
        else 
            grp_fu_373_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_373_p1_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state51, ap_CS_fsm_state84, ap_CS_fsm_state96, ap_CS_fsm_state113, ap_CS_fsm_state49, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state95, ap_CS_fsm_state102, ap_CS_fsm_state111)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state96) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state95) or (ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_373_p1 <= ap_const_lv32_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            grp_fu_373_p1 <= ap_const_lv32_47000000;
        else 
            grp_fu_373_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_380_p0_assign_proc : process(reg_401, reg_442, control_law_reg_2443, ap_CS_fsm_state49, ap_CS_fsm_state82, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_fu_380_p0 <= reg_442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            grp_fu_380_p0 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_380_p0 <= control_law_reg_2443;
        else 
            grp_fu_380_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_385_p0_assign_proc : process(reg_401, reg_442, control_law_reg_2443, ap_CS_fsm_state49, ap_CS_fsm_state82, ap_CS_fsm_state111)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
            grp_fu_385_p0 <= reg_442;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            grp_fu_385_p0 <= reg_401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            grp_fu_385_p0 <= control_law_reg_2443;
        else 
            grp_fu_385_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_sin_or_cos_float_s_fu_264_ap_start <= grp_sin_or_cos_float_s_fu_264_ap_start_reg;
    grp_sin_or_cos_float_s_fu_279_ap_start <= grp_sin_or_cos_float_s_fu_279_ap_start_reg;
    icmp_ln11_1_fu_716_p2 <= "1" when (trunc_ln11_fu_706_p1 = ap_const_lv23_0) else "0";
    icmp_ln11_fu_710_p2 <= "0" when (tmp_2_fu_696_p4 = ap_const_lv8_FF) else "1";
    icmp_ln15_1_fu_923_p2 <= "1" when (trunc_ln15_fu_913_p1 = ap_const_lv23_0) else "0";
    icmp_ln15_2_fu_1158_p2 <= "0" when (tmp_21_fu_1144_p4 = ap_const_lv8_FF) else "1";
    icmp_ln15_3_fu_1164_p2 <= "1" when (trunc_ln15_1_fu_1154_p1 = ap_const_lv23_0) else "0";
    icmp_ln15_4_fu_1244_p2 <= "0" when (tmp_26_fu_1230_p4 = ap_const_lv8_FF) else "1";
    icmp_ln15_5_fu_1250_p2 <= "1" when (trunc_ln15_2_fu_1240_p1 = ap_const_lv23_0) else "0";
    icmp_ln15_fu_917_p2 <= "0" when (tmp_16_fu_903_p4 = ap_const_lv8_FF) else "1";
    icmp_ln19_1_fu_1802_p2 <= "1" when (trunc_ln19_fu_1792_p1 = ap_const_lv23_0) else "0";
    icmp_ln19_fu_1796_p2 <= "0" when (tmp_46_fu_1782_p4 = ap_const_lv8_FF) else "1";
    icmp_ln20_1_fu_759_p2 <= "1" when (trunc_ln20_fu_749_p1 = ap_const_lv23_0) else "0";
    icmp_ln20_fu_753_p2 <= "0" when (tmp_5_fu_739_p4 = ap_const_lv8_FF) else "1";
    icmp_ln21_1_fu_1046_p2 <= "1" when (trunc_ln21_fu_1036_p1 = ap_const_lv23_0) else "0";
    icmp_ln21_2_fu_1440_p2 <= "0" when (tmp_31_fu_1426_p4 = ap_const_lv8_FF) else "1";
    icmp_ln21_3_fu_1446_p2 <= "1" when (trunc_ln21_1_fu_1436_p1 = ap_const_lv23_0) else "0";
    icmp_ln21_fu_1040_p2 <= "0" when (tmp_8_fu_1026_p4 = ap_const_lv8_FF) else "1";
    icmp_ln23_1_fu_1888_p2 <= "1" when (trunc_ln23_fu_1878_p1 = ap_const_lv23_0) else "0";
    icmp_ln23_fu_1882_p2 <= "0" when (tmp_51_fu_1868_p4 = ap_const_lv8_FF) else "1";
    icmp_ln25_1_fu_838_p2 <= "1" when (trunc_ln25_fu_828_p1 = ap_const_lv23_0) else "0";
    icmp_ln25_2_fu_1354_p2 <= "0" when (tmp_36_fu_1340_p4 = ap_const_lv8_FF) else "1";
    icmp_ln25_3_fu_1360_p2 <= "1" when (trunc_ln25_1_fu_1350_p1 = ap_const_lv23_0) else "0";
    icmp_ln25_fu_832_p2 <= "0" when (tmp_11_fu_818_p4 = ap_const_lv8_FF) else "1";
    icmp_ln30_1_fu_543_p2 <= "1" when (trunc_ln30_fu_533_p1 = ap_const_lv23_0) else "0";
    icmp_ln30_fu_537_p2 <= "0" when (tmp_s_fu_523_p4 = ap_const_lv8_FF) else "1";
    icmp_ln47_fu_578_p2 <= "1" when (signed(dc_cnt) > signed(ap_const_lv32_E)) else "0";
    icmp_ln9_1_fu_1555_p2 <= "1" when (trunc_ln9_fu_1545_p1 = ap_const_lv23_0) else "0";
    icmp_ln9_fu_1549_p2 <= "0" when (tmp_41_fu_1535_p4 = ap_const_lv8_FF) else "1";
    isNeg_1_fu_2010_p3 <= add_ln344_1_fu_2004_p2(8 downto 8);
    isNeg_2_fu_2149_p3 <= add_ln344_2_fu_2143_p2(8 downto 8);
    isNeg_fu_1675_p3 <= add_ln344_fu_1669_p2(8 downto 8);
    mantissa_1_fu_1986_p4 <= ((ap_const_lv1_1 & tmp_74_fu_1982_p1) & ap_const_lv1_0);
    mantissa_2_fu_2125_p4 <= ((ap_const_lv1_1 & tmp_76_fu_2121_p1) & ap_const_lv1_0);
    mantissa_fu_1651_p4 <= ((ap_const_lv1_1 & tmp_72_fu_1647_p1) & ap_const_lv1_0);
    or_ln11_fu_765_p2 <= (icmp_ln11_reg_2378 or icmp_ln11_1_reg_2383);
    or_ln15_1_fu_1170_p2 <= (icmp_ln15_3_fu_1164_p2 or icmp_ln15_2_fu_1158_p2);
    or_ln15_2_fu_1256_p2 <= (icmp_ln15_5_fu_1250_p2 or icmp_ln15_4_fu_1244_p2);
    or_ln15_fu_929_p2 <= (icmp_ln15_fu_917_p2 or icmp_ln15_1_fu_923_p2);
    or_ln19_fu_1808_p2 <= (icmp_ln19_fu_1796_p2 or icmp_ln19_1_fu_1802_p2);
    or_ln20_fu_783_p2 <= (icmp_ln20_reg_2393 or icmp_ln20_1_reg_2398);
    or_ln21_1_fu_1452_p2 <= (icmp_ln21_3_fu_1446_p2 or icmp_ln21_2_fu_1440_p2);
    or_ln21_fu_1052_p2 <= (icmp_ln21_fu_1040_p2 or icmp_ln21_1_fu_1046_p2);
    or_ln23_fu_1894_p2 <= (icmp_ln23_fu_1882_p2 or icmp_ln23_1_fu_1888_p2);
    or_ln25_1_fu_1366_p2 <= (icmp_ln25_3_fu_1360_p2 or icmp_ln25_2_fu_1354_p2);
    or_ln25_fu_844_p2 <= (icmp_ln25_fu_832_p2 or icmp_ln25_1_fu_838_p2);
    or_ln30_fu_549_p2 <= (icmp_ln30_fu_537_p2 or icmp_ln30_1_fu_543_p2);
    or_ln9_fu_1561_p2 <= (icmp_ln9_fu_1549_p2 or icmp_ln9_1_fu_1555_p2);
    p_Result_24_fu_726_p1 <= data_V_1_fu_722_p1(31 - 1 downto 0);
    p_Result_25_fu_1013_p1 <= data_V_2_fu_1009_p1(31 - 1 downto 0);
    p_Result_26_fu_805_p1 <= data_V_3_fu_801_p1(31 - 1 downto 0);
    p_Result_27_fu_890_p1 <= data_V_4_fu_887_p1(31 - 1 downto 0);
    p_Result_28_fu_1131_p1 <= data_V_5_fu_1127_p1(31 - 1 downto 0);
    p_Result_29_fu_1217_p1 <= data_V_6_fu_1213_p1(31 - 1 downto 0);
    p_Result_30_fu_1413_p1 <= data_V_7_fu_1409_p1(31 - 1 downto 0);
    p_Result_31_fu_1327_p1 <= data_V_8_fu_1323_p1(31 - 1 downto 0);
    p_Result_32_fu_1522_p1 <= data_V_9_fu_1519_p1(31 - 1 downto 0);
    p_Result_33_fu_1769_p1 <= data_V_10_fu_1765_p1(31 - 1 downto 0);
    p_Result_34_fu_1855_p1 <= data_V_11_fu_1851_p1(31 - 1 downto 0);
    p_Result_35_fu_1629_p3 <= data_V_12_fu_1626_p1(31 downto 31);
    p_Result_36_fu_1964_p3 <= data_V_13_fu_1961_p1(31 downto 31);
    p_Result_37_fu_2103_p3 <= data_V_14_fu_2100_p1(31 downto 31);
    p_Result_s_fu_683_p1 <= data_V_fu_679_p1(31 - 1 downto 0);
    pwmStreamObj_data_V_fu_2239_p4 <= ((result_V_11_fu_2231_p3 & result_V_10_fu_2092_p3) & result_V_reg_2759);
    r_V_10_fu_2183_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_2135_p1),to_integer(unsigned('0' & zext_ln1340_2_fu_2179_p1(31-1 downto 0)))));
    r_V_11_fu_2189_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_2135_p1),to_integer(unsigned('0' & zext_ln1340_2_fu_2179_p1(31-1 downto 0)))));
    r_V_7_fu_1715_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_1661_p1),to_integer(unsigned('0' & zext_ln1340_fu_1705_p1(31-1 downto 0)))));
    r_V_8_fu_2044_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_1996_p1),to_integer(unsigned('0' & zext_ln1340_1_fu_2040_p1(31-1 downto 0)))));
    r_V_9_fu_2050_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_1996_p1),to_integer(unsigned('0' & zext_ln1340_1_fu_2040_p1(31-1 downto 0)))));
    r_V_fu_1709_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_1661_p1),to_integer(unsigned('0' & zext_ln1340_fu_1705_p1(31-1 downto 0)))));
    ref_torque_fu_988_p3 <= 
        grp_fu_356_p1 when (and_ln15_fu_984_p2(0) = '1') else 
        control_law_reg_2443;
    result_V_10_fu_2092_p3 <= 
        result_V_5_fu_2086_p2 when (p_Result_36_fu_1964_p3(0) = '1') else 
        val_1_fu_2078_p3;
    result_V_11_fu_2231_p3 <= 
        result_V_9_fu_2225_p2 when (p_Result_37_fu_2103_p3(0) = '1') else 
        val_2_fu_2217_p3;
    result_V_2_fu_1751_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(val_fu_1743_p3));
    result_V_5_fu_2086_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(val_1_fu_2078_p3));
    result_V_9_fu_2225_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(val_2_fu_2217_p3));
    result_V_fu_1757_p3 <= 
        result_V_2_fu_1751_p2 when (p_Result_35_fu_1629_p3(0) = '1') else 
        val_fu_1743_p3;
        sext_ln12_fu_1599_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_45_fu_1591_p3),32));

        sext_ln1340_1_fu_2036_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_fu_2028_p3),32));

        sext_ln1340_2_fu_2175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_fu_2167_p3),32));

        sext_ln1340_fu_1701_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_1693_p3),32));

        sext_ln1364_1_fu_2024_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1364_1_fu_2018_p2),9));

        sext_ln1364_2_fu_2163_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1364_2_fu_2157_p2),9));

        sext_ln1364_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1364_fu_1683_p2),9));

        sext_ln16_1_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_1200_p3),32));

        sext_ln16_2_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_1286_p3),32));

        sext_ln16_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_fu_959_p3),32));

        sext_ln20_fu_1846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_50_fu_1838_p3),32));

        sext_ln22_1_fu_1490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_35_fu_1482_p3),32));

        sext_ln22_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_1082_p3),32));

        sext_ln24_fu_1932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_55_fu_1924_p3),32));

        sext_ln26_1_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_40_fu_1396_p3),32));

        sext_ln26_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_874_p3),32));

        sext_ln27_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1691_1_fu_481_p4),32));

    sub_ln12_fu_1585_p2 <= std_logic_vector(unsigned(zext_ln10_7_fu_1572_p1) - unsigned(zext_ln12_fu_1581_p1));
    sub_ln1364_1_fu_2018_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_73_fu_1972_p4));
    sub_ln1364_2_fu_2157_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_75_fu_2111_p4));
    sub_ln1364_fu_1683_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(tmp_71_fu_1637_p4));
    sub_ln16_1_fu_1194_p2 <= std_logic_vector(unsigned(zext_ln10_3_fu_1181_p1) - unsigned(zext_ln16_1_fu_1190_p1));
    sub_ln16_2_fu_1280_p2 <= std_logic_vector(unsigned(zext_ln10_4_fu_1267_p1) - unsigned(zext_ln16_2_fu_1276_p1));
    sub_ln16_fu_953_p2 <= std_logic_vector(unsigned(zext_ln10_2_fu_940_p1) - unsigned(zext_ln16_fu_949_p1));
    sub_ln20_fu_1832_p2 <= std_logic_vector(unsigned(zext_ln10_8_fu_1819_p1) - unsigned(zext_ln20_fu_1828_p1));
    sub_ln22_1_fu_1476_p2 <= std_logic_vector(unsigned(zext_ln10_5_fu_1463_p1) - unsigned(zext_ln22_1_fu_1472_p1));
    sub_ln22_fu_1076_p2 <= std_logic_vector(unsigned(zext_ln10_fu_1063_p1) - unsigned(zext_ln22_fu_1072_p1));
    sub_ln24_fu_1918_p2 <= std_logic_vector(unsigned(zext_ln10_9_fu_1905_p1) - unsigned(zext_ln24_fu_1914_p1));
    sub_ln26_1_fu_1390_p2 <= std_logic_vector(unsigned(zext_ln10_6_fu_1377_p1) - unsigned(zext_ln26_2_fu_1386_p1));
    sub_ln26_fu_868_p2 <= std_logic_vector(unsigned(zext_ln10_1_fu_855_p1) - unsigned(zext_ln26_1_fu_864_p1));
    tmp_10_fu_1082_p3 <= (sub_ln22_fu_1076_p2 & ap_const_lv15_0);
    tmp_11_fu_818_p4 <= data_V_3_fu_801_p1(30 downto 23);
    tmp_15_fu_874_p3 <= (sub_ln26_fu_868_p2 & ap_const_lv15_0);
    tmp_16_fu_903_p4 <= data_V_4_fu_887_p1(30 downto 23);
    tmp_20_fu_959_p3 <= (sub_ln16_fu_953_p2 & ap_const_lv15_0);
    tmp_21_fu_1144_p4 <= data_V_5_fu_1127_p1(30 downto 23);
    tmp_25_fu_1200_p3 <= (sub_ln16_1_fu_1194_p2 & ap_const_lv15_0);
    tmp_26_fu_1230_p4 <= data_V_6_fu_1213_p1(30 downto 23);
    tmp_2_fu_696_p4 <= data_V_fu_679_p1(30 downto 23);
    tmp_30_fu_1286_p3 <= (sub_ln16_2_fu_1280_p2 & ap_const_lv15_0);
    tmp_31_fu_1426_p4 <= data_V_7_fu_1409_p1(30 downto 23);
    tmp_35_fu_1482_p3 <= (sub_ln22_1_fu_1476_p2 & ap_const_lv15_0);
    tmp_36_fu_1340_p4 <= data_V_8_fu_1323_p1(30 downto 23);
    tmp_40_fu_1396_p3 <= (sub_ln26_1_fu_1390_p2 & ap_const_lv15_0);
    tmp_41_fu_1535_p4 <= data_V_9_fu_1519_p1(30 downto 23);
    tmp_45_fu_1591_p3 <= (sub_ln12_fu_1585_p2 & ap_const_lv15_0);
    tmp_46_fu_1782_p4 <= data_V_10_fu_1765_p1(30 downto 23);
    tmp_50_fu_1838_p3 <= (sub_ln20_fu_1832_p2 & ap_const_lv15_0);
    tmp_51_fu_1868_p4 <= data_V_11_fu_1851_p1(30 downto 23);
    tmp_55_fu_1924_p3 <= (sub_ln24_fu_1918_p2 & ap_const_lv15_0);
    tmp_57_fu_1733_p4 <= r_V_7_fu_1715_p2(39 downto 24);
    tmp_59_fu_2068_p4 <= r_V_9_fu_2050_p2(39 downto 24);
    tmp_5_fu_739_p4 <= data_V_1_fu_722_p1(30 downto 23);
    tmp_60_fu_1721_p3 <= r_V_fu_1709_p2(24 downto 24);
    tmp_62_fu_2207_p4 <= r_V_11_fu_2189_p2(39 downto 24);
    tmp_65_fu_2056_p3 <= r_V_8_fu_2044_p2(24 downto 24);
    tmp_70_fu_2195_p3 <= r_V_10_fu_2183_p2(24 downto 24);
    tmp_71_fu_1637_p4 <= data_V_12_fu_1626_p1(30 downto 23);
    tmp_72_fu_1647_p1 <= data_V_12_fu_1626_p1(23 - 1 downto 0);
    tmp_73_fu_1972_p4 <= data_V_13_fu_1961_p1(30 downto 23);
    tmp_74_fu_1982_p1 <= data_V_13_fu_1961_p1(23 - 1 downto 0);
    tmp_75_fu_2111_p4 <= data_V_14_fu_2100_p1(30 downto 23);
    tmp_76_fu_2121_p1 <= data_V_14_fu_2100_p1(23 - 1 downto 0);
    tmp_8_fu_1026_p4 <= data_V_2_fu_1009_p1(30 downto 23);
    tmp_s_fu_523_p4 <= bitcast_ln30_fu_520_p1(30 downto 23);
    trunc_ln11_fu_706_p1 <= data_V_fu_679_p1(23 - 1 downto 0);
    trunc_ln15_1_fu_1154_p1 <= data_V_5_fu_1127_p1(23 - 1 downto 0);
    trunc_ln15_2_fu_1240_p1 <= data_V_6_fu_1213_p1(23 - 1 downto 0);
    trunc_ln15_fu_913_p1 <= data_V_4_fu_887_p1(23 - 1 downto 0);
    trunc_ln1691_1_fu_481_p4 <= A_TDATA_int_regslice(79 downto 64);
    trunc_ln19_fu_1792_p1 <= data_V_10_fu_1765_p1(23 - 1 downto 0);
    trunc_ln20_fu_749_p1 <= data_V_1_fu_722_p1(23 - 1 downto 0);
    trunc_ln21_1_fu_1436_p1 <= data_V_7_fu_1409_p1(23 - 1 downto 0);
    trunc_ln21_fu_1036_p1 <= data_V_2_fu_1009_p1(23 - 1 downto 0);
    trunc_ln23_fu_1878_p1 <= data_V_11_fu_1851_p1(23 - 1 downto 0);
    trunc_ln25_1_fu_1350_p1 <= data_V_8_fu_1323_p1(23 - 1 downto 0);
    trunc_ln25_fu_828_p1 <= data_V_3_fu_801_p1(23 - 1 downto 0);
    trunc_ln30_fu_533_p1 <= bitcast_ln30_fu_520_p1(23 - 1 downto 0);
    trunc_ln9_fu_1545_p1 <= data_V_9_fu_1519_p1(23 - 1 downto 0);
    ush_1_fu_2028_p3 <= 
        sext_ln1364_1_fu_2024_p1 when (isNeg_1_fu_2010_p3(0) = '1') else 
        add_ln344_1_fu_2004_p2;
    ush_2_fu_2167_p3 <= 
        sext_ln1364_2_fu_2163_p1 when (isNeg_2_fu_2149_p3(0) = '1') else 
        add_ln344_2_fu_2143_p2;
    ush_fu_1693_p3 <= 
        sext_ln1364_fu_1689_p1 when (isNeg_fu_1675_p3(0) = '1') else 
        add_ln344_fu_1669_p2;
    val_1_fu_2078_p3 <= 
        zext_ln671_1_fu_2064_p1 when (isNeg_1_fu_2010_p3(0) = '1') else 
        tmp_59_fu_2068_p4;
    val_2_fu_2217_p3 <= 
        zext_ln671_2_fu_2203_p1 when (isNeg_2_fu_2149_p3(0) = '1') else 
        tmp_62_fu_2207_p4;
    val_fu_1743_p3 <= 
        zext_ln671_fu_1729_p1 when (isNeg_fu_1675_p3(0) = '1') else 
        tmp_57_fu_1733_p4;
    vel_corr_fu_651_p1 <= xor_ln70_fu_645_p2;
    xor_ln10_fu_1110_p2 <= (bitcast_ln10_fu_1107_p1 xor ap_const_lv32_80000000);
    xor_ln11_1_fu_999_p2 <= (bitcast_ln11_2_fu_995_p1 xor ap_const_lv32_80000000);
    xor_ln11_fu_669_p2 <= (bitcast_ln11_fu_665_p1 xor ap_const_lv32_80000000);
    xor_ln17_fu_1604_p2 <= (data_V_9_fu_1519_p1 xor ap_const_lv32_80000000);
    xor_ln70_fu_645_p2 <= (bitcast_ln70_fu_641_p1 xor ap_const_lv32_80000000);
    zext_ln10_1_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_2_fu_850_p2),2));
    zext_ln10_2_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_4_fu_935_p2),2));
    zext_ln10_3_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_6_fu_1176_p2),2));
    zext_ln10_4_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_8_fu_1262_p2),2));
    zext_ln10_5_fu_1463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_10_fu_1458_p2),2));
    zext_ln10_6_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_12_fu_1372_p2),2));
    zext_ln10_7_fu_1572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_14_fu_1567_p2),2));
    zext_ln10_8_fu_1819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_16_fu_1814_p2),2));
    zext_ln10_9_fu_1905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_18_fu_1900_p2),2));
    zext_ln10_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_fu_1058_p2),2));
    zext_ln12_fu_1581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_15_fu_1576_p2),2));
    zext_ln1340_1_fu_2040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1340_1_fu_2036_p1),63));
    zext_ln1340_2_fu_2179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1340_2_fu_2175_p1),63));
    zext_ln1340_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1340_fu_1701_p1),63));
    zext_ln15_1_fu_1996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_1986_p4),63));
    zext_ln15_2_fu_2135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_2125_p4),63));
    zext_ln15_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_1651_p4),63));
    zext_ln16_1_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_7_fu_1185_p2),2));
    zext_ln16_2_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_9_fu_1271_p2),2));
    zext_ln16_fu_949_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_5_fu_944_p2),2));
    zext_ln20_fu_1828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_17_fu_1823_p2),2));
    zext_ln22_1_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_11_fu_1467_p2),2));
    zext_ln22_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_1_fu_1067_p2),2));
    zext_ln24_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_19_fu_1909_p2),2));
    zext_ln26_1_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_3_fu_859_p2),2));
    zext_ln26_2_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln10_13_fu_1381_p2),2));
    zext_ln26_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_reg_2254),64));
    zext_ln344_1_fu_2000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_1972_p4),9));
    zext_ln344_2_fu_2139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_fu_2111_p4),9));
    zext_ln344_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_1637_p4),9));
    zext_ln368_10_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_33_fu_1769_p1),32));
    zext_ln368_11_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_34_fu_1855_p1),32));
    zext_ln368_1_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_24_fu_726_p1),32));
    zext_ln368_2_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_25_fu_1013_p1),32));
    zext_ln368_3_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_26_fu_805_p1),32));
    zext_ln368_4_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_27_fu_890_p1),32));
    zext_ln368_5_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_28_fu_1131_p1),32));
    zext_ln368_6_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_29_fu_1217_p1),32));
    zext_ln368_7_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_30_fu_1413_p1),32));
    zext_ln368_8_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_31_fu_1327_p1),32));
    zext_ln368_9_fu_1526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_32_fu_1522_p1),32));
    zext_ln368_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_683_p1),32));
    zext_ln671_1_fu_2064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_2056_p3),16));
    zext_ln671_2_fu_2203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_2195_p3),16));
    zext_ln671_fu_1729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_1721_p3),16));
    zext_ln78_fu_2248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pwmStreamObj_data_V_fu_2239_p4),64));
end behav;
